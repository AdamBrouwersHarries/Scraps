; ModuleID = 'build/exec/cffi.c'
source_filename = "build/exec/cffi.c"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-macosx13.0.0"

%struct.IORef_Storage = type { %struct.Value**, i32, i32 }
%struct.Value = type { %struct.Value_header }
%struct.Value_header = type { i32, i32 }
%struct.Value_Arglist = type { %struct.Value_header, i32, i32, %struct.Value** }
%struct.Value_Closure = type { %struct.Value_header, %struct.Value* (%struct.Value_Arglist*)*, %struct.Value_Arglist* }
%struct.Value_Constructor = type { %struct.Value_header, i32, i32, i8*, %struct.Value** }
%struct.Value_Int64 = type { %struct.Value_header, i64 }
%struct.Value_String = type { %struct.Value_header, i8* }
%struct.Value_Integer = type { %struct.Value_header, [1 x %struct.__mpz_struct] }
%struct.__mpz_struct = type { i32, i32, i64* }
%struct.AConAlt = type { i8*, i32 }
%struct.Value_Char = type { %struct.Value_header, i8 }
%struct.Value_Bits8 = type { %struct.Value_header, i8 }
%struct.Value_World = type { %struct.Value_header, %struct.IORef_Storage* }

@.str = private unnamed_addr constant [18 x i8] c"Prelude_Num_MkNum\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"Prelude_Show_MkShow\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"Prelude_Num_MkIntegral\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"Prelude_EqOrd_MkEq\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"Prelude_EqOrd_MkOrd\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"Prelude_Num_MkNeg\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"Builtin_MkPair\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"10\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"Prelude_Basics_Nil\00", align 1
@.str.12 = private unnamed_addr constant [28 x i8] c"Prelude_Basics__colon_colon\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"Prelude_Types_Just\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"Prelude_Types_Nothing\00", align 1
@.str.15 = private unnamed_addr constant [34 x i8] c"Prelude_Types_Stream__colon_colon\00", align 1
@.str.16 = private unnamed_addr constant [79 x i8] c"Unhandled input for Prelude.Num.case block in mod at Prelude.Num:131:3--133:40\00", align 1
@.str.17 = private unnamed_addr constant [79 x i8] c"Unhandled input for Prelude.Num.case block in div at Prelude.Num:128:3--130:40\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"NUL\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"SOH\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"STX\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"ETX\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c"EOT\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"ENQ\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"ACK\00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c"BEL\00", align 1
@.str.27 = private unnamed_addr constant [3 x i8] c"BS\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c"HT\00", align 1
@.str.29 = private unnamed_addr constant [3 x i8] c"LF\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c"VT\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"FF\00", align 1
@.str.32 = private unnamed_addr constant [3 x i8] c"CR\00", align 1
@.str.33 = private unnamed_addr constant [3 x i8] c"SO\00", align 1
@.str.34 = private unnamed_addr constant [3 x i8] c"SI\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"DLE\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"DC1\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"DC2\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c"DC3\00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c"DC4\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"NAK\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"SYN\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c"ETB\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"CAN\00", align 1
@.str.44 = private unnamed_addr constant [3 x i8] c"EM\00", align 1
@.str.45 = private unnamed_addr constant [4 x i8] c"SUB\00", align 1
@.str.46 = private unnamed_addr constant [4 x i8] c"ESC\00", align 1
@.str.47 = private unnamed_addr constant [3 x i8] c"FS\00", align 1
@.str.48 = private unnamed_addr constant [3 x i8] c"GS\00", align 1
@.str.49 = private unnamed_addr constant [3 x i8] c"RS\00", align 1
@.str.50 = private unnamed_addr constant [3 x i8] c"US\00", align 1
@.str.51 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.52 = private unnamed_addr constant [18 x i8] c"Prelude_Show_Open\00", align 1
@.str.53 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.54 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.55 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.56 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.57 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.58 = private unnamed_addr constant [3 x i8] c"\\\22\00", align 1
@.str.59 = private unnamed_addr constant [3 x i8] c"\\\\\00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"\\DEL\00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"\\SO\00", align 1
@.str.62 = private unnamed_addr constant [3 x i8] c"\\v\00", align 1
@.str.63 = private unnamed_addr constant [3 x i8] c"\\t\00", align 1
@.str.64 = private unnamed_addr constant [3 x i8] c"\\r\00", align 1
@.str.65 = private unnamed_addr constant [3 x i8] c"\\n\00", align 1
@.str.66 = private unnamed_addr constant [3 x i8] c"\\f\00", align 1
@.str.67 = private unnamed_addr constant [3 x i8] c"\\b\00", align 1
@.str.68 = private unnamed_addr constant [3 x i8] c"\\a\00", align 1
@.str.69 = private unnamed_addr constant [3 x i8] c"\\&\00", align 1
@.str.70 = private unnamed_addr constant [25 x i8] c"Prelude_Show_PrefixMinus\00", align 1
@.str.71 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.72 = private unnamed_addr constant [2 x i8] c"3\00", align 1
@.str.73 = private unnamed_addr constant [2 x i8] c"4\00", align 1
@.str.74 = private unnamed_addr constant [2 x i8] c"5\00", align 1
@.str.75 = private unnamed_addr constant [2 x i8] c"6\00", align 1
@global_IORef_Storage = common global %struct.IORef_Storage* null, align 8

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @__mainExpression_0() #0 {
  %1 = alloca %struct.Value_Arglist*, align 8
  %2 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value_Arglist*, align 8
  %5 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 1)
  store %struct.Value_Arglist* %8, %struct.Value_Arglist** %1, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @_braceOpen__mainExpression_colon0_braceClose_0_arglist, %struct.Value* (%struct.Value_Arglist*)** %2, align 8
  %9 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %2, align 8
  %10 = load %struct.Value_Arglist*, %struct.Value_Arglist** %1, align 8
  %11 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %9, %struct.Value_Arglist* noundef %10)
  %12 = bitcast %struct.Value_Closure* %11 to %struct.Value*
  store %struct.Value* %12, %struct.Value** %3, align 8
  %13 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %13, %struct.Value_Arglist** %4, align 8
  %14 = load %struct.Value*, %struct.Value** %3, align 8
  %15 = call %struct.Value* @newReference(%struct.Value* noundef %14)
  %16 = load %struct.Value_Arglist*, %struct.Value_Arglist** %4, align 8
  %17 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %16, i32 0, i32 3
  %18 = load %struct.Value**, %struct.Value*** %17, align 8
  %19 = getelementptr inbounds %struct.Value*, %struct.Value** %18, i64 0
  store %struct.Value* %15, %struct.Value** %19, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @PrimIO_unsafePerformIO_arglist, %struct.Value* (%struct.Value_Arglist*)** %5, align 8
  %20 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %5, align 8
  %21 = load %struct.Value_Arglist*, %struct.Value_Arglist** %4, align 8
  %22 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %20, %struct.Value_Arglist* noundef %21)
  %23 = bitcast %struct.Value_Closure* %22 to %struct.Value*
  store %struct.Value* %23, %struct.Value** %6, align 8
  %24 = load %struct.Value*, %struct.Value** %6, align 8
  store %struct.Value* %24, %struct.Value** %7, align 8
  %25 = load %struct.Value*, %struct.Value** %3, align 8
  call void @removeReference(%struct.Value* noundef %25)
  %26 = load %struct.Value*, %struct.Value** %7, align 8
  ret %struct.Value* %26
}

declare %struct.Value_Arglist* @newArglist(i32 noundef, i32 noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @_braceOpen__mainExpression_colon0_braceClose_0_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @_braceOpen__mainExpression_colon0_braceClose_0(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

declare %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef, %struct.Value_Arglist* noundef) #1

declare %struct.Value* @newReference(%struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @PrimIO_unsafePerformIO_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @PrimIO_unsafePerformIO(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

declare void @removeReference(%struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @__mainExpression_0_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = call %struct.Value* @__mainExpression_0()
  ret %struct.Value* %3
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @_braceOpen__mainExpression_colon0_braceClose_0(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value_Arglist*, align 8
  %4 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %7 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %7, %struct.Value_Arglist** %3, align 8
  %8 = load %struct.Value*, %struct.Value** %2, align 8
  %9 = call %struct.Value* @newReference(%struct.Value* noundef %8)
  %10 = load %struct.Value_Arglist*, %struct.Value_Arglist** %3, align 8
  %11 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %10, i32 0, i32 3
  %12 = load %struct.Value**, %struct.Value*** %11, align 8
  %13 = getelementptr inbounds %struct.Value*, %struct.Value** %12, i64 0
  store %struct.Value* %9, %struct.Value** %13, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Main_main_arglist, %struct.Value* (%struct.Value_Arglist*)** %4, align 8
  %14 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %4, align 8
  %15 = load %struct.Value_Arglist*, %struct.Value_Arglist** %3, align 8
  %16 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %14, %struct.Value_Arglist* noundef %15)
  %17 = bitcast %struct.Value_Closure* %16 to %struct.Value*
  store %struct.Value* %17, %struct.Value** %5, align 8
  %18 = load %struct.Value*, %struct.Value** %5, align 8
  store %struct.Value* %18, %struct.Value** %6, align 8
  %19 = load %struct.Value*, %struct.Value** %6, align 8
  ret %struct.Value* %19
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Main_main(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @csegen_6() #0 {
  %1 = alloca %struct.Value_Arglist*, align 8
  %2 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value_Arglist*, align 8
  %5 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value_Arglist*, align 8
  %8 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value_Constructor*, align 8
  %11 = alloca %struct.Value*, align 8
  %12 = call %struct.Value_Arglist* @newArglist(i32 noundef 2, i32 noundef 2)
  store %struct.Value_Arglist* %12, %struct.Value_Arglist** %1, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @_braceOpencsegen_colon6_braceClose_0_arglist, %struct.Value* (%struct.Value_Arglist*)** %2, align 8
  %13 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %2, align 8
  %14 = load %struct.Value_Arglist*, %struct.Value_Arglist** %1, align 8
  %15 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %13, %struct.Value_Arglist* noundef %14)
  %16 = bitcast %struct.Value_Closure* %15 to %struct.Value*
  store %struct.Value* %16, %struct.Value** %3, align 8
  %17 = call %struct.Value_Arglist* @newArglist(i32 noundef 2, i32 noundef 2)
  store %struct.Value_Arglist* %17, %struct.Value_Arglist** %4, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @_braceOpencsegen_colon6_braceClose_1_arglist, %struct.Value* (%struct.Value_Arglist*)** %5, align 8
  %18 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %5, align 8
  %19 = load %struct.Value_Arglist*, %struct.Value_Arglist** %4, align 8
  %20 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %18, %struct.Value_Arglist* noundef %19)
  %21 = bitcast %struct.Value_Closure* %20 to %struct.Value*
  store %struct.Value* %21, %struct.Value** %6, align 8
  %22 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 1)
  store %struct.Value_Arglist* %22, %struct.Value_Arglist** %7, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @_braceOpencsegen_colon6_braceClose_2_arglist, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %23 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %24 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %25 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %23, %struct.Value_Arglist* noundef %24)
  %26 = bitcast %struct.Value_Closure* %25 to %struct.Value*
  store %struct.Value* %26, %struct.Value** %9, align 8
  %27 = call %struct.Value_Constructor* @newConstructor(i32 noundef 3, i32 noundef 0, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0))
  store %struct.Value_Constructor* %27, %struct.Value_Constructor** %10, align 8
  %28 = load %struct.Value*, %struct.Value** %3, align 8
  %29 = call %struct.Value* @newReference(%struct.Value* noundef %28)
  %30 = load %struct.Value_Constructor*, %struct.Value_Constructor** %10, align 8
  %31 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %30, i32 0, i32 4
  %32 = load %struct.Value**, %struct.Value*** %31, align 8
  %33 = getelementptr inbounds %struct.Value*, %struct.Value** %32, i64 0
  store %struct.Value* %29, %struct.Value** %33, align 8
  %34 = load %struct.Value*, %struct.Value** %6, align 8
  %35 = call %struct.Value* @newReference(%struct.Value* noundef %34)
  %36 = load %struct.Value_Constructor*, %struct.Value_Constructor** %10, align 8
  %37 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %36, i32 0, i32 4
  %38 = load %struct.Value**, %struct.Value*** %37, align 8
  %39 = getelementptr inbounds %struct.Value*, %struct.Value** %38, i64 1
  store %struct.Value* %35, %struct.Value** %39, align 8
  %40 = load %struct.Value*, %struct.Value** %9, align 8
  %41 = call %struct.Value* @newReference(%struct.Value* noundef %40)
  %42 = load %struct.Value_Constructor*, %struct.Value_Constructor** %10, align 8
  %43 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %42, i32 0, i32 4
  %44 = load %struct.Value**, %struct.Value*** %43, align 8
  %45 = getelementptr inbounds %struct.Value*, %struct.Value** %44, i64 2
  store %struct.Value* %41, %struct.Value** %45, align 8
  %46 = load %struct.Value_Constructor*, %struct.Value_Constructor** %10, align 8
  %47 = bitcast %struct.Value_Constructor* %46 to %struct.Value*
  store %struct.Value* %47, %struct.Value** %11, align 8
  %48 = load %struct.Value*, %struct.Value** %9, align 8
  call void @removeReference(%struct.Value* noundef %48)
  %49 = load %struct.Value*, %struct.Value** %6, align 8
  call void @removeReference(%struct.Value* noundef %49)
  %50 = load %struct.Value*, %struct.Value** %3, align 8
  call void @removeReference(%struct.Value* noundef %50)
  %51 = load %struct.Value*, %struct.Value** %11, align 8
  ret %struct.Value* %51
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @_braceOpencsegen_colon6_braceClose_0_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @_braceOpencsegen_colon6_braceClose_0(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @_braceOpencsegen_colon6_braceClose_1_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @_braceOpencsegen_colon6_braceClose_1(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @_braceOpencsegen_colon6_braceClose_2_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @_braceOpencsegen_colon6_braceClose_2(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

declare %struct.Value_Constructor* @newConstructor(i32 noundef, i32 noundef, i8* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @csegen_6_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = call %struct.Value* @csegen_6()
  ret %struct.Value* %3
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @_braceOpencsegen_colon6_braceClose_2(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %4 = load %struct.Value*, %struct.Value** %2, align 8
  %5 = call %struct.Value* @cast_Integer_to_Int64(%struct.Value* noundef %4)
  store %struct.Value* %5, %struct.Value** %3, align 8
  %6 = load %struct.Value*, %struct.Value** %3, align 8
  ret %struct.Value* %6
}

declare %struct.Value* @cast_Integer_to_Int64(%struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @_braceOpencsegen_colon6_braceClose_1(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %6 = load %struct.Value*, %struct.Value** %3, align 8
  %7 = load %struct.Value*, %struct.Value** %4, align 8
  %8 = call %struct.Value* @mul_Int64(%struct.Value* noundef %6, %struct.Value* noundef %7)
  store %struct.Value* %8, %struct.Value** %5, align 8
  %9 = load %struct.Value*, %struct.Value** %5, align 8
  ret %struct.Value* %9
}

declare %struct.Value* @mul_Int64(%struct.Value* noundef, %struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @_braceOpencsegen_colon6_braceClose_0(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %6 = load %struct.Value*, %struct.Value** %3, align 8
  %7 = load %struct.Value*, %struct.Value** %4, align 8
  %8 = call %struct.Value* @add_Int64(%struct.Value* noundef %6, %struct.Value* noundef %7)
  store %struct.Value* %8, %struct.Value** %5, align 8
  %9 = load %struct.Value*, %struct.Value** %5, align 8
  ret %struct.Value* %9
}

declare %struct.Value* @add_Int64(%struct.Value* noundef, %struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @prim__sub_Integer(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %6 = load %struct.Value*, %struct.Value** %3, align 8
  %7 = load %struct.Value*, %struct.Value** %4, align 8
  %8 = call %struct.Value* @sub_Integer(%struct.Value* noundef %6, %struct.Value* noundef %7)
  store %struct.Value* %8, %struct.Value** %5, align 8
  %9 = load %struct.Value*, %struct.Value** %5, align 8
  ret %struct.Value* %9
}

declare %struct.Value* @sub_Integer(%struct.Value* noundef, %struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @prim__sub_Integer_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @prim__sub_Integer(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.Value_Arglist*, align 8
  %10 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %11 = alloca %struct.Value*, align 8
  %12 = alloca %struct.Value*, align 8
  %13 = alloca %struct.Value_Arglist*, align 8
  %14 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %15 = alloca %struct.Value*, align 8
  %16 = alloca %struct.Value*, align 8
  %17 = alloca %struct.Value*, align 8
  %18 = alloca %struct.Value*, align 8
  %19 = alloca %struct.Value_Arglist*, align 8
  %20 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %21 = alloca %struct.Value*, align 8
  %22 = alloca %struct.Value*, align 8
  %23 = alloca %struct.Value_Arglist*, align 8
  %24 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %25 = alloca %struct.Value*, align 8
  %26 = alloca %struct.Value_Arglist*, align 8
  %27 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %28 = alloca %struct.Value*, align 8
  %29 = alloca %struct.Value_Constructor*, align 8
  %30 = alloca %struct.Value*, align 8
  %31 = alloca %struct.Value_Arglist*, align 8
  %32 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %33 = alloca %struct.Value*, align 8
  %34 = alloca %struct.Value*, align 8
  %35 = alloca %struct.Value_Arglist*, align 8
  %36 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %37 = alloca %struct.Value*, align 8
  %38 = alloca %struct.Value_Arglist*, align 8
  %39 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %40 = alloca %struct.Value*, align 8
  %41 = alloca %struct.Value_Constructor*, align 8
  %42 = alloca %struct.Value*, align 8
  %43 = alloca %struct.Value_Arglist*, align 8
  %44 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %45 = alloca %struct.Value*, align 8
  %46 = alloca %struct.Value_Arglist*, align 8
  %47 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %48 = alloca %struct.Value*, align 8
  %49 = alloca %struct.Value_Constructor*, align 8
  %50 = alloca %struct.Value*, align 8
  %51 = alloca %struct.Value_Arglist*, align 8
  %52 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %53 = alloca %struct.Value*, align 8
  %54 = alloca %struct.Value_Arglist*, align 8
  %55 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %56 = alloca %struct.Value*, align 8
  %57 = alloca %struct.Value_Arglist*, align 8
  %58 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %59 = alloca %struct.Value*, align 8
  %60 = alloca %struct.Value_Arglist*, align 8
  %61 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %62 = alloca %struct.Value*, align 8
  %63 = alloca %struct.Value_Arglist*, align 8
  %64 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %65 = alloca %struct.Value*, align 8
  %66 = alloca %struct.Value_Arglist*, align 8
  %67 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %68 = alloca %struct.Value*, align 8
  %69 = alloca %struct.Value_Arglist*, align 8
  %70 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %71 = alloca %struct.Value*, align 8
  %72 = alloca %struct.Value_Constructor*, align 8
  %73 = alloca %struct.Value*, align 8
  %74 = alloca %struct.Value_Arglist*, align 8
  %75 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %76 = alloca %struct.Value*, align 8
  %77 = alloca %struct.Value*, align 8
  %78 = alloca %struct.Value_Arglist*, align 8
  %79 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %80 = alloca %struct.Value*, align 8
  %81 = alloca %struct.Value_Arglist*, align 8
  %82 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %83 = alloca %struct.Value*, align 8
  %84 = alloca %struct.Value_Constructor*, align 8
  %85 = alloca %struct.Value*, align 8
  %86 = alloca %struct.Value_Constructor*, align 8
  %87 = alloca %struct.Value*, align 8
  %88 = alloca %struct.Value_Constructor*, align 8
  %89 = alloca %struct.Value*, align 8
  %90 = alloca %struct.Value*, align 8
  %91 = alloca %struct.Value*, align 8
  %92 = alloca %struct.Value*, align 8
  %93 = alloca %struct.Value*, align 8
  %94 = alloca %struct.Value_Arglist*, align 8
  %95 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %96 = alloca %struct.Value*, align 8
  %97 = alloca %struct.Value*, align 8
  %98 = alloca %struct.Value_Arglist*, align 8
  %99 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %100 = alloca %struct.Value*, align 8
  %101 = alloca %struct.Value_Arglist*, align 8
  %102 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %103 = alloca %struct.Value*, align 8
  %104 = alloca %struct.Value*, align 8
  %105 = alloca %struct.Value_Arglist*, align 8
  %106 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %107 = alloca %struct.Value*, align 8
  %108 = alloca %struct.Value*, align 8
  %109 = alloca %struct.Value_Arglist*, align 8
  %110 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %111 = alloca %struct.Value*, align 8
  %112 = alloca %struct.Value*, align 8
  %113 = alloca %struct.Value*, align 8
  %114 = alloca %struct.Value*, align 8
  %115 = alloca %struct.Value_Arglist*, align 8
  %116 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %117 = alloca %struct.Value*, align 8
  %118 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %119 = call %struct.Value_Int64* @makeInt64(i64 noundef 50)
  %120 = bitcast %struct.Value_Int64* %119 to %struct.Value*
  store %struct.Value* %120, %struct.Value** %3, align 8
  %121 = call %struct.Value_Int64* @makeInt64(i64 noundef 23)
  %122 = bitcast %struct.Value_Int64* %121 to %struct.Value*
  store %struct.Value* %122, %struct.Value** %4, align 8
  %123 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %123, %struct.Value_Arglist** %5, align 8
  %124 = load %struct.Value*, %struct.Value** %3, align 8
  %125 = call %struct.Value* @newReference(%struct.Value* noundef %124)
  %126 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %127 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %126, i32 0, i32 3
  %128 = load %struct.Value**, %struct.Value*** %127, align 8
  %129 = getelementptr inbounds %struct.Value*, %struct.Value** %128, i64 0
  store %struct.Value* %125, %struct.Value** %129, align 8
  %130 = load %struct.Value*, %struct.Value** %4, align 8
  %131 = call %struct.Value* @newReference(%struct.Value* noundef %130)
  %132 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %133 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %132, i32 0, i32 3
  %134 = load %struct.Value**, %struct.Value*** %133, align 8
  %135 = getelementptr inbounds %struct.Value*, %struct.Value** %134, i64 1
  store %struct.Value* %131, %struct.Value** %135, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Main_add_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %136 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %137 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %138 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %136, %struct.Value_Arglist* noundef %137)
  %139 = bitcast %struct.Value_Closure* %138 to %struct.Value*
  store %struct.Value* %139, %struct.Value** %7, align 8
  %140 = load %struct.Value*, %struct.Value** %7, align 8
  %141 = call %struct.Value* @trampoline(%struct.Value* noundef %140)
  store %struct.Value* %141, %struct.Value** %8, align 8
  %142 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %142, %struct.Value_Arglist** %9, align 8
  %143 = load %struct.Value*, %struct.Value** %8, align 8
  %144 = call %struct.Value* @newReference(%struct.Value* noundef %143)
  %145 = load %struct.Value_Arglist*, %struct.Value_Arglist** %9, align 8
  %146 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %145, i32 0, i32 3
  %147 = load %struct.Value**, %struct.Value*** %146, align 8
  %148 = getelementptr inbounds %struct.Value*, %struct.Value** %147, i64 0
  store %struct.Value* %144, %struct.Value** %148, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_show_Show_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %10, align 8
  %149 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %10, align 8
  %150 = load %struct.Value_Arglist*, %struct.Value_Arglist** %9, align 8
  %151 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %149, %struct.Value_Arglist* noundef %150)
  %152 = bitcast %struct.Value_Closure* %151 to %struct.Value*
  store %struct.Value* %152, %struct.Value** %11, align 8
  %153 = load %struct.Value*, %struct.Value** %11, align 8
  %154 = call %struct.Value* @trampoline(%struct.Value* noundef %153)
  store %struct.Value* %154, %struct.Value** %12, align 8
  %155 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %155, %struct.Value_Arglist** %13, align 8
  %156 = load %struct.Value*, %struct.Value** %12, align 8
  %157 = call %struct.Value* @newReference(%struct.Value* noundef %156)
  %158 = load %struct.Value_Arglist*, %struct.Value_Arglist** %13, align 8
  %159 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %158, i32 0, i32 3
  %160 = load %struct.Value**, %struct.Value*** %159, align 8
  %161 = getelementptr inbounds %struct.Value*, %struct.Value** %160, i64 0
  store %struct.Value* %157, %struct.Value** %161, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_show_Show_String_arglist, %struct.Value* (%struct.Value_Arglist*)** %14, align 8
  %162 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %14, align 8
  %163 = load %struct.Value_Arglist*, %struct.Value_Arglist** %13, align 8
  %164 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %162, %struct.Value_Arglist* noundef %163)
  %165 = bitcast %struct.Value_Closure* %164 to %struct.Value*
  store %struct.Value* %165, %struct.Value** %15, align 8
  %166 = load %struct.Value*, %struct.Value** %15, align 8
  %167 = call %struct.Value* @trampoline(%struct.Value* noundef %166)
  store %struct.Value* %167, %struct.Value** %16, align 8
  %168 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %169 = bitcast %struct.Value_String* %168 to %struct.Value*
  store %struct.Value* %169, %struct.Value** %17, align 8
  %170 = load %struct.Value*, %struct.Value** %16, align 8
  %171 = load %struct.Value*, %struct.Value** %17, align 8
  %172 = call %struct.Value* @strAppend(%struct.Value* noundef %170, %struct.Value* noundef %171)
  store %struct.Value* %172, %struct.Value** %18, align 8
  %173 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %173, %struct.Value_Arglist** %19, align 8
  %174 = load %struct.Value*, %struct.Value** %18, align 8
  %175 = call %struct.Value* @newReference(%struct.Value* noundef %174)
  %176 = load %struct.Value_Arglist*, %struct.Value_Arglist** %19, align 8
  %177 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %176, i32 0, i32 3
  %178 = load %struct.Value**, %struct.Value*** %177, align 8
  %179 = getelementptr inbounds %struct.Value*, %struct.Value** %178, i64 0
  store %struct.Value* %175, %struct.Value** %179, align 8
  %180 = load %struct.Value*, %struct.Value** %2, align 8
  %181 = call %struct.Value* @newReference(%struct.Value* noundef %180)
  %182 = load %struct.Value_Arglist*, %struct.Value_Arglist** %19, align 8
  %183 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %182, i32 0, i32 3
  %184 = load %struct.Value**, %struct.Value*** %183, align 8
  %185 = getelementptr inbounds %struct.Value*, %struct.Value** %184, i64 1
  store %struct.Value* %181, %struct.Value** %185, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_IO_prim__putStr_arglist, %struct.Value* (%struct.Value_Arglist*)** %20, align 8
  %186 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %20, align 8
  %187 = load %struct.Value_Arglist*, %struct.Value_Arglist** %19, align 8
  %188 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %186, %struct.Value_Arglist* noundef %187)
  %189 = bitcast %struct.Value_Closure* %188 to %struct.Value*
  store %struct.Value* %189, %struct.Value** %21, align 8
  %190 = load %struct.Value*, %struct.Value** %21, align 8
  %191 = call %struct.Value* @trampoline(%struct.Value* noundef %190)
  store %struct.Value* %191, %struct.Value** %22, align 8
  %192 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 1)
  store %struct.Value_Arglist* %192, %struct.Value_Arglist** %23, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Main_main_0_arglist, %struct.Value* (%struct.Value_Arglist*)** %24, align 8
  %193 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %24, align 8
  %194 = load %struct.Value_Arglist*, %struct.Value_Arglist** %23, align 8
  %195 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %193, %struct.Value_Arglist* noundef %194)
  %196 = bitcast %struct.Value_Closure* %195 to %struct.Value*
  store %struct.Value* %196, %struct.Value** %25, align 8
  %197 = call %struct.Value_Arglist* @newArglist(i32 noundef 2, i32 noundef 2)
  store %struct.Value_Arglist* %197, %struct.Value_Arglist** %26, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Main_main_1_arglist, %struct.Value* (%struct.Value_Arglist*)** %27, align 8
  %198 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %27, align 8
  %199 = load %struct.Value_Arglist*, %struct.Value_Arglist** %26, align 8
  %200 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %198, %struct.Value_Arglist* noundef %199)
  %201 = bitcast %struct.Value_Closure* %200 to %struct.Value*
  store %struct.Value* %201, %struct.Value** %28, align 8
  %202 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 0, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0))
  store %struct.Value_Constructor* %202, %struct.Value_Constructor** %29, align 8
  %203 = load %struct.Value*, %struct.Value** %25, align 8
  %204 = call %struct.Value* @newReference(%struct.Value* noundef %203)
  %205 = load %struct.Value_Constructor*, %struct.Value_Constructor** %29, align 8
  %206 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %205, i32 0, i32 4
  %207 = load %struct.Value**, %struct.Value*** %206, align 8
  %208 = getelementptr inbounds %struct.Value*, %struct.Value** %207, i64 0
  store %struct.Value* %204, %struct.Value** %208, align 8
  %209 = load %struct.Value*, %struct.Value** %28, align 8
  %210 = call %struct.Value* @newReference(%struct.Value* noundef %209)
  %211 = load %struct.Value_Constructor*, %struct.Value_Constructor** %29, align 8
  %212 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %211, i32 0, i32 4
  %213 = load %struct.Value**, %struct.Value*** %212, align 8
  %214 = getelementptr inbounds %struct.Value*, %struct.Value** %213, i64 1
  store %struct.Value* %210, %struct.Value** %214, align 8
  %215 = load %struct.Value_Constructor*, %struct.Value_Constructor** %29, align 8
  %216 = bitcast %struct.Value_Constructor* %215 to %struct.Value*
  store %struct.Value* %216, %struct.Value** %30, align 8
  %217 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 0)
  store %struct.Value_Arglist* %217, %struct.Value_Arglist** %31, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @csegen_6_arglist, %struct.Value* (%struct.Value_Arglist*)** %32, align 8
  %218 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %32, align 8
  %219 = load %struct.Value_Arglist*, %struct.Value_Arglist** %31, align 8
  %220 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %218, %struct.Value_Arglist* noundef %219)
  %221 = bitcast %struct.Value_Closure* %220 to %struct.Value*
  store %struct.Value* %221, %struct.Value** %33, align 8
  %222 = load %struct.Value*, %struct.Value** %33, align 8
  %223 = call %struct.Value* @trampoline(%struct.Value* noundef %222)
  store %struct.Value* %223, %struct.Value** %34, align 8
  %224 = call %struct.Value_Arglist* @newArglist(i32 noundef 2, i32 noundef 2)
  store %struct.Value_Arglist* %224, %struct.Value_Arglist** %35, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Main_main_2_arglist, %struct.Value* (%struct.Value_Arglist*)** %36, align 8
  %225 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %36, align 8
  %226 = load %struct.Value_Arglist*, %struct.Value_Arglist** %35, align 8
  %227 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %225, %struct.Value_Arglist* noundef %226)
  %228 = bitcast %struct.Value_Closure* %227 to %struct.Value*
  store %struct.Value* %228, %struct.Value** %37, align 8
  %229 = call %struct.Value_Arglist* @newArglist(i32 noundef 2, i32 noundef 2)
  store %struct.Value_Arglist* %229, %struct.Value_Arglist** %38, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Main_main_3_arglist, %struct.Value* (%struct.Value_Arglist*)** %39, align 8
  %230 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %39, align 8
  %231 = load %struct.Value_Arglist*, %struct.Value_Arglist** %38, align 8
  %232 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %230, %struct.Value_Arglist* noundef %231)
  %233 = bitcast %struct.Value_Closure* %232 to %struct.Value*
  store %struct.Value* %233, %struct.Value** %40, align 8
  %234 = call %struct.Value_Constructor* @newConstructor(i32 noundef 3, i32 noundef 0, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0))
  store %struct.Value_Constructor* %234, %struct.Value_Constructor** %41, align 8
  %235 = load %struct.Value*, %struct.Value** %34, align 8
  %236 = call %struct.Value* @newReference(%struct.Value* noundef %235)
  %237 = load %struct.Value_Constructor*, %struct.Value_Constructor** %41, align 8
  %238 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %237, i32 0, i32 4
  %239 = load %struct.Value**, %struct.Value*** %238, align 8
  %240 = getelementptr inbounds %struct.Value*, %struct.Value** %239, i64 0
  store %struct.Value* %236, %struct.Value** %240, align 8
  %241 = load %struct.Value*, %struct.Value** %37, align 8
  %242 = call %struct.Value* @newReference(%struct.Value* noundef %241)
  %243 = load %struct.Value_Constructor*, %struct.Value_Constructor** %41, align 8
  %244 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %243, i32 0, i32 4
  %245 = load %struct.Value**, %struct.Value*** %244, align 8
  %246 = getelementptr inbounds %struct.Value*, %struct.Value** %245, i64 1
  store %struct.Value* %242, %struct.Value** %246, align 8
  %247 = load %struct.Value*, %struct.Value** %40, align 8
  %248 = call %struct.Value* @newReference(%struct.Value* noundef %247)
  %249 = load %struct.Value_Constructor*, %struct.Value_Constructor** %41, align 8
  %250 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %249, i32 0, i32 4
  %251 = load %struct.Value**, %struct.Value*** %250, align 8
  %252 = getelementptr inbounds %struct.Value*, %struct.Value** %251, i64 2
  store %struct.Value* %248, %struct.Value** %252, align 8
  %253 = load %struct.Value_Constructor*, %struct.Value_Constructor** %41, align 8
  %254 = bitcast %struct.Value_Constructor* %253 to %struct.Value*
  store %struct.Value* %254, %struct.Value** %42, align 8
  %255 = call %struct.Value_Arglist* @newArglist(i32 noundef 2, i32 noundef 2)
  store %struct.Value_Arglist* %255, %struct.Value_Arglist** %43, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Main_main_4_arglist, %struct.Value* (%struct.Value_Arglist*)** %44, align 8
  %256 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %44, align 8
  %257 = load %struct.Value_Arglist*, %struct.Value_Arglist** %43, align 8
  %258 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %256, %struct.Value_Arglist* noundef %257)
  %259 = bitcast %struct.Value_Closure* %258 to %struct.Value*
  store %struct.Value* %259, %struct.Value** %45, align 8
  %260 = call %struct.Value_Arglist* @newArglist(i32 noundef 2, i32 noundef 2)
  store %struct.Value_Arglist* %260, %struct.Value_Arglist** %46, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Main_main_5_arglist, %struct.Value* (%struct.Value_Arglist*)** %47, align 8
  %261 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %47, align 8
  %262 = load %struct.Value_Arglist*, %struct.Value_Arglist** %46, align 8
  %263 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %261, %struct.Value_Arglist* noundef %262)
  %264 = bitcast %struct.Value_Closure* %263 to %struct.Value*
  store %struct.Value* %264, %struct.Value** %48, align 8
  %265 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 0, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0))
  store %struct.Value_Constructor* %265, %struct.Value_Constructor** %49, align 8
  %266 = load %struct.Value*, %struct.Value** %45, align 8
  %267 = call %struct.Value* @newReference(%struct.Value* noundef %266)
  %268 = load %struct.Value_Constructor*, %struct.Value_Constructor** %49, align 8
  %269 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %268, i32 0, i32 4
  %270 = load %struct.Value**, %struct.Value*** %269, align 8
  %271 = getelementptr inbounds %struct.Value*, %struct.Value** %270, i64 0
  store %struct.Value* %267, %struct.Value** %271, align 8
  %272 = load %struct.Value*, %struct.Value** %48, align 8
  %273 = call %struct.Value* @newReference(%struct.Value* noundef %272)
  %274 = load %struct.Value_Constructor*, %struct.Value_Constructor** %49, align 8
  %275 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %274, i32 0, i32 4
  %276 = load %struct.Value**, %struct.Value*** %275, align 8
  %277 = getelementptr inbounds %struct.Value*, %struct.Value** %276, i64 1
  store %struct.Value* %273, %struct.Value** %277, align 8
  %278 = load %struct.Value_Constructor*, %struct.Value_Constructor** %49, align 8
  %279 = bitcast %struct.Value_Constructor* %278 to %struct.Value*
  store %struct.Value* %279, %struct.Value** %50, align 8
  %280 = call %struct.Value_Arglist* @newArglist(i32 noundef 2, i32 noundef 2)
  store %struct.Value_Arglist* %280, %struct.Value_Arglist** %51, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Main_main_6_arglist, %struct.Value* (%struct.Value_Arglist*)** %52, align 8
  %281 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %52, align 8
  %282 = load %struct.Value_Arglist*, %struct.Value_Arglist** %51, align 8
  %283 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %281, %struct.Value_Arglist* noundef %282)
  %284 = bitcast %struct.Value_Closure* %283 to %struct.Value*
  store %struct.Value* %284, %struct.Value** %53, align 8
  %285 = call %struct.Value_Arglist* @newArglist(i32 noundef 2, i32 noundef 2)
  store %struct.Value_Arglist* %285, %struct.Value_Arglist** %54, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Main_main_7_arglist, %struct.Value* (%struct.Value_Arglist*)** %55, align 8
  %286 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %55, align 8
  %287 = load %struct.Value_Arglist*, %struct.Value_Arglist** %54, align 8
  %288 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %286, %struct.Value_Arglist* noundef %287)
  %289 = bitcast %struct.Value_Closure* %288 to %struct.Value*
  store %struct.Value* %289, %struct.Value** %56, align 8
  %290 = call %struct.Value_Arglist* @newArglist(i32 noundef 2, i32 noundef 2)
  store %struct.Value_Arglist* %290, %struct.Value_Arglist** %57, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Main_main_8_arglist, %struct.Value* (%struct.Value_Arglist*)** %58, align 8
  %291 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %58, align 8
  %292 = load %struct.Value_Arglist*, %struct.Value_Arglist** %57, align 8
  %293 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %291, %struct.Value_Arglist* noundef %292)
  %294 = bitcast %struct.Value_Closure* %293 to %struct.Value*
  store %struct.Value* %294, %struct.Value** %59, align 8
  %295 = call %struct.Value_Arglist* @newArglist(i32 noundef 2, i32 noundef 2)
  store %struct.Value_Arglist* %295, %struct.Value_Arglist** %60, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Main_main_9_arglist, %struct.Value* (%struct.Value_Arglist*)** %61, align 8
  %296 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %61, align 8
  %297 = load %struct.Value_Arglist*, %struct.Value_Arglist** %60, align 8
  %298 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %296, %struct.Value_Arglist* noundef %297)
  %299 = bitcast %struct.Value_Closure* %298 to %struct.Value*
  store %struct.Value* %299, %struct.Value** %62, align 8
  %300 = call %struct.Value_Arglist* @newArglist(i32 noundef 2, i32 noundef 2)
  store %struct.Value_Arglist* %300, %struct.Value_Arglist** %63, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Main_main_10_arglist, %struct.Value* (%struct.Value_Arglist*)** %64, align 8
  %301 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %64, align 8
  %302 = load %struct.Value_Arglist*, %struct.Value_Arglist** %63, align 8
  %303 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %301, %struct.Value_Arglist* noundef %302)
  %304 = bitcast %struct.Value_Closure* %303 to %struct.Value*
  store %struct.Value* %304, %struct.Value** %65, align 8
  %305 = call %struct.Value_Arglist* @newArglist(i32 noundef 2, i32 noundef 2)
  store %struct.Value_Arglist* %305, %struct.Value_Arglist** %66, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Main_main_11_arglist, %struct.Value* (%struct.Value_Arglist*)** %67, align 8
  %306 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %67, align 8
  %307 = load %struct.Value_Arglist*, %struct.Value_Arglist** %66, align 8
  %308 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %306, %struct.Value_Arglist* noundef %307)
  %309 = bitcast %struct.Value_Closure* %308 to %struct.Value*
  store %struct.Value* %309, %struct.Value** %68, align 8
  %310 = call %struct.Value_Arglist* @newArglist(i32 noundef 2, i32 noundef 2)
  store %struct.Value_Arglist* %310, %struct.Value_Arglist** %69, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Main_main_12_arglist, %struct.Value* (%struct.Value_Arglist*)** %70, align 8
  %311 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %70, align 8
  %312 = load %struct.Value_Arglist*, %struct.Value_Arglist** %69, align 8
  %313 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %311, %struct.Value_Arglist* noundef %312)
  %314 = bitcast %struct.Value_Closure* %313 to %struct.Value*
  store %struct.Value* %314, %struct.Value** %71, align 8
  %315 = call %struct.Value_Constructor* @newConstructor(i32 noundef 8, i32 noundef 0, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0))
  store %struct.Value_Constructor* %315, %struct.Value_Constructor** %72, align 8
  %316 = load %struct.Value*, %struct.Value** %50, align 8
  %317 = call %struct.Value* @newReference(%struct.Value* noundef %316)
  %318 = load %struct.Value_Constructor*, %struct.Value_Constructor** %72, align 8
  %319 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %318, i32 0, i32 4
  %320 = load %struct.Value**, %struct.Value*** %319, align 8
  %321 = getelementptr inbounds %struct.Value*, %struct.Value** %320, i64 0
  store %struct.Value* %317, %struct.Value** %321, align 8
  %322 = load %struct.Value*, %struct.Value** %53, align 8
  %323 = call %struct.Value* @newReference(%struct.Value* noundef %322)
  %324 = load %struct.Value_Constructor*, %struct.Value_Constructor** %72, align 8
  %325 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %324, i32 0, i32 4
  %326 = load %struct.Value**, %struct.Value*** %325, align 8
  %327 = getelementptr inbounds %struct.Value*, %struct.Value** %326, i64 1
  store %struct.Value* %323, %struct.Value** %327, align 8
  %328 = load %struct.Value*, %struct.Value** %56, align 8
  %329 = call %struct.Value* @newReference(%struct.Value* noundef %328)
  %330 = load %struct.Value_Constructor*, %struct.Value_Constructor** %72, align 8
  %331 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %330, i32 0, i32 4
  %332 = load %struct.Value**, %struct.Value*** %331, align 8
  %333 = getelementptr inbounds %struct.Value*, %struct.Value** %332, i64 2
  store %struct.Value* %329, %struct.Value** %333, align 8
  %334 = load %struct.Value*, %struct.Value** %59, align 8
  %335 = call %struct.Value* @newReference(%struct.Value* noundef %334)
  %336 = load %struct.Value_Constructor*, %struct.Value_Constructor** %72, align 8
  %337 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %336, i32 0, i32 4
  %338 = load %struct.Value**, %struct.Value*** %337, align 8
  %339 = getelementptr inbounds %struct.Value*, %struct.Value** %338, i64 3
  store %struct.Value* %335, %struct.Value** %339, align 8
  %340 = load %struct.Value*, %struct.Value** %62, align 8
  %341 = call %struct.Value* @newReference(%struct.Value* noundef %340)
  %342 = load %struct.Value_Constructor*, %struct.Value_Constructor** %72, align 8
  %343 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %342, i32 0, i32 4
  %344 = load %struct.Value**, %struct.Value*** %343, align 8
  %345 = getelementptr inbounds %struct.Value*, %struct.Value** %344, i64 4
  store %struct.Value* %341, %struct.Value** %345, align 8
  %346 = load %struct.Value*, %struct.Value** %65, align 8
  %347 = call %struct.Value* @newReference(%struct.Value* noundef %346)
  %348 = load %struct.Value_Constructor*, %struct.Value_Constructor** %72, align 8
  %349 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %348, i32 0, i32 4
  %350 = load %struct.Value**, %struct.Value*** %349, align 8
  %351 = getelementptr inbounds %struct.Value*, %struct.Value** %350, i64 5
  store %struct.Value* %347, %struct.Value** %351, align 8
  %352 = load %struct.Value*, %struct.Value** %68, align 8
  %353 = call %struct.Value* @newReference(%struct.Value* noundef %352)
  %354 = load %struct.Value_Constructor*, %struct.Value_Constructor** %72, align 8
  %355 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %354, i32 0, i32 4
  %356 = load %struct.Value**, %struct.Value*** %355, align 8
  %357 = getelementptr inbounds %struct.Value*, %struct.Value** %356, i64 6
  store %struct.Value* %353, %struct.Value** %357, align 8
  %358 = load %struct.Value*, %struct.Value** %71, align 8
  %359 = call %struct.Value* @newReference(%struct.Value* noundef %358)
  %360 = load %struct.Value_Constructor*, %struct.Value_Constructor** %72, align 8
  %361 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %360, i32 0, i32 4
  %362 = load %struct.Value**, %struct.Value*** %361, align 8
  %363 = getelementptr inbounds %struct.Value*, %struct.Value** %362, i64 7
  store %struct.Value* %359, %struct.Value** %363, align 8
  %364 = load %struct.Value_Constructor*, %struct.Value_Constructor** %72, align 8
  %365 = bitcast %struct.Value_Constructor* %364 to %struct.Value*
  store %struct.Value* %365, %struct.Value** %73, align 8
  %366 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 0)
  store %struct.Value_Arglist* %366, %struct.Value_Arglist** %74, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @csegen_6_arglist, %struct.Value* (%struct.Value_Arglist*)** %75, align 8
  %367 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %75, align 8
  %368 = load %struct.Value_Arglist*, %struct.Value_Arglist** %74, align 8
  %369 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %367, %struct.Value_Arglist* noundef %368)
  %370 = bitcast %struct.Value_Closure* %369 to %struct.Value*
  store %struct.Value* %370, %struct.Value** %76, align 8
  %371 = load %struct.Value*, %struct.Value** %76, align 8
  %372 = call %struct.Value* @trampoline(%struct.Value* noundef %371)
  store %struct.Value* %372, %struct.Value** %77, align 8
  %373 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 1)
  store %struct.Value_Arglist* %373, %struct.Value_Arglist** %78, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Main_main_13_arglist, %struct.Value* (%struct.Value_Arglist*)** %79, align 8
  %374 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %79, align 8
  %375 = load %struct.Value_Arglist*, %struct.Value_Arglist** %78, align 8
  %376 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %374, %struct.Value_Arglist* noundef %375)
  %377 = bitcast %struct.Value_Closure* %376 to %struct.Value*
  store %struct.Value* %377, %struct.Value** %80, align 8
  %378 = call %struct.Value_Arglist* @newArglist(i32 noundef 2, i32 noundef 2)
  store %struct.Value_Arglist* %378, %struct.Value_Arglist** %81, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Main_main_14_arglist, %struct.Value* (%struct.Value_Arglist*)** %82, align 8
  %379 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %82, align 8
  %380 = load %struct.Value_Arglist*, %struct.Value_Arglist** %81, align 8
  %381 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %379, %struct.Value_Arglist* noundef %380)
  %382 = bitcast %struct.Value_Closure* %381 to %struct.Value*
  store %struct.Value* %382, %struct.Value** %83, align 8
  %383 = call %struct.Value_Constructor* @newConstructor(i32 noundef 3, i32 noundef 0, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0))
  store %struct.Value_Constructor* %383, %struct.Value_Constructor** %84, align 8
  %384 = load %struct.Value*, %struct.Value** %77, align 8
  %385 = call %struct.Value* @newReference(%struct.Value* noundef %384)
  %386 = load %struct.Value_Constructor*, %struct.Value_Constructor** %84, align 8
  %387 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %386, i32 0, i32 4
  %388 = load %struct.Value**, %struct.Value*** %387, align 8
  %389 = getelementptr inbounds %struct.Value*, %struct.Value** %388, i64 0
  store %struct.Value* %385, %struct.Value** %389, align 8
  %390 = load %struct.Value*, %struct.Value** %80, align 8
  %391 = call %struct.Value* @newReference(%struct.Value* noundef %390)
  %392 = load %struct.Value_Constructor*, %struct.Value_Constructor** %84, align 8
  %393 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %392, i32 0, i32 4
  %394 = load %struct.Value**, %struct.Value*** %393, align 8
  %395 = getelementptr inbounds %struct.Value*, %struct.Value** %394, i64 1
  store %struct.Value* %391, %struct.Value** %395, align 8
  %396 = load %struct.Value*, %struct.Value** %83, align 8
  %397 = call %struct.Value* @newReference(%struct.Value* noundef %396)
  %398 = load %struct.Value_Constructor*, %struct.Value_Constructor** %84, align 8
  %399 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %398, i32 0, i32 4
  %400 = load %struct.Value**, %struct.Value*** %399, align 8
  %401 = getelementptr inbounds %struct.Value*, %struct.Value** %400, i64 2
  store %struct.Value* %397, %struct.Value** %401, align 8
  %402 = load %struct.Value_Constructor*, %struct.Value_Constructor** %84, align 8
  %403 = bitcast %struct.Value_Constructor* %402 to %struct.Value*
  store %struct.Value* %403, %struct.Value** %85, align 8
  %404 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 0, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0))
  store %struct.Value_Constructor* %404, %struct.Value_Constructor** %86, align 8
  %405 = load %struct.Value*, %struct.Value** %73, align 8
  %406 = call %struct.Value* @newReference(%struct.Value* noundef %405)
  %407 = load %struct.Value_Constructor*, %struct.Value_Constructor** %86, align 8
  %408 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %407, i32 0, i32 4
  %409 = load %struct.Value**, %struct.Value*** %408, align 8
  %410 = getelementptr inbounds %struct.Value*, %struct.Value** %409, i64 0
  store %struct.Value* %406, %struct.Value** %410, align 8
  %411 = load %struct.Value*, %struct.Value** %85, align 8
  %412 = call %struct.Value* @newReference(%struct.Value* noundef %411)
  %413 = load %struct.Value_Constructor*, %struct.Value_Constructor** %86, align 8
  %414 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %413, i32 0, i32 4
  %415 = load %struct.Value**, %struct.Value*** %414, align 8
  %416 = getelementptr inbounds %struct.Value*, %struct.Value** %415, i64 1
  store %struct.Value* %412, %struct.Value** %416, align 8
  %417 = load %struct.Value_Constructor*, %struct.Value_Constructor** %86, align 8
  %418 = bitcast %struct.Value_Constructor* %417 to %struct.Value*
  store %struct.Value* %418, %struct.Value** %87, align 8
  %419 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 0, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0))
  store %struct.Value_Constructor* %419, %struct.Value_Constructor** %88, align 8
  %420 = load %struct.Value*, %struct.Value** %42, align 8
  %421 = call %struct.Value* @newReference(%struct.Value* noundef %420)
  %422 = load %struct.Value_Constructor*, %struct.Value_Constructor** %88, align 8
  %423 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %422, i32 0, i32 4
  %424 = load %struct.Value**, %struct.Value*** %423, align 8
  %425 = getelementptr inbounds %struct.Value*, %struct.Value** %424, i64 0
  store %struct.Value* %421, %struct.Value** %425, align 8
  %426 = load %struct.Value*, %struct.Value** %87, align 8
  %427 = call %struct.Value* @newReference(%struct.Value* noundef %426)
  %428 = load %struct.Value_Constructor*, %struct.Value_Constructor** %88, align 8
  %429 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %428, i32 0, i32 4
  %430 = load %struct.Value**, %struct.Value*** %429, align 8
  %431 = getelementptr inbounds %struct.Value*, %struct.Value** %430, i64 1
  store %struct.Value* %427, %struct.Value** %431, align 8
  %432 = load %struct.Value_Constructor*, %struct.Value_Constructor** %88, align 8
  %433 = bitcast %struct.Value_Constructor* %432 to %struct.Value*
  store %struct.Value* %433, %struct.Value** %89, align 8
  %434 = call %struct.Value_Integer* @makeIntegerLiteral(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0))
  %435 = bitcast %struct.Value_Integer* %434 to %struct.Value*
  store %struct.Value* %435, %struct.Value** %90, align 8
  %436 = load %struct.Value*, %struct.Value** %90, align 8
  %437 = call %struct.Value* @cast_Integer_to_Int64(%struct.Value* noundef %436)
  store %struct.Value* %437, %struct.Value** %91, align 8
  %438 = call %struct.Value_Integer* @makeIntegerLiteral(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0))
  %439 = bitcast %struct.Value_Integer* %438 to %struct.Value*
  store %struct.Value* %439, %struct.Value** %92, align 8
  %440 = load %struct.Value*, %struct.Value** %92, align 8
  %441 = call %struct.Value* @cast_Integer_to_Int64(%struct.Value* noundef %440)
  store %struct.Value* %441, %struct.Value** %93, align 8
  %442 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 3)
  store %struct.Value_Arglist* %442, %struct.Value_Arglist** %94, align 8
  %443 = load %struct.Value*, %struct.Value** %89, align 8
  %444 = call %struct.Value* @newReference(%struct.Value* noundef %443)
  %445 = load %struct.Value_Arglist*, %struct.Value_Arglist** %94, align 8
  %446 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %445, i32 0, i32 3
  %447 = load %struct.Value**, %struct.Value*** %446, align 8
  %448 = getelementptr inbounds %struct.Value*, %struct.Value** %447, i64 0
  store %struct.Value* %444, %struct.Value** %448, align 8
  %449 = load %struct.Value*, %struct.Value** %91, align 8
  %450 = call %struct.Value* @newReference(%struct.Value* noundef %449)
  %451 = load %struct.Value_Arglist*, %struct.Value_Arglist** %94, align 8
  %452 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %451, i32 0, i32 3
  %453 = load %struct.Value**, %struct.Value*** %452, align 8
  %454 = getelementptr inbounds %struct.Value*, %struct.Value** %453, i64 1
  store %struct.Value* %450, %struct.Value** %454, align 8
  %455 = load %struct.Value*, %struct.Value** %93, align 8
  %456 = call %struct.Value* @newReference(%struct.Value* noundef %455)
  %457 = load %struct.Value_Arglist*, %struct.Value_Arglist** %94, align 8
  %458 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %457, i32 0, i32 3
  %459 = load %struct.Value**, %struct.Value*** %458, align 8
  %460 = getelementptr inbounds %struct.Value*, %struct.Value** %459, i64 2
  store %struct.Value* %456, %struct.Value** %460, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_rangeFromTo_Range__dollara_arglist, %struct.Value* (%struct.Value_Arglist*)** %95, align 8
  %461 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %95, align 8
  %462 = load %struct.Value_Arglist*, %struct.Value_Arglist** %94, align 8
  %463 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %461, %struct.Value_Arglist* noundef %462)
  %464 = bitcast %struct.Value_Closure* %463 to %struct.Value*
  store %struct.Value* %464, %struct.Value** %96, align 8
  %465 = load %struct.Value*, %struct.Value** %96, align 8
  %466 = call %struct.Value* @trampoline(%struct.Value* noundef %465)
  store %struct.Value* %466, %struct.Value** %97, align 8
  %467 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 1)
  store %struct.Value_Arglist* %467, %struct.Value_Arglist** %98, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Main_main_15_arglist, %struct.Value* (%struct.Value_Arglist*)** %99, align 8
  %468 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %99, align 8
  %469 = load %struct.Value_Arglist*, %struct.Value_Arglist** %98, align 8
  %470 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %468, %struct.Value_Arglist* noundef %469)
  %471 = bitcast %struct.Value_Closure* %470 to %struct.Value*
  store %struct.Value* %471, %struct.Value** %100, align 8
  %472 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %472, %struct.Value_Arglist** %101, align 8
  %473 = load %struct.Value*, %struct.Value** %97, align 8
  %474 = call %struct.Value* @newReference(%struct.Value* noundef %473)
  %475 = load %struct.Value_Arglist*, %struct.Value_Arglist** %101, align 8
  %476 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %475, i32 0, i32 3
  %477 = load %struct.Value**, %struct.Value*** %476, align 8
  %478 = getelementptr inbounds %struct.Value*, %struct.Value** %477, i64 0
  store %struct.Value* %474, %struct.Value** %478, align 8
  %479 = load %struct.Value*, %struct.Value** %100, align 8
  %480 = call %struct.Value* @newReference(%struct.Value* noundef %479)
  %481 = load %struct.Value_Arglist*, %struct.Value_Arglist** %101, align 8
  %482 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %481, i32 0, i32 3
  %483 = load %struct.Value**, %struct.Value*** %482, align 8
  %484 = getelementptr inbounds %struct.Value*, %struct.Value** %483, i64 1
  store %struct.Value* %480, %struct.Value** %484, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_listBind_arglist, %struct.Value* (%struct.Value_Arglist*)** %102, align 8
  %485 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %102, align 8
  %486 = load %struct.Value_Arglist*, %struct.Value_Arglist** %101, align 8
  %487 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %485, %struct.Value_Arglist* noundef %486)
  %488 = bitcast %struct.Value_Closure* %487 to %struct.Value*
  store %struct.Value* %488, %struct.Value** %103, align 8
  %489 = load %struct.Value*, %struct.Value** %103, align 8
  %490 = call %struct.Value* @trampoline(%struct.Value* noundef %489)
  store %struct.Value* %490, %struct.Value** %104, align 8
  %491 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %491, %struct.Value_Arglist** %105, align 8
  %492 = load %struct.Value*, %struct.Value** %30, align 8
  %493 = call %struct.Value* @newReference(%struct.Value* noundef %492)
  %494 = load %struct.Value_Arglist*, %struct.Value_Arglist** %105, align 8
  %495 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %494, i32 0, i32 3
  %496 = load %struct.Value**, %struct.Value*** %495, align 8
  %497 = getelementptr inbounds %struct.Value*, %struct.Value** %496, i64 0
  store %struct.Value* %493, %struct.Value** %497, align 8
  %498 = load %struct.Value*, %struct.Value** %104, align 8
  %499 = call %struct.Value* @newReference(%struct.Value* noundef %498)
  %500 = load %struct.Value_Arglist*, %struct.Value_Arglist** %105, align 8
  %501 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %500, i32 0, i32 3
  %502 = load %struct.Value**, %struct.Value*** %501, align 8
  %503 = getelementptr inbounds %struct.Value*, %struct.Value** %502, i64 1
  store %struct.Value* %499, %struct.Value** %503, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_show_Show__parenOpenList__dollara_parenClose_arglist, %struct.Value* (%struct.Value_Arglist*)** %106, align 8
  %504 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %106, align 8
  %505 = load %struct.Value_Arglist*, %struct.Value_Arglist** %105, align 8
  %506 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %504, %struct.Value_Arglist* noundef %505)
  %507 = bitcast %struct.Value_Closure* %506 to %struct.Value*
  store %struct.Value* %507, %struct.Value** %107, align 8
  %508 = load %struct.Value*, %struct.Value** %107, align 8
  %509 = call %struct.Value* @trampoline(%struct.Value* noundef %508)
  store %struct.Value* %509, %struct.Value** %108, align 8
  %510 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %510, %struct.Value_Arglist** %109, align 8
  %511 = load %struct.Value*, %struct.Value** %108, align 8
  %512 = call %struct.Value* @newReference(%struct.Value* noundef %511)
  %513 = load %struct.Value_Arglist*, %struct.Value_Arglist** %109, align 8
  %514 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %513, i32 0, i32 3
  %515 = load %struct.Value**, %struct.Value*** %514, align 8
  %516 = getelementptr inbounds %struct.Value*, %struct.Value** %515, i64 0
  store %struct.Value* %512, %struct.Value** %516, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_show_Show_String_arglist, %struct.Value* (%struct.Value_Arglist*)** %110, align 8
  %517 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %110, align 8
  %518 = load %struct.Value_Arglist*, %struct.Value_Arglist** %109, align 8
  %519 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %517, %struct.Value_Arglist* noundef %518)
  %520 = bitcast %struct.Value_Closure* %519 to %struct.Value*
  store %struct.Value* %520, %struct.Value** %111, align 8
  %521 = load %struct.Value*, %struct.Value** %111, align 8
  %522 = call %struct.Value* @trampoline(%struct.Value* noundef %521)
  store %struct.Value* %522, %struct.Value** %112, align 8
  %523 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %524 = bitcast %struct.Value_String* %523 to %struct.Value*
  store %struct.Value* %524, %struct.Value** %113, align 8
  %525 = load %struct.Value*, %struct.Value** %112, align 8
  %526 = load %struct.Value*, %struct.Value** %113, align 8
  %527 = call %struct.Value* @strAppend(%struct.Value* noundef %525, %struct.Value* noundef %526)
  store %struct.Value* %527, %struct.Value** %114, align 8
  %528 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %528, %struct.Value_Arglist** %115, align 8
  %529 = load %struct.Value*, %struct.Value** %114, align 8
  %530 = call %struct.Value* @newReference(%struct.Value* noundef %529)
  %531 = load %struct.Value_Arglist*, %struct.Value_Arglist** %115, align 8
  %532 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %531, i32 0, i32 3
  %533 = load %struct.Value**, %struct.Value*** %532, align 8
  %534 = getelementptr inbounds %struct.Value*, %struct.Value** %533, i64 0
  store %struct.Value* %530, %struct.Value** %534, align 8
  %535 = load %struct.Value*, %struct.Value** %2, align 8
  %536 = call %struct.Value* @newReference(%struct.Value* noundef %535)
  %537 = load %struct.Value_Arglist*, %struct.Value_Arglist** %115, align 8
  %538 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %537, i32 0, i32 3
  %539 = load %struct.Value**, %struct.Value*** %538, align 8
  %540 = getelementptr inbounds %struct.Value*, %struct.Value** %539, i64 1
  store %struct.Value* %536, %struct.Value** %540, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_IO_prim__putStr_arglist, %struct.Value* (%struct.Value_Arglist*)** %116, align 8
  %541 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %116, align 8
  %542 = load %struct.Value_Arglist*, %struct.Value_Arglist** %115, align 8
  %543 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %541, %struct.Value_Arglist* noundef %542)
  %544 = bitcast %struct.Value_Closure* %543 to %struct.Value*
  store %struct.Value* %544, %struct.Value** %117, align 8
  %545 = load %struct.Value*, %struct.Value** %117, align 8
  store %struct.Value* %545, %struct.Value** %118, align 8
  %546 = load %struct.Value*, %struct.Value** %114, align 8
  call void @removeReference(%struct.Value* noundef %546)
  %547 = load %struct.Value*, %struct.Value** %113, align 8
  call void @removeReference(%struct.Value* noundef %547)
  %548 = load %struct.Value*, %struct.Value** %112, align 8
  call void @removeReference(%struct.Value* noundef %548)
  %549 = load %struct.Value*, %struct.Value** %108, align 8
  call void @removeReference(%struct.Value* noundef %549)
  %550 = load %struct.Value*, %struct.Value** %104, align 8
  call void @removeReference(%struct.Value* noundef %550)
  %551 = load %struct.Value*, %struct.Value** %100, align 8
  call void @removeReference(%struct.Value* noundef %551)
  %552 = load %struct.Value*, %struct.Value** %97, align 8
  call void @removeReference(%struct.Value* noundef %552)
  %553 = load %struct.Value*, %struct.Value** %93, align 8
  call void @removeReference(%struct.Value* noundef %553)
  %554 = load %struct.Value*, %struct.Value** %92, align 8
  call void @removeReference(%struct.Value* noundef %554)
  %555 = load %struct.Value*, %struct.Value** %91, align 8
  call void @removeReference(%struct.Value* noundef %555)
  %556 = load %struct.Value*, %struct.Value** %90, align 8
  call void @removeReference(%struct.Value* noundef %556)
  %557 = load %struct.Value*, %struct.Value** %89, align 8
  call void @removeReference(%struct.Value* noundef %557)
  %558 = load %struct.Value*, %struct.Value** %87, align 8
  call void @removeReference(%struct.Value* noundef %558)
  %559 = load %struct.Value*, %struct.Value** %85, align 8
  call void @removeReference(%struct.Value* noundef %559)
  %560 = load %struct.Value*, %struct.Value** %83, align 8
  call void @removeReference(%struct.Value* noundef %560)
  %561 = load %struct.Value*, %struct.Value** %80, align 8
  call void @removeReference(%struct.Value* noundef %561)
  %562 = load %struct.Value*, %struct.Value** %77, align 8
  call void @removeReference(%struct.Value* noundef %562)
  %563 = load %struct.Value*, %struct.Value** %73, align 8
  call void @removeReference(%struct.Value* noundef %563)
  %564 = load %struct.Value*, %struct.Value** %71, align 8
  call void @removeReference(%struct.Value* noundef %564)
  %565 = load %struct.Value*, %struct.Value** %68, align 8
  call void @removeReference(%struct.Value* noundef %565)
  %566 = load %struct.Value*, %struct.Value** %65, align 8
  call void @removeReference(%struct.Value* noundef %566)
  %567 = load %struct.Value*, %struct.Value** %62, align 8
  call void @removeReference(%struct.Value* noundef %567)
  %568 = load %struct.Value*, %struct.Value** %59, align 8
  call void @removeReference(%struct.Value* noundef %568)
  %569 = load %struct.Value*, %struct.Value** %56, align 8
  call void @removeReference(%struct.Value* noundef %569)
  %570 = load %struct.Value*, %struct.Value** %53, align 8
  call void @removeReference(%struct.Value* noundef %570)
  %571 = load %struct.Value*, %struct.Value** %50, align 8
  call void @removeReference(%struct.Value* noundef %571)
  %572 = load %struct.Value*, %struct.Value** %48, align 8
  call void @removeReference(%struct.Value* noundef %572)
  %573 = load %struct.Value*, %struct.Value** %45, align 8
  call void @removeReference(%struct.Value* noundef %573)
  %574 = load %struct.Value*, %struct.Value** %42, align 8
  call void @removeReference(%struct.Value* noundef %574)
  %575 = load %struct.Value*, %struct.Value** %40, align 8
  call void @removeReference(%struct.Value* noundef %575)
  %576 = load %struct.Value*, %struct.Value** %37, align 8
  call void @removeReference(%struct.Value* noundef %576)
  %577 = load %struct.Value*, %struct.Value** %34, align 8
  call void @removeReference(%struct.Value* noundef %577)
  %578 = load %struct.Value*, %struct.Value** %30, align 8
  call void @removeReference(%struct.Value* noundef %578)
  %579 = load %struct.Value*, %struct.Value** %28, align 8
  call void @removeReference(%struct.Value* noundef %579)
  %580 = load %struct.Value*, %struct.Value** %25, align 8
  call void @removeReference(%struct.Value* noundef %580)
  %581 = load %struct.Value*, %struct.Value** %22, align 8
  call void @removeReference(%struct.Value* noundef %581)
  %582 = load %struct.Value*, %struct.Value** %18, align 8
  call void @removeReference(%struct.Value* noundef %582)
  %583 = load %struct.Value*, %struct.Value** %17, align 8
  call void @removeReference(%struct.Value* noundef %583)
  %584 = load %struct.Value*, %struct.Value** %16, align 8
  call void @removeReference(%struct.Value* noundef %584)
  %585 = load %struct.Value*, %struct.Value** %12, align 8
  call void @removeReference(%struct.Value* noundef %585)
  %586 = load %struct.Value*, %struct.Value** %8, align 8
  call void @removeReference(%struct.Value* noundef %586)
  %587 = load %struct.Value*, %struct.Value** %4, align 8
  call void @removeReference(%struct.Value* noundef %587)
  %588 = load %struct.Value*, %struct.Value** %3, align 8
  call void @removeReference(%struct.Value* noundef %588)
  %589 = load %struct.Value*, %struct.Value** %118, align 8
  ret %struct.Value* %589
}

declare %struct.Value_Int64* @makeInt64(i64 noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_add_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Main_add(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

declare %struct.Value* @trampoline(%struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_show_Show_Int_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Show_show_Show_Int(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_show_Show_String_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Show_show_Show_String(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

declare %struct.Value_String* @makeString(i8* noundef) #1

declare %struct.Value* @strAppend(%struct.Value* noundef, %struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_IO_prim__putStr_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_IO_prim__putStr(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_0_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Main_main_0(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_1_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Main_main_1(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_2_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Main_main_2(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_3_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Main_main_3(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_4_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Main_main_4(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_5_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Main_main_5(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_6_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Main_main_6(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_7_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Main_main_7(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_8_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Main_main_8(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_9_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Main_main_9(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_10_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Main_main_10(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_11_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Main_main_11(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_12_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Main_main_12(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_13_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Main_main_13(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_14_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Main_main_14(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

declare %struct.Value_Integer* @makeIntegerLiteral(i8* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_rangeFromTo_Range__dollara_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %14 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %13, i32 0, i32 3
  %15 = load %struct.Value**, %struct.Value*** %14, align 8
  %16 = getelementptr inbounds %struct.Value*, %struct.Value** %15, i64 2
  %17 = load %struct.Value*, %struct.Value** %16, align 8
  %18 = call %struct.Value* @Prelude_Types_rangeFromTo_Range__dollara(%struct.Value* noundef %7, %struct.Value* noundef %12, %struct.Value* noundef %17)
  ret %struct.Value* %18
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_15_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Main_main_15(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_listBind_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_Types_listBind(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_show_Show__parenOpenList__dollara_parenClose_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_Show_show_Show__parenOpenList__dollara_parenClose(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_15(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value_Arglist*, align 8
  %4 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value_Arglist*, align 8
  %8 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %11 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %11, %struct.Value_Arglist** %3, align 8
  %12 = load %struct.Value*, %struct.Value** %2, align 8
  %13 = call %struct.Value* @newReference(%struct.Value* noundef %12)
  %14 = load %struct.Value_Arglist*, %struct.Value_Arglist** %3, align 8
  %15 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %14, i32 0, i32 3
  %16 = load %struct.Value**, %struct.Value*** %15, align 8
  %17 = getelementptr inbounds %struct.Value*, %struct.Value** %16, i64 0
  store %struct.Value* %13, %struct.Value** %17, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Main_fastfibsum_arglist, %struct.Value* (%struct.Value_Arglist*)** %4, align 8
  %18 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %4, align 8
  %19 = load %struct.Value_Arglist*, %struct.Value_Arglist** %3, align 8
  %20 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %18, %struct.Value_Arglist* noundef %19)
  %21 = bitcast %struct.Value_Closure* %20 to %struct.Value*
  store %struct.Value* %21, %struct.Value** %5, align 8
  %22 = load %struct.Value*, %struct.Value** %5, align 8
  %23 = call %struct.Value* @trampoline(%struct.Value* noundef %22)
  store %struct.Value* %23, %struct.Value** %6, align 8
  %24 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %24, %struct.Value_Arglist** %7, align 8
  %25 = load %struct.Value*, %struct.Value** %6, align 8
  %26 = call %struct.Value* @newReference(%struct.Value* noundef %25)
  %27 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %28 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %27, i32 0, i32 3
  %29 = load %struct.Value**, %struct.Value*** %28, align 8
  %30 = getelementptr inbounds %struct.Value*, %struct.Value** %29, i64 0
  store %struct.Value* %26, %struct.Value** %30, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_pure_Applicative_List_arglist, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %31 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %32 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %33 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %31, %struct.Value_Arglist* noundef %32)
  %34 = bitcast %struct.Value_Closure* %33 to %struct.Value*
  store %struct.Value* %34, %struct.Value** %9, align 8
  %35 = load %struct.Value*, %struct.Value** %9, align 8
  store %struct.Value* %35, %struct.Value** %10, align 8
  %36 = load %struct.Value*, %struct.Value** %6, align 8
  call void @removeReference(%struct.Value* noundef %36)
  %37 = load %struct.Value*, %struct.Value** %10, align 8
  ret %struct.Value* %37
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_fastfibsum_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Main_fastfibsum(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_pure_Applicative_List_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Types_pure_Applicative_List(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_14(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %6 = load %struct.Value*, %struct.Value** %3, align 8
  %7 = load %struct.Value*, %struct.Value** %4, align 8
  %8 = call %struct.Value* @sub_Int64(%struct.Value* noundef %6, %struct.Value* noundef %7)
  store %struct.Value* %8, %struct.Value** %5, align 8
  %9 = load %struct.Value*, %struct.Value** %5, align 8
  ret %struct.Value* %9
}

declare %struct.Value* @sub_Int64(%struct.Value* noundef, %struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_13(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %5 = call %struct.Value_Int64* @makeInt64(i64 noundef 0)
  %6 = bitcast %struct.Value_Int64* %5 to %struct.Value*
  store %struct.Value* %6, %struct.Value** %3, align 8
  %7 = load %struct.Value*, %struct.Value** %3, align 8
  %8 = load %struct.Value*, %struct.Value** %2, align 8
  %9 = call %struct.Value* @sub_Int64(%struct.Value* noundef %7, %struct.Value* noundef %8)
  store %struct.Value* %9, %struct.Value** %4, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  call void @removeReference(%struct.Value* noundef %10)
  %11 = load %struct.Value*, %struct.Value** %4, align 8
  ret %struct.Value* %11
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_12(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %9 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %9, %struct.Value_Arglist** %5, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  %11 = call %struct.Value* @newReference(%struct.Value* noundef %10)
  %12 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %13 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %12, i32 0, i32 3
  %14 = load %struct.Value**, %struct.Value*** %13, align 8
  %15 = getelementptr inbounds %struct.Value*, %struct.Value** %14, i64 0
  store %struct.Value* %11, %struct.Value** %15, align 8
  %16 = load %struct.Value*, %struct.Value** %4, align 8
  %17 = call %struct.Value* @newReference(%struct.Value* noundef %16)
  %18 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %19 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %18, i32 0, i32 3
  %20 = load %struct.Value**, %struct.Value*** %19, align 8
  %21 = getelementptr inbounds %struct.Value*, %struct.Value** %20, i64 1
  store %struct.Value* %17, %struct.Value** %21, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd_min_Ord_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %22 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %23 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %24 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %22, %struct.Value_Arglist* noundef %23)
  %25 = bitcast %struct.Value_Closure* %24 to %struct.Value*
  store %struct.Value* %25, %struct.Value** %7, align 8
  %26 = load %struct.Value*, %struct.Value** %7, align 8
  store %struct.Value* %26, %struct.Value** %8, align 8
  %27 = load %struct.Value*, %struct.Value** %8, align 8
  ret %struct.Value* %27
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd_min_Ord_Int_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_EqOrd_min_Ord_Int(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_11(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %9 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %9, %struct.Value_Arglist** %5, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  %11 = call %struct.Value* @newReference(%struct.Value* noundef %10)
  %12 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %13 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %12, i32 0, i32 3
  %14 = load %struct.Value**, %struct.Value*** %13, align 8
  %15 = getelementptr inbounds %struct.Value*, %struct.Value** %14, i64 0
  store %struct.Value* %11, %struct.Value** %15, align 8
  %16 = load %struct.Value*, %struct.Value** %4, align 8
  %17 = call %struct.Value* @newReference(%struct.Value* noundef %16)
  %18 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %19 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %18, i32 0, i32 3
  %20 = load %struct.Value**, %struct.Value*** %19, align 8
  %21 = getelementptr inbounds %struct.Value*, %struct.Value** %20, i64 1
  store %struct.Value* %17, %struct.Value** %21, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd_max_Ord_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %22 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %23 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %24 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %22, %struct.Value_Arglist* noundef %23)
  %25 = bitcast %struct.Value_Closure* %24 to %struct.Value*
  store %struct.Value* %25, %struct.Value** %7, align 8
  %26 = load %struct.Value*, %struct.Value** %7, align 8
  store %struct.Value* %26, %struct.Value** %8, align 8
  %27 = load %struct.Value*, %struct.Value** %8, align 8
  ret %struct.Value* %27
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd_max_Ord_Int_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_EqOrd_max_Ord_Int(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_10(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %9 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %9, %struct.Value_Arglist** %5, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  %11 = call %struct.Value* @newReference(%struct.Value* noundef %10)
  %12 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %13 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %12, i32 0, i32 3
  %14 = load %struct.Value**, %struct.Value*** %13, align 8
  %15 = getelementptr inbounds %struct.Value*, %struct.Value** %14, i64 0
  store %struct.Value* %11, %struct.Value** %15, align 8
  %16 = load %struct.Value*, %struct.Value** %4, align 8
  %17 = call %struct.Value* @newReference(%struct.Value* noundef %16)
  %18 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %19 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %18, i32 0, i32 3
  %20 = load %struct.Value**, %struct.Value*** %19, align 8
  %21 = getelementptr inbounds %struct.Value*, %struct.Value** %20, i64 1
  store %struct.Value* %17, %struct.Value** %21, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__gt_eq_Ord_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %22 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %23 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %24 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %22, %struct.Value_Arglist* noundef %23)
  %25 = bitcast %struct.Value_Closure* %24 to %struct.Value*
  store %struct.Value* %25, %struct.Value** %7, align 8
  %26 = load %struct.Value*, %struct.Value** %7, align 8
  store %struct.Value* %26, %struct.Value** %8, align 8
  %27 = load %struct.Value*, %struct.Value** %8, align 8
  ret %struct.Value* %27
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__gt_eq_Ord_Int_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_EqOrd__gt_eq_Ord_Int(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_9(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %9 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %9, %struct.Value_Arglist** %5, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  %11 = call %struct.Value* @newReference(%struct.Value* noundef %10)
  %12 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %13 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %12, i32 0, i32 3
  %14 = load %struct.Value**, %struct.Value*** %13, align 8
  %15 = getelementptr inbounds %struct.Value*, %struct.Value** %14, i64 0
  store %struct.Value* %11, %struct.Value** %15, align 8
  %16 = load %struct.Value*, %struct.Value** %4, align 8
  %17 = call %struct.Value* @newReference(%struct.Value* noundef %16)
  %18 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %19 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %18, i32 0, i32 3
  %20 = load %struct.Value**, %struct.Value*** %19, align 8
  %21 = getelementptr inbounds %struct.Value*, %struct.Value** %20, i64 1
  store %struct.Value* %17, %struct.Value** %21, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__lt_eq_Ord_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %22 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %23 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %24 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %22, %struct.Value_Arglist* noundef %23)
  %25 = bitcast %struct.Value_Closure* %24 to %struct.Value*
  store %struct.Value* %25, %struct.Value** %7, align 8
  %26 = load %struct.Value*, %struct.Value** %7, align 8
  store %struct.Value* %26, %struct.Value** %8, align 8
  %27 = load %struct.Value*, %struct.Value** %8, align 8
  ret %struct.Value* %27
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__lt_eq_Ord_Int_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_EqOrd__lt_eq_Ord_Int(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_8(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %9 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %9, %struct.Value_Arglist** %5, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  %11 = call %struct.Value* @newReference(%struct.Value* noundef %10)
  %12 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %13 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %12, i32 0, i32 3
  %14 = load %struct.Value**, %struct.Value*** %13, align 8
  %15 = getelementptr inbounds %struct.Value*, %struct.Value** %14, i64 0
  store %struct.Value* %11, %struct.Value** %15, align 8
  %16 = load %struct.Value*, %struct.Value** %4, align 8
  %17 = call %struct.Value* @newReference(%struct.Value* noundef %16)
  %18 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %19 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %18, i32 0, i32 3
  %20 = load %struct.Value**, %struct.Value*** %19, align 8
  %21 = getelementptr inbounds %struct.Value*, %struct.Value** %20, i64 1
  store %struct.Value* %17, %struct.Value** %21, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__gt_Ord_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %22 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %23 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %24 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %22, %struct.Value_Arglist* noundef %23)
  %25 = bitcast %struct.Value_Closure* %24 to %struct.Value*
  store %struct.Value* %25, %struct.Value** %7, align 8
  %26 = load %struct.Value*, %struct.Value** %7, align 8
  store %struct.Value* %26, %struct.Value** %8, align 8
  %27 = load %struct.Value*, %struct.Value** %8, align 8
  ret %struct.Value* %27
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__gt_Ord_Int_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_EqOrd__gt_Ord_Int(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_7(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %9 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %9, %struct.Value_Arglist** %5, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  %11 = call %struct.Value* @newReference(%struct.Value* noundef %10)
  %12 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %13 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %12, i32 0, i32 3
  %14 = load %struct.Value**, %struct.Value*** %13, align 8
  %15 = getelementptr inbounds %struct.Value*, %struct.Value** %14, i64 0
  store %struct.Value* %11, %struct.Value** %15, align 8
  %16 = load %struct.Value*, %struct.Value** %4, align 8
  %17 = call %struct.Value* @newReference(%struct.Value* noundef %16)
  %18 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %19 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %18, i32 0, i32 3
  %20 = load %struct.Value**, %struct.Value*** %19, align 8
  %21 = getelementptr inbounds %struct.Value*, %struct.Value** %20, i64 1
  store %struct.Value* %17, %struct.Value** %21, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__lt_Ord_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %22 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %23 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %24 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %22, %struct.Value_Arglist* noundef %23)
  %25 = bitcast %struct.Value_Closure* %24 to %struct.Value*
  store %struct.Value* %25, %struct.Value** %7, align 8
  %26 = load %struct.Value*, %struct.Value** %7, align 8
  store %struct.Value* %26, %struct.Value** %8, align 8
  %27 = load %struct.Value*, %struct.Value** %8, align 8
  ret %struct.Value* %27
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__lt_Ord_Int_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_EqOrd__lt_Ord_Int(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_6(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %9 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %9, %struct.Value_Arglist** %5, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  %11 = call %struct.Value* @newReference(%struct.Value* noundef %10)
  %12 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %13 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %12, i32 0, i32 3
  %14 = load %struct.Value**, %struct.Value*** %13, align 8
  %15 = getelementptr inbounds %struct.Value*, %struct.Value** %14, i64 0
  store %struct.Value* %11, %struct.Value** %15, align 8
  %16 = load %struct.Value*, %struct.Value** %4, align 8
  %17 = call %struct.Value* @newReference(%struct.Value* noundef %16)
  %18 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %19 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %18, i32 0, i32 3
  %20 = load %struct.Value**, %struct.Value*** %19, align 8
  %21 = getelementptr inbounds %struct.Value*, %struct.Value** %20, i64 1
  store %struct.Value* %17, %struct.Value** %21, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd_compare_Ord_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %22 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %23 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %24 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %22, %struct.Value_Arglist* noundef %23)
  %25 = bitcast %struct.Value_Closure* %24 to %struct.Value*
  store %struct.Value* %25, %struct.Value** %7, align 8
  %26 = load %struct.Value*, %struct.Value** %7, align 8
  store %struct.Value* %26, %struct.Value** %8, align 8
  %27 = load %struct.Value*, %struct.Value** %8, align 8
  ret %struct.Value* %27
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd_compare_Ord_Int_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_EqOrd_compare_Ord_Int(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_5(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %9 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %9, %struct.Value_Arglist** %5, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  %11 = call %struct.Value* @newReference(%struct.Value* noundef %10)
  %12 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %13 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %12, i32 0, i32 3
  %14 = load %struct.Value**, %struct.Value*** %13, align 8
  %15 = getelementptr inbounds %struct.Value*, %struct.Value** %14, i64 0
  store %struct.Value* %11, %struct.Value** %15, align 8
  %16 = load %struct.Value*, %struct.Value** %4, align 8
  %17 = call %struct.Value* @newReference(%struct.Value* noundef %16)
  %18 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %19 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %18, i32 0, i32 3
  %20 = load %struct.Value**, %struct.Value*** %19, align 8
  %21 = getelementptr inbounds %struct.Value*, %struct.Value** %20, i64 1
  store %struct.Value* %17, %struct.Value** %21, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__slash_eq_Eq_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %22 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %23 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %24 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %22, %struct.Value_Arglist* noundef %23)
  %25 = bitcast %struct.Value_Closure* %24 to %struct.Value*
  store %struct.Value* %25, %struct.Value** %7, align 8
  %26 = load %struct.Value*, %struct.Value** %7, align 8
  store %struct.Value* %26, %struct.Value** %8, align 8
  %27 = load %struct.Value*, %struct.Value** %8, align 8
  ret %struct.Value* %27
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__slash_eq_Eq_Int_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_EqOrd__slash_eq_Eq_Int(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_4(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %9 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %9, %struct.Value_Arglist** %5, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  %11 = call %struct.Value* @newReference(%struct.Value* noundef %10)
  %12 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %13 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %12, i32 0, i32 3
  %14 = load %struct.Value**, %struct.Value*** %13, align 8
  %15 = getelementptr inbounds %struct.Value*, %struct.Value** %14, i64 0
  store %struct.Value* %11, %struct.Value** %15, align 8
  %16 = load %struct.Value*, %struct.Value** %4, align 8
  %17 = call %struct.Value* @newReference(%struct.Value* noundef %16)
  %18 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %19 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %18, i32 0, i32 3
  %20 = load %struct.Value**, %struct.Value*** %19, align 8
  %21 = getelementptr inbounds %struct.Value*, %struct.Value** %20, i64 1
  store %struct.Value* %17, %struct.Value** %21, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__eq_eq_Eq_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %22 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %23 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %24 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %22, %struct.Value_Arglist* noundef %23)
  %25 = bitcast %struct.Value_Closure* %24 to %struct.Value*
  store %struct.Value* %25, %struct.Value** %7, align 8
  %26 = load %struct.Value*, %struct.Value** %7, align 8
  store %struct.Value* %26, %struct.Value** %8, align 8
  %27 = load %struct.Value*, %struct.Value** %8, align 8
  ret %struct.Value* %27
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__eq_eq_Eq_Int_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_EqOrd__eq_eq_Eq_Int(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_3(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %9 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %9, %struct.Value_Arglist** %5, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  %11 = call %struct.Value* @newReference(%struct.Value* noundef %10)
  %12 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %13 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %12, i32 0, i32 3
  %14 = load %struct.Value**, %struct.Value*** %13, align 8
  %15 = getelementptr inbounds %struct.Value*, %struct.Value** %14, i64 0
  store %struct.Value* %11, %struct.Value** %15, align 8
  %16 = load %struct.Value*, %struct.Value** %4, align 8
  %17 = call %struct.Value* @newReference(%struct.Value* noundef %16)
  %18 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %19 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %18, i32 0, i32 3
  %20 = load %struct.Value**, %struct.Value*** %19, align 8
  %21 = getelementptr inbounds %struct.Value*, %struct.Value** %20, i64 1
  store %struct.Value* %17, %struct.Value** %21, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Num_mod_Integral_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %22 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %23 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %24 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %22, %struct.Value_Arglist* noundef %23)
  %25 = bitcast %struct.Value_Closure* %24 to %struct.Value*
  store %struct.Value* %25, %struct.Value** %7, align 8
  %26 = load %struct.Value*, %struct.Value** %7, align 8
  store %struct.Value* %26, %struct.Value** %8, align 8
  %27 = load %struct.Value*, %struct.Value** %8, align 8
  ret %struct.Value* %27
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Num_mod_Integral_Int_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_Num_mod_Integral_Int(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_2(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %9 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %9, %struct.Value_Arglist** %5, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  %11 = call %struct.Value* @newReference(%struct.Value* noundef %10)
  %12 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %13 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %12, i32 0, i32 3
  %14 = load %struct.Value**, %struct.Value*** %13, align 8
  %15 = getelementptr inbounds %struct.Value*, %struct.Value** %14, i64 0
  store %struct.Value* %11, %struct.Value** %15, align 8
  %16 = load %struct.Value*, %struct.Value** %4, align 8
  %17 = call %struct.Value* @newReference(%struct.Value* noundef %16)
  %18 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %19 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %18, i32 0, i32 3
  %20 = load %struct.Value**, %struct.Value*** %19, align 8
  %21 = getelementptr inbounds %struct.Value*, %struct.Value** %20, i64 1
  store %struct.Value* %17, %struct.Value** %21, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Num_div_Integral_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %22 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %23 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %24 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %22, %struct.Value_Arglist* noundef %23)
  %25 = bitcast %struct.Value_Closure* %24 to %struct.Value*
  store %struct.Value* %25, %struct.Value** %7, align 8
  %26 = load %struct.Value*, %struct.Value** %7, align 8
  store %struct.Value* %26, %struct.Value** %8, align 8
  %27 = load %struct.Value*, %struct.Value** %8, align 8
  ret %struct.Value* %27
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Num_div_Integral_Int_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_Num_div_Integral_Int(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_1(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %9 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %9, %struct.Value_Arglist** %5, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  %11 = call %struct.Value* @newReference(%struct.Value* noundef %10)
  %12 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %13 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %12, i32 0, i32 3
  %14 = load %struct.Value**, %struct.Value*** %13, align 8
  %15 = getelementptr inbounds %struct.Value*, %struct.Value** %14, i64 0
  store %struct.Value* %11, %struct.Value** %15, align 8
  %16 = load %struct.Value*, %struct.Value** %4, align 8
  %17 = call %struct.Value* @newReference(%struct.Value* noundef %16)
  %18 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %19 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %18, i32 0, i32 3
  %20 = load %struct.Value**, %struct.Value*** %19, align 8
  %21 = getelementptr inbounds %struct.Value*, %struct.Value** %20, i64 1
  store %struct.Value* %17, %struct.Value** %21, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showPrec_Show_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %22 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %23 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %24 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %22, %struct.Value_Arglist* noundef %23)
  %25 = bitcast %struct.Value_Closure* %24 to %struct.Value*
  store %struct.Value* %25, %struct.Value** %7, align 8
  %26 = load %struct.Value*, %struct.Value** %7, align 8
  store %struct.Value* %26, %struct.Value** %8, align 8
  %27 = load %struct.Value*, %struct.Value** %8, align 8
  ret %struct.Value* %27
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showPrec_Show_Int_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_Show_showPrec_Show_Int(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_main_0(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value_Arglist*, align 8
  %4 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %7 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %7, %struct.Value_Arglist** %3, align 8
  %8 = load %struct.Value*, %struct.Value** %2, align 8
  %9 = call %struct.Value* @newReference(%struct.Value* noundef %8)
  %10 = load %struct.Value_Arglist*, %struct.Value_Arglist** %3, align 8
  %11 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %10, i32 0, i32 3
  %12 = load %struct.Value**, %struct.Value*** %11, align 8
  %13 = getelementptr inbounds %struct.Value*, %struct.Value** %12, i64 0
  store %struct.Value* %9, %struct.Value** %13, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_show_Show_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %4, align 8
  %14 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %4, align 8
  %15 = load %struct.Value_Arglist*, %struct.Value_Arglist** %3, align 8
  %16 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %14, %struct.Value_Arglist* noundef %15)
  %17 = bitcast %struct.Value_Closure* %16 to %struct.Value*
  store %struct.Value* %17, %struct.Value** %5, align 8
  %18 = load %struct.Value*, %struct.Value** %5, align 8
  store %struct.Value* %18, %struct.Value** %6, align 8
  %19 = load %struct.Value*, %struct.Value** %6, align 8
  ret %struct.Value* %19
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_fastfibsum(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca i64, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %4 = load %struct.Value*, %struct.Value** %2, align 8
  %5 = bitcast %struct.Value* %4 to %struct.Value_Int64*
  %6 = getelementptr inbounds %struct.Value_Int64, %struct.Value_Int64* %5, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = call i32 @fastfibsum(i32 noundef %8)
  %10 = sext i32 %9 to i64
  store i64 %10, i64* %3, align 8
  %11 = load i64, i64* %3, align 8
  %12 = call %struct.Value_Int64* @makeInt64(i64 noundef %11)
  %13 = bitcast %struct.Value_Int64* %12 to %struct.Value*
  ret %struct.Value* %13
}

declare i32 @fastfibsum(i32 noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Main_add(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca i64, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %6 = load %struct.Value*, %struct.Value** %3, align 8
  %7 = bitcast %struct.Value* %6 to %struct.Value_Int64*
  %8 = getelementptr inbounds %struct.Value_Int64, %struct.Value_Int64* %7, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = load %struct.Value*, %struct.Value** %4, align 8
  %12 = bitcast %struct.Value* %11 to %struct.Value_Int64*
  %13 = getelementptr inbounds %struct.Value_Int64, %struct.Value_Int64* %12, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = call i32 @add(i32 noundef %10, i32 noundef %15)
  %17 = sext i32 %16 to i64
  store i64 %17, i64* %5, align 8
  %18 = load i64, i64* %5, align 8
  %19 = call %struct.Value_Int64* @makeInt64(i64 noundef %18)
  %20 = bitcast %struct.Value_Int64* %19 to %struct.Value*
  ret %struct.Value* %20
}

declare i32 @add(i32 noundef, i32 noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Builtin_snd(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.AConAlt*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  store %struct.Value* null, %struct.Value** %3, align 8
  %8 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %8, %struct.AConAlt** %4, align 8
  %9 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %10 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %9, i64 0
  %11 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %10, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %13 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %12, i64 0
  %14 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %13, i32 0, i32 0
  store i8* null, i8** %14, align 8
  %15 = load %struct.Value*, %struct.Value** %2, align 8
  %16 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %17 = call i32 @compareConstructors(%struct.Value* noundef %15, %struct.AConAlt* noundef %16, i32 noundef 1)
  switch i32 %17, label %33 [
    i32 0, label %18
  ]

18:                                               ; preds = %1
  %19 = load %struct.Value*, %struct.Value** %2, align 8
  %20 = bitcast %struct.Value* %19 to %struct.Value_Constructor*
  %21 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %20, i32 0, i32 4
  %22 = load %struct.Value**, %struct.Value*** %21, align 8
  %23 = getelementptr inbounds %struct.Value*, %struct.Value** %22, i64 0
  %24 = load %struct.Value*, %struct.Value** %23, align 8
  store %struct.Value* %24, %struct.Value** %5, align 8
  %25 = load %struct.Value*, %struct.Value** %2, align 8
  %26 = bitcast %struct.Value* %25 to %struct.Value_Constructor*
  %27 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %26, i32 0, i32 4
  %28 = load %struct.Value**, %struct.Value*** %27, align 8
  %29 = getelementptr inbounds %struct.Value*, %struct.Value** %28, i64 1
  %30 = load %struct.Value*, %struct.Value** %29, align 8
  store %struct.Value* %30, %struct.Value** %6, align 8
  %31 = load %struct.Value*, %struct.Value** %6, align 8
  %32 = call %struct.Value* @newReference(%struct.Value* noundef %31)
  store %struct.Value* %32, %struct.Value** %3, align 8
  br label %33

33:                                               ; preds = %1, %18
  %34 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %35 = bitcast %struct.AConAlt* %34 to i8*
  call void @free(i8* noundef %35)
  %36 = load %struct.Value*, %struct.Value** %3, align 8
  store %struct.Value* %36, %struct.Value** %7, align 8
  %37 = load %struct.Value*, %struct.Value** %7, align 8
  ret %struct.Value* %37
}

declare %struct.AConAlt* @newConstructorField(i32 noundef) #1

declare i32 @compareConstructors(%struct.Value* noundef, %struct.AConAlt* noundef, i32 noundef) #1

declare void @free(i8* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Builtin_snd_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Builtin_snd(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Builtin_fst(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.AConAlt*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  store %struct.Value* null, %struct.Value** %3, align 8
  %8 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %8, %struct.AConAlt** %4, align 8
  %9 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %10 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %9, i64 0
  %11 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %10, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %13 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %12, i64 0
  %14 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %13, i32 0, i32 0
  store i8* null, i8** %14, align 8
  %15 = load %struct.Value*, %struct.Value** %2, align 8
  %16 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %17 = call i32 @compareConstructors(%struct.Value* noundef %15, %struct.AConAlt* noundef %16, i32 noundef 1)
  switch i32 %17, label %33 [
    i32 0, label %18
  ]

18:                                               ; preds = %1
  %19 = load %struct.Value*, %struct.Value** %2, align 8
  %20 = bitcast %struct.Value* %19 to %struct.Value_Constructor*
  %21 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %20, i32 0, i32 4
  %22 = load %struct.Value**, %struct.Value*** %21, align 8
  %23 = getelementptr inbounds %struct.Value*, %struct.Value** %22, i64 0
  %24 = load %struct.Value*, %struct.Value** %23, align 8
  store %struct.Value* %24, %struct.Value** %5, align 8
  %25 = load %struct.Value*, %struct.Value** %2, align 8
  %26 = bitcast %struct.Value* %25 to %struct.Value_Constructor*
  %27 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %26, i32 0, i32 4
  %28 = load %struct.Value**, %struct.Value*** %27, align 8
  %29 = getelementptr inbounds %struct.Value*, %struct.Value** %28, i64 1
  %30 = load %struct.Value*, %struct.Value** %29, align 8
  store %struct.Value* %30, %struct.Value** %6, align 8
  %31 = load %struct.Value*, %struct.Value** %5, align 8
  %32 = call %struct.Value* @newReference(%struct.Value* noundef %31)
  store %struct.Value* %32, %struct.Value** %3, align 8
  br label %33

33:                                               ; preds = %1, %18
  %34 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %35 = bitcast %struct.AConAlt* %34 to i8*
  call void @free(i8* noundef %35)
  %36 = load %struct.Value*, %struct.Value** %3, align 8
  store %struct.Value* %36, %struct.Value** %7, align 8
  %37 = load %struct.Value*, %struct.Value** %7, align 8
  ret %struct.Value* %37
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Builtin_fst_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Builtin_fst(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_rangeFromTo_Range__dollara(%struct.Value* noundef %0, %struct.Value* noundef %1, %struct.Value* noundef %2) #0 {
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value_Arglist*, align 8
  %8 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value*, align 8
  %11 = alloca %struct.Value_Arglist*, align 8
  %12 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %13 = alloca %struct.Value*, align 8
  %14 = alloca %struct.Value*, align 8
  %15 = alloca %struct.Value*, align 8
  %16 = alloca %struct.AConAlt*, align 8
  %17 = alloca %struct.Value*, align 8
  %18 = alloca %struct.Value*, align 8
  %19 = alloca %struct.Value*, align 8
  %20 = alloca %struct.Value*, align 8
  %21 = alloca %struct.Value*, align 8
  %22 = alloca %struct.Value*, align 8
  %23 = alloca %struct.Value*, align 8
  %24 = alloca %struct.Value*, align 8
  %25 = alloca %struct.Value*, align 8
  %26 = alloca %struct.Value*, align 8
  %27 = alloca %struct.Value*, align 8
  %28 = alloca %struct.Value_Arglist*, align 8
  %29 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %30 = alloca %struct.Value*, align 8
  %31 = alloca %struct.Value_Arglist*, align 8
  %32 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %33 = alloca %struct.Value*, align 8
  %34 = alloca %struct.Value_Arglist*, align 8
  %35 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %36 = alloca %struct.Value*, align 8
  %37 = alloca %struct.Value*, align 8
  %38 = alloca %struct.Value_Arglist*, align 8
  %39 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %40 = alloca %struct.Value*, align 8
  %41 = alloca %struct.Value_Arglist*, align 8
  %42 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %43 = alloca %struct.Value*, align 8
  %44 = alloca %struct.Value_Arglist*, align 8
  %45 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %46 = alloca %struct.Value*, align 8
  %47 = alloca %struct.Value_Arglist*, align 8
  %48 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %49 = alloca %struct.Value*, align 8
  %50 = alloca %struct.Value_Arglist*, align 8
  %51 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %52 = alloca %struct.Value*, align 8
  %53 = alloca %struct.Value*, align 8
  %54 = alloca %struct.Value_Arglist*, align 8
  %55 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %56 = alloca %struct.Value*, align 8
  %57 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %4, align 8
  store %struct.Value* %1, %struct.Value** %5, align 8
  store %struct.Value* %2, %struct.Value** %6, align 8
  %58 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %58, %struct.Value_Arglist** %7, align 8
  %59 = load %struct.Value*, %struct.Value** %4, align 8
  %60 = call %struct.Value* @newReference(%struct.Value* noundef %59)
  %61 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %62 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %61, i32 0, i32 3
  %63 = load %struct.Value**, %struct.Value*** %62, align 8
  %64 = getelementptr inbounds %struct.Value*, %struct.Value** %63, i64 0
  store %struct.Value* %60, %struct.Value** %64, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Builtin_snd_arglist, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %65 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %66 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %67 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %65, %struct.Value_Arglist* noundef %66)
  %68 = bitcast %struct.Value_Closure* %67 to %struct.Value*
  store %struct.Value* %68, %struct.Value** %9, align 8
  %69 = load %struct.Value*, %struct.Value** %9, align 8
  %70 = call %struct.Value* @trampoline(%struct.Value* noundef %69)
  store %struct.Value* %70, %struct.Value** %10, align 8
  %71 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %71, %struct.Value_Arglist** %11, align 8
  %72 = load %struct.Value*, %struct.Value** %10, align 8
  %73 = call %struct.Value* @newReference(%struct.Value* noundef %72)
  %74 = load %struct.Value_Arglist*, %struct.Value_Arglist** %11, align 8
  %75 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %74, i32 0, i32 3
  %76 = load %struct.Value**, %struct.Value*** %75, align 8
  %77 = getelementptr inbounds %struct.Value*, %struct.Value** %76, i64 0
  store %struct.Value* %73, %struct.Value** %77, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Builtin_fst_arglist, %struct.Value* (%struct.Value_Arglist*)** %12, align 8
  %78 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %12, align 8
  %79 = load %struct.Value_Arglist*, %struct.Value_Arglist** %11, align 8
  %80 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %78, %struct.Value_Arglist* noundef %79)
  %81 = bitcast %struct.Value_Closure* %80 to %struct.Value*
  store %struct.Value* %81, %struct.Value** %13, align 8
  %82 = load %struct.Value*, %struct.Value** %13, align 8
  %83 = call %struct.Value* @trampoline(%struct.Value* noundef %82)
  store %struct.Value* %83, %struct.Value** %14, align 8
  store %struct.Value* null, %struct.Value** %15, align 8
  %84 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %84, %struct.AConAlt** %16, align 8
  %85 = load %struct.AConAlt*, %struct.AConAlt** %16, align 8
  %86 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %85, i64 0
  %87 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %86, i32 0, i32 1
  store i32 0, i32* %87, align 8
  %88 = load %struct.AConAlt*, %struct.AConAlt** %16, align 8
  %89 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %88, i64 0
  %90 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %89, i32 0, i32 0
  store i8* null, i8** %90, align 8
  %91 = load %struct.Value*, %struct.Value** %14, align 8
  %92 = load %struct.AConAlt*, %struct.AConAlt** %16, align 8
  %93 = call i32 @compareConstructors(%struct.Value* noundef %91, %struct.AConAlt* noundef %92, i32 noundef 1)
  switch i32 %93, label %150 [
    i32 0, label %94
  ]

94:                                               ; preds = %3
  %95 = load %struct.Value*, %struct.Value** %14, align 8
  %96 = bitcast %struct.Value* %95 to %struct.Value_Constructor*
  %97 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %96, i32 0, i32 4
  %98 = load %struct.Value**, %struct.Value*** %97, align 8
  %99 = getelementptr inbounds %struct.Value*, %struct.Value** %98, i64 0
  %100 = load %struct.Value*, %struct.Value** %99, align 8
  store %struct.Value* %100, %struct.Value** %17, align 8
  %101 = load %struct.Value*, %struct.Value** %14, align 8
  %102 = bitcast %struct.Value* %101 to %struct.Value_Constructor*
  %103 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %102, i32 0, i32 4
  %104 = load %struct.Value**, %struct.Value*** %103, align 8
  %105 = getelementptr inbounds %struct.Value*, %struct.Value** %104, i64 1
  %106 = load %struct.Value*, %struct.Value** %105, align 8
  store %struct.Value* %106, %struct.Value** %18, align 8
  %107 = load %struct.Value*, %struct.Value** %14, align 8
  %108 = bitcast %struct.Value* %107 to %struct.Value_Constructor*
  %109 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %108, i32 0, i32 4
  %110 = load %struct.Value**, %struct.Value*** %109, align 8
  %111 = getelementptr inbounds %struct.Value*, %struct.Value** %110, i64 2
  %112 = load %struct.Value*, %struct.Value** %111, align 8
  store %struct.Value* %112, %struct.Value** %19, align 8
  %113 = load %struct.Value*, %struct.Value** %14, align 8
  %114 = bitcast %struct.Value* %113 to %struct.Value_Constructor*
  %115 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %114, i32 0, i32 4
  %116 = load %struct.Value**, %struct.Value*** %115, align 8
  %117 = getelementptr inbounds %struct.Value*, %struct.Value** %116, i64 3
  %118 = load %struct.Value*, %struct.Value** %117, align 8
  store %struct.Value* %118, %struct.Value** %20, align 8
  %119 = load %struct.Value*, %struct.Value** %14, align 8
  %120 = bitcast %struct.Value* %119 to %struct.Value_Constructor*
  %121 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %120, i32 0, i32 4
  %122 = load %struct.Value**, %struct.Value*** %121, align 8
  %123 = getelementptr inbounds %struct.Value*, %struct.Value** %122, i64 4
  %124 = load %struct.Value*, %struct.Value** %123, align 8
  store %struct.Value* %124, %struct.Value** %21, align 8
  %125 = load %struct.Value*, %struct.Value** %14, align 8
  %126 = bitcast %struct.Value* %125 to %struct.Value_Constructor*
  %127 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %126, i32 0, i32 4
  %128 = load %struct.Value**, %struct.Value*** %127, align 8
  %129 = getelementptr inbounds %struct.Value*, %struct.Value** %128, i64 5
  %130 = load %struct.Value*, %struct.Value** %129, align 8
  store %struct.Value* %130, %struct.Value** %22, align 8
  %131 = load %struct.Value*, %struct.Value** %14, align 8
  %132 = bitcast %struct.Value* %131 to %struct.Value_Constructor*
  %133 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %132, i32 0, i32 4
  %134 = load %struct.Value**, %struct.Value*** %133, align 8
  %135 = getelementptr inbounds %struct.Value*, %struct.Value** %134, i64 6
  %136 = load %struct.Value*, %struct.Value** %135, align 8
  store %struct.Value* %136, %struct.Value** %23, align 8
  %137 = load %struct.Value*, %struct.Value** %14, align 8
  %138 = bitcast %struct.Value* %137 to %struct.Value_Constructor*
  %139 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %138, i32 0, i32 4
  %140 = load %struct.Value**, %struct.Value*** %139, align 8
  %141 = getelementptr inbounds %struct.Value*, %struct.Value** %140, i64 7
  %142 = load %struct.Value*, %struct.Value** %141, align 8
  store %struct.Value* %142, %struct.Value** %24, align 8
  %143 = load %struct.Value*, %struct.Value** %18, align 8
  %144 = load %struct.Value*, %struct.Value** %5, align 8
  %145 = call %struct.Value* @apply_closure(%struct.Value* noundef %143, %struct.Value* noundef %144)
  store %struct.Value* %145, %struct.Value** %25, align 8
  %146 = load %struct.Value*, %struct.Value** %25, align 8
  %147 = load %struct.Value*, %struct.Value** %6, align 8
  %148 = call %struct.Value* @apply_closure(%struct.Value* noundef %146, %struct.Value* noundef %147)
  store %struct.Value* %148, %struct.Value** %15, align 8
  %149 = load %struct.Value*, %struct.Value** %25, align 8
  call void @removeReference(%struct.Value* noundef %149)
  br label %150

150:                                              ; preds = %3, %94
  %151 = load %struct.AConAlt*, %struct.AConAlt** %16, align 8
  %152 = bitcast %struct.AConAlt* %151 to i8*
  call void @free(i8* noundef %152)
  %153 = load %struct.Value*, %struct.Value** %15, align 8
  store %struct.Value* %153, %struct.Value** %26, align 8
  store %struct.Value* null, %struct.Value** %27, align 8
  %154 = load %struct.Value*, %struct.Value** %26, align 8
  %155 = call i32 @extractInt(%struct.Value* noundef %154)
  switch i32 %155, label %307 [
    i32 0, label %156
    i32 1, label %225
    i32 2, label %238
  ]

156:                                              ; preds = %150
  %157 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 3)
  store %struct.Value_Arglist* %157, %struct.Value_Arglist** %28, align 8
  %158 = load %struct.Value*, %struct.Value** %4, align 8
  %159 = call %struct.Value* @newReference(%struct.Value* noundef %158)
  %160 = load %struct.Value_Arglist*, %struct.Value_Arglist** %28, align 8
  %161 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %160, i32 0, i32 3
  %162 = load %struct.Value**, %struct.Value*** %161, align 8
  %163 = getelementptr inbounds %struct.Value*, %struct.Value** %162, i64 0
  store %struct.Value* %159, %struct.Value** %163, align 8
  %164 = load %struct.Value*, %struct.Value** %6, align 8
  %165 = call %struct.Value* @newReference(%struct.Value* noundef %164)
  %166 = load %struct.Value_Arglist*, %struct.Value_Arglist** %28, align 8
  %167 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %166, i32 0, i32 3
  %168 = load %struct.Value**, %struct.Value*** %167, align 8
  %169 = getelementptr inbounds %struct.Value*, %struct.Value** %168, i64 1
  store %struct.Value* %165, %struct.Value** %169, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_rangeFromTo_Range__dollara_0_arglist, %struct.Value* (%struct.Value_Arglist*)** %29, align 8
  %170 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %29, align 8
  %171 = load %struct.Value_Arglist*, %struct.Value_Arglist** %28, align 8
  %172 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %170, %struct.Value_Arglist* noundef %171)
  %173 = bitcast %struct.Value_Closure* %172 to %struct.Value*
  store %struct.Value* %173, %struct.Value** %30, align 8
  %174 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 2)
  store %struct.Value_Arglist* %174, %struct.Value_Arglist** %31, align 8
  %175 = load %struct.Value*, %struct.Value** %4, align 8
  %176 = call %struct.Value* @newReference(%struct.Value* noundef %175)
  %177 = load %struct.Value_Arglist*, %struct.Value_Arglist** %31, align 8
  %178 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %177, i32 0, i32 3
  %179 = load %struct.Value**, %struct.Value*** %178, align 8
  %180 = getelementptr inbounds %struct.Value*, %struct.Value** %179, i64 0
  store %struct.Value* %176, %struct.Value** %180, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_rangeFromTo_Range__dollara_1_arglist, %struct.Value* (%struct.Value_Arglist*)** %32, align 8
  %181 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %32, align 8
  %182 = load %struct.Value_Arglist*, %struct.Value_Arglist** %31, align 8
  %183 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %181, %struct.Value_Arglist* noundef %182)
  %184 = bitcast %struct.Value_Closure* %183 to %struct.Value*
  store %struct.Value* %184, %struct.Value** %33, align 8
  %185 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %185, %struct.Value_Arglist** %34, align 8
  %186 = load %struct.Value*, %struct.Value** %5, align 8
  %187 = call %struct.Value* @newReference(%struct.Value* noundef %186)
  %188 = load %struct.Value_Arglist*, %struct.Value_Arglist** %34, align 8
  %189 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %188, i32 0, i32 3
  %190 = load %struct.Value**, %struct.Value*** %189, align 8
  %191 = getelementptr inbounds %struct.Value*, %struct.Value** %190, i64 0
  store %struct.Value* %187, %struct.Value** %191, align 8
  %192 = load %struct.Value*, %struct.Value** %33, align 8
  %193 = call %struct.Value* @newReference(%struct.Value* noundef %192)
  %194 = load %struct.Value_Arglist*, %struct.Value_Arglist** %34, align 8
  %195 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %194, i32 0, i32 3
  %196 = load %struct.Value**, %struct.Value*** %195, align 8
  %197 = getelementptr inbounds %struct.Value*, %struct.Value** %196, i64 1
  store %struct.Value* %193, %struct.Value** %197, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_countFrom_arglist, %struct.Value* (%struct.Value_Arglist*)** %35, align 8
  %198 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %35, align 8
  %199 = load %struct.Value_Arglist*, %struct.Value_Arglist** %34, align 8
  %200 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %198, %struct.Value_Arglist* noundef %199)
  %201 = bitcast %struct.Value_Closure* %200 to %struct.Value*
  store %struct.Value* %201, %struct.Value** %36, align 8
  %202 = load %struct.Value*, %struct.Value** %36, align 8
  %203 = call %struct.Value* @trampoline(%struct.Value* noundef %202)
  store %struct.Value* %203, %struct.Value** %37, align 8
  %204 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %204, %struct.Value_Arglist** %38, align 8
  %205 = load %struct.Value*, %struct.Value** %30, align 8
  %206 = call %struct.Value* @newReference(%struct.Value* noundef %205)
  %207 = load %struct.Value_Arglist*, %struct.Value_Arglist** %38, align 8
  %208 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %207, i32 0, i32 3
  %209 = load %struct.Value**, %struct.Value*** %208, align 8
  %210 = getelementptr inbounds %struct.Value*, %struct.Value** %209, i64 0
  store %struct.Value* %206, %struct.Value** %210, align 8
  %211 = load %struct.Value*, %struct.Value** %37, align 8
  %212 = call %struct.Value* @newReference(%struct.Value* noundef %211)
  %213 = load %struct.Value_Arglist*, %struct.Value_Arglist** %38, align 8
  %214 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %213, i32 0, i32 3
  %215 = load %struct.Value**, %struct.Value*** %214, align 8
  %216 = getelementptr inbounds %struct.Value*, %struct.Value** %215, i64 1
  store %struct.Value* %212, %struct.Value** %216, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_takeUntil_arglist, %struct.Value* (%struct.Value_Arglist*)** %39, align 8
  %217 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %39, align 8
  %218 = load %struct.Value_Arglist*, %struct.Value_Arglist** %38, align 8
  %219 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %217, %struct.Value_Arglist* noundef %218)
  %220 = bitcast %struct.Value_Closure* %219 to %struct.Value*
  store %struct.Value* %220, %struct.Value** %40, align 8
  %221 = load %struct.Value*, %struct.Value** %40, align 8
  store %struct.Value* %221, %struct.Value** %27, align 8
  %222 = load %struct.Value*, %struct.Value** %37, align 8
  call void @removeReference(%struct.Value* noundef %222)
  %223 = load %struct.Value*, %struct.Value** %33, align 8
  call void @removeReference(%struct.Value* noundef %223)
  %224 = load %struct.Value*, %struct.Value** %30, align 8
  call void @removeReference(%struct.Value* noundef %224)
  br label %307

225:                                              ; preds = %150
  %226 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %226, %struct.Value_Arglist** %41, align 8
  %227 = load %struct.Value*, %struct.Value** %5, align 8
  %228 = call %struct.Value* @newReference(%struct.Value* noundef %227)
  %229 = load %struct.Value_Arglist*, %struct.Value_Arglist** %41, align 8
  %230 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %229, i32 0, i32 3
  %231 = load %struct.Value**, %struct.Value*** %230, align 8
  %232 = getelementptr inbounds %struct.Value*, %struct.Value** %231, i64 0
  store %struct.Value* %228, %struct.Value** %232, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_pure_Applicative_List_arglist, %struct.Value* (%struct.Value_Arglist*)** %42, align 8
  %233 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %42, align 8
  %234 = load %struct.Value_Arglist*, %struct.Value_Arglist** %41, align 8
  %235 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %233, %struct.Value_Arglist* noundef %234)
  %236 = bitcast %struct.Value_Closure* %235 to %struct.Value*
  store %struct.Value* %236, %struct.Value** %43, align 8
  %237 = load %struct.Value*, %struct.Value** %43, align 8
  store %struct.Value* %237, %struct.Value** %27, align 8
  br label %307

238:                                              ; preds = %150
  %239 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 3)
  store %struct.Value_Arglist* %239, %struct.Value_Arglist** %44, align 8
  %240 = load %struct.Value*, %struct.Value** %4, align 8
  %241 = call %struct.Value* @newReference(%struct.Value* noundef %240)
  %242 = load %struct.Value_Arglist*, %struct.Value_Arglist** %44, align 8
  %243 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %242, i32 0, i32 3
  %244 = load %struct.Value**, %struct.Value*** %243, align 8
  %245 = getelementptr inbounds %struct.Value*, %struct.Value** %244, i64 0
  store %struct.Value* %241, %struct.Value** %245, align 8
  %246 = load %struct.Value*, %struct.Value** %6, align 8
  %247 = call %struct.Value* @newReference(%struct.Value* noundef %246)
  %248 = load %struct.Value_Arglist*, %struct.Value_Arglist** %44, align 8
  %249 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %248, i32 0, i32 3
  %250 = load %struct.Value**, %struct.Value*** %249, align 8
  %251 = getelementptr inbounds %struct.Value*, %struct.Value** %250, i64 1
  store %struct.Value* %247, %struct.Value** %251, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_rangeFromTo_Range__dollara_2_arglist, %struct.Value* (%struct.Value_Arglist*)** %45, align 8
  %252 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %45, align 8
  %253 = load %struct.Value_Arglist*, %struct.Value_Arglist** %44, align 8
  %254 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %252, %struct.Value_Arglist* noundef %253)
  %255 = bitcast %struct.Value_Closure* %254 to %struct.Value*
  store %struct.Value* %255, %struct.Value** %46, align 8
  %256 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 2)
  store %struct.Value_Arglist* %256, %struct.Value_Arglist** %47, align 8
  %257 = load %struct.Value*, %struct.Value** %4, align 8
  %258 = call %struct.Value* @newReference(%struct.Value* noundef %257)
  %259 = load %struct.Value_Arglist*, %struct.Value_Arglist** %47, align 8
  %260 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %259, i32 0, i32 3
  %261 = load %struct.Value**, %struct.Value*** %260, align 8
  %262 = getelementptr inbounds %struct.Value*, %struct.Value** %261, i64 0
  store %struct.Value* %258, %struct.Value** %262, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_rangeFromTo_Range__dollara_3_arglist, %struct.Value* (%struct.Value_Arglist*)** %48, align 8
  %263 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %48, align 8
  %264 = load %struct.Value_Arglist*, %struct.Value_Arglist** %47, align 8
  %265 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %263, %struct.Value_Arglist* noundef %264)
  %266 = bitcast %struct.Value_Closure* %265 to %struct.Value*
  store %struct.Value* %266, %struct.Value** %49, align 8
  %267 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %267, %struct.Value_Arglist** %50, align 8
  %268 = load %struct.Value*, %struct.Value** %5, align 8
  %269 = call %struct.Value* @newReference(%struct.Value* noundef %268)
  %270 = load %struct.Value_Arglist*, %struct.Value_Arglist** %50, align 8
  %271 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %270, i32 0, i32 3
  %272 = load %struct.Value**, %struct.Value*** %271, align 8
  %273 = getelementptr inbounds %struct.Value*, %struct.Value** %272, i64 0
  store %struct.Value* %269, %struct.Value** %273, align 8
  %274 = load %struct.Value*, %struct.Value** %49, align 8
  %275 = call %struct.Value* @newReference(%struct.Value* noundef %274)
  %276 = load %struct.Value_Arglist*, %struct.Value_Arglist** %50, align 8
  %277 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %276, i32 0, i32 3
  %278 = load %struct.Value**, %struct.Value*** %277, align 8
  %279 = getelementptr inbounds %struct.Value*, %struct.Value** %278, i64 1
  store %struct.Value* %275, %struct.Value** %279, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_countFrom_arglist, %struct.Value* (%struct.Value_Arglist*)** %51, align 8
  %280 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %51, align 8
  %281 = load %struct.Value_Arglist*, %struct.Value_Arglist** %50, align 8
  %282 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %280, %struct.Value_Arglist* noundef %281)
  %283 = bitcast %struct.Value_Closure* %282 to %struct.Value*
  store %struct.Value* %283, %struct.Value** %52, align 8
  %284 = load %struct.Value*, %struct.Value** %52, align 8
  %285 = call %struct.Value* @trampoline(%struct.Value* noundef %284)
  store %struct.Value* %285, %struct.Value** %53, align 8
  %286 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %286, %struct.Value_Arglist** %54, align 8
  %287 = load %struct.Value*, %struct.Value** %46, align 8
  %288 = call %struct.Value* @newReference(%struct.Value* noundef %287)
  %289 = load %struct.Value_Arglist*, %struct.Value_Arglist** %54, align 8
  %290 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %289, i32 0, i32 3
  %291 = load %struct.Value**, %struct.Value*** %290, align 8
  %292 = getelementptr inbounds %struct.Value*, %struct.Value** %291, i64 0
  store %struct.Value* %288, %struct.Value** %292, align 8
  %293 = load %struct.Value*, %struct.Value** %53, align 8
  %294 = call %struct.Value* @newReference(%struct.Value* noundef %293)
  %295 = load %struct.Value_Arglist*, %struct.Value_Arglist** %54, align 8
  %296 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %295, i32 0, i32 3
  %297 = load %struct.Value**, %struct.Value*** %296, align 8
  %298 = getelementptr inbounds %struct.Value*, %struct.Value** %297, i64 1
  store %struct.Value* %294, %struct.Value** %298, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_takeUntil_arglist, %struct.Value* (%struct.Value_Arglist*)** %55, align 8
  %299 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %55, align 8
  %300 = load %struct.Value_Arglist*, %struct.Value_Arglist** %54, align 8
  %301 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %299, %struct.Value_Arglist* noundef %300)
  %302 = bitcast %struct.Value_Closure* %301 to %struct.Value*
  store %struct.Value* %302, %struct.Value** %56, align 8
  %303 = load %struct.Value*, %struct.Value** %56, align 8
  store %struct.Value* %303, %struct.Value** %27, align 8
  %304 = load %struct.Value*, %struct.Value** %53, align 8
  call void @removeReference(%struct.Value* noundef %304)
  %305 = load %struct.Value*, %struct.Value** %49, align 8
  call void @removeReference(%struct.Value* noundef %305)
  %306 = load %struct.Value*, %struct.Value** %46, align 8
  call void @removeReference(%struct.Value* noundef %306)
  br label %307

307:                                              ; preds = %150, %238, %225, %156
  %308 = load %struct.Value*, %struct.Value** %27, align 8
  store %struct.Value* %308, %struct.Value** %57, align 8
  %309 = load %struct.Value*, %struct.Value** %26, align 8
  call void @removeReference(%struct.Value* noundef %309)
  %310 = load %struct.Value*, %struct.Value** %14, align 8
  call void @removeReference(%struct.Value* noundef %310)
  %311 = load %struct.Value*, %struct.Value** %10, align 8
  call void @removeReference(%struct.Value* noundef %311)
  %312 = load %struct.Value*, %struct.Value** %57, align 8
  ret %struct.Value* %312
}

declare %struct.Value* @apply_closure(%struct.Value* noundef, %struct.Value* noundef) #1

declare i32 @extractInt(%struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_rangeFromTo_Range__dollara_0_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %14 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %13, i32 0, i32 3
  %15 = load %struct.Value**, %struct.Value*** %14, align 8
  %16 = getelementptr inbounds %struct.Value*, %struct.Value** %15, i64 2
  %17 = load %struct.Value*, %struct.Value** %16, align 8
  %18 = call %struct.Value* @Prelude_Types_rangeFromTo_Range__dollara_0(%struct.Value* noundef %7, %struct.Value* noundef %12, %struct.Value* noundef %17)
  ret %struct.Value* %18
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_rangeFromTo_Range__dollara_1_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_Types_rangeFromTo_Range__dollara_1(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_countFrom_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_Types_countFrom(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_takeUntil_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_Types_takeUntil(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_rangeFromTo_Range__dollara_2_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %14 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %13, i32 0, i32 3
  %15 = load %struct.Value**, %struct.Value*** %14, align 8
  %16 = getelementptr inbounds %struct.Value*, %struct.Value** %15, i64 2
  %17 = load %struct.Value*, %struct.Value** %16, align 8
  %18 = call %struct.Value* @Prelude_Types_rangeFromTo_Range__dollara_2(%struct.Value* noundef %7, %struct.Value* noundef %12, %struct.Value* noundef %17)
  ret %struct.Value* %18
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_rangeFromTo_Range__dollara_3_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_Types_rangeFromTo_Range__dollara_3(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_rangeFromTo_Range__dollara_3(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.Value_Arglist*, align 8
  %10 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %11 = alloca %struct.Value*, align 8
  %12 = alloca %struct.Value*, align 8
  %13 = alloca %struct.Value*, align 8
  %14 = alloca %struct.AConAlt*, align 8
  %15 = alloca %struct.Value*, align 8
  %16 = alloca %struct.Value*, align 8
  %17 = alloca %struct.Value*, align 8
  %18 = alloca %struct.Value*, align 8
  %19 = alloca %struct.Value_Arglist*, align 8
  %20 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %21 = alloca %struct.Value*, align 8
  %22 = alloca %struct.Value*, align 8
  %23 = alloca %struct.Value_Arglist*, align 8
  %24 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %25 = alloca %struct.Value*, align 8
  %26 = alloca %struct.Value*, align 8
  %27 = alloca %struct.Value*, align 8
  %28 = alloca %struct.AConAlt*, align 8
  %29 = alloca %struct.Value*, align 8
  %30 = alloca %struct.Value*, align 8
  %31 = alloca %struct.Value*, align 8
  %32 = alloca %struct.Value*, align 8
  %33 = alloca %struct.AConAlt*, align 8
  %34 = alloca %struct.Value*, align 8
  %35 = alloca %struct.Value*, align 8
  %36 = alloca %struct.Value*, align 8
  %37 = alloca %struct.Value*, align 8
  %38 = alloca %struct.Value*, align 8
  %39 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %40 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %40, %struct.Value_Arglist** %5, align 8
  %41 = load %struct.Value*, %struct.Value** %3, align 8
  %42 = call %struct.Value* @newReference(%struct.Value* noundef %41)
  %43 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %44 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %43, i32 0, i32 3
  %45 = load %struct.Value**, %struct.Value*** %44, align 8
  %46 = getelementptr inbounds %struct.Value*, %struct.Value** %45, i64 0
  store %struct.Value* %42, %struct.Value** %46, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Builtin_snd_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %47 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %48 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %49 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %47, %struct.Value_Arglist* noundef %48)
  %50 = bitcast %struct.Value_Closure* %49 to %struct.Value*
  store %struct.Value* %50, %struct.Value** %7, align 8
  %51 = load %struct.Value*, %struct.Value** %7, align 8
  %52 = call %struct.Value* @trampoline(%struct.Value* noundef %51)
  store %struct.Value* %52, %struct.Value** %8, align 8
  %53 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %53, %struct.Value_Arglist** %9, align 8
  %54 = load %struct.Value*, %struct.Value** %8, align 8
  %55 = call %struct.Value* @newReference(%struct.Value* noundef %54)
  %56 = load %struct.Value_Arglist*, %struct.Value_Arglist** %9, align 8
  %57 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %56, i32 0, i32 3
  %58 = load %struct.Value**, %struct.Value*** %57, align 8
  %59 = getelementptr inbounds %struct.Value*, %struct.Value** %58, i64 0
  store %struct.Value* %55, %struct.Value** %59, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Builtin_snd_arglist, %struct.Value* (%struct.Value_Arglist*)** %10, align 8
  %60 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %10, align 8
  %61 = load %struct.Value_Arglist*, %struct.Value_Arglist** %9, align 8
  %62 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %60, %struct.Value_Arglist* noundef %61)
  %63 = bitcast %struct.Value_Closure* %62 to %struct.Value*
  store %struct.Value* %63, %struct.Value** %11, align 8
  %64 = load %struct.Value*, %struct.Value** %11, align 8
  %65 = call %struct.Value* @trampoline(%struct.Value* noundef %64)
  store %struct.Value* %65, %struct.Value** %12, align 8
  store %struct.Value* null, %struct.Value** %13, align 8
  %66 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %66, %struct.AConAlt** %14, align 8
  %67 = load %struct.AConAlt*, %struct.AConAlt** %14, align 8
  %68 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %67, i64 0
  %69 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %68, i32 0, i32 1
  store i32 0, i32* %69, align 8
  %70 = load %struct.AConAlt*, %struct.AConAlt** %14, align 8
  %71 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %70, i64 0
  %72 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %71, i32 0, i32 0
  store i8* null, i8** %72, align 8
  %73 = load %struct.Value*, %struct.Value** %12, align 8
  %74 = load %struct.AConAlt*, %struct.AConAlt** %14, align 8
  %75 = call i32 @compareConstructors(%struct.Value* noundef %73, %struct.AConAlt* noundef %74, i32 noundef 1)
  switch i32 %75, label %203 [
    i32 0, label %76
  ]

76:                                               ; preds = %2
  %77 = load %struct.Value*, %struct.Value** %12, align 8
  %78 = bitcast %struct.Value* %77 to %struct.Value_Constructor*
  %79 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %78, i32 0, i32 4
  %80 = load %struct.Value**, %struct.Value*** %79, align 8
  %81 = getelementptr inbounds %struct.Value*, %struct.Value** %80, i64 0
  %82 = load %struct.Value*, %struct.Value** %81, align 8
  store %struct.Value* %82, %struct.Value** %15, align 8
  %83 = load %struct.Value*, %struct.Value** %12, align 8
  %84 = bitcast %struct.Value* %83 to %struct.Value_Constructor*
  %85 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %84, i32 0, i32 4
  %86 = load %struct.Value**, %struct.Value*** %85, align 8
  %87 = getelementptr inbounds %struct.Value*, %struct.Value** %86, i64 1
  %88 = load %struct.Value*, %struct.Value** %87, align 8
  store %struct.Value* %88, %struct.Value** %16, align 8
  %89 = load %struct.Value*, %struct.Value** %12, align 8
  %90 = bitcast %struct.Value* %89 to %struct.Value_Constructor*
  %91 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %90, i32 0, i32 4
  %92 = load %struct.Value**, %struct.Value*** %91, align 8
  %93 = getelementptr inbounds %struct.Value*, %struct.Value** %92, i64 2
  %94 = load %struct.Value*, %struct.Value** %93, align 8
  store %struct.Value* %94, %struct.Value** %17, align 8
  %95 = load %struct.Value*, %struct.Value** %17, align 8
  %96 = load %struct.Value*, %struct.Value** %4, align 8
  %97 = call %struct.Value* @apply_closure(%struct.Value* noundef %95, %struct.Value* noundef %96)
  store %struct.Value* %97, %struct.Value** %18, align 8
  %98 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %98, %struct.Value_Arglist** %19, align 8
  %99 = load %struct.Value*, %struct.Value** %3, align 8
  %100 = call %struct.Value* @newReference(%struct.Value* noundef %99)
  %101 = load %struct.Value_Arglist*, %struct.Value_Arglist** %19, align 8
  %102 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %101, i32 0, i32 3
  %103 = load %struct.Value**, %struct.Value*** %102, align 8
  %104 = getelementptr inbounds %struct.Value*, %struct.Value** %103, i64 0
  store %struct.Value* %100, %struct.Value** %104, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Builtin_snd_arglist, %struct.Value* (%struct.Value_Arglist*)** %20, align 8
  %105 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %20, align 8
  %106 = load %struct.Value_Arglist*, %struct.Value_Arglist** %19, align 8
  %107 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %105, %struct.Value_Arglist* noundef %106)
  %108 = bitcast %struct.Value_Closure* %107 to %struct.Value*
  store %struct.Value* %108, %struct.Value** %21, align 8
  %109 = load %struct.Value*, %struct.Value** %21, align 8
  %110 = call %struct.Value* @trampoline(%struct.Value* noundef %109)
  store %struct.Value* %110, %struct.Value** %22, align 8
  %111 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %111, %struct.Value_Arglist** %23, align 8
  %112 = load %struct.Value*, %struct.Value** %22, align 8
  %113 = call %struct.Value* @newReference(%struct.Value* noundef %112)
  %114 = load %struct.Value_Arglist*, %struct.Value_Arglist** %23, align 8
  %115 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %114, i32 0, i32 3
  %116 = load %struct.Value**, %struct.Value*** %115, align 8
  %117 = getelementptr inbounds %struct.Value*, %struct.Value** %116, i64 0
  store %struct.Value* %113, %struct.Value** %117, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Builtin_snd_arglist, %struct.Value* (%struct.Value_Arglist*)** %24, align 8
  %118 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %24, align 8
  %119 = load %struct.Value_Arglist*, %struct.Value_Arglist** %23, align 8
  %120 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %118, %struct.Value_Arglist* noundef %119)
  %121 = bitcast %struct.Value_Closure* %120 to %struct.Value*
  store %struct.Value* %121, %struct.Value** %25, align 8
  %122 = load %struct.Value*, %struct.Value** %25, align 8
  %123 = call %struct.Value* @trampoline(%struct.Value* noundef %122)
  store %struct.Value* %123, %struct.Value** %26, align 8
  store %struct.Value* null, %struct.Value** %27, align 8
  %124 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %124, %struct.AConAlt** %28, align 8
  %125 = load %struct.AConAlt*, %struct.AConAlt** %28, align 8
  %126 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %125, i64 0
  %127 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %126, i32 0, i32 1
  store i32 0, i32* %127, align 8
  %128 = load %struct.AConAlt*, %struct.AConAlt** %28, align 8
  %129 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %128, i64 0
  %130 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %129, i32 0, i32 0
  store i8* null, i8** %130, align 8
  %131 = load %struct.Value*, %struct.Value** %26, align 8
  %132 = load %struct.AConAlt*, %struct.AConAlt** %28, align 8
  %133 = call i32 @compareConstructors(%struct.Value* noundef %131, %struct.AConAlt* noundef %132, i32 noundef 1)
  switch i32 %133, label %192 [
    i32 0, label %134
  ]

134:                                              ; preds = %76
  %135 = load %struct.Value*, %struct.Value** %26, align 8
  %136 = bitcast %struct.Value* %135 to %struct.Value_Constructor*
  %137 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %136, i32 0, i32 4
  %138 = load %struct.Value**, %struct.Value*** %137, align 8
  %139 = getelementptr inbounds %struct.Value*, %struct.Value** %138, i64 0
  %140 = load %struct.Value*, %struct.Value** %139, align 8
  store %struct.Value* %140, %struct.Value** %29, align 8
  %141 = load %struct.Value*, %struct.Value** %26, align 8
  %142 = bitcast %struct.Value* %141 to %struct.Value_Constructor*
  %143 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %142, i32 0, i32 4
  %144 = load %struct.Value**, %struct.Value*** %143, align 8
  %145 = getelementptr inbounds %struct.Value*, %struct.Value** %144, i64 1
  %146 = load %struct.Value*, %struct.Value** %145, align 8
  store %struct.Value* %146, %struct.Value** %30, align 8
  %147 = load %struct.Value*, %struct.Value** %26, align 8
  %148 = bitcast %struct.Value* %147 to %struct.Value_Constructor*
  %149 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %148, i32 0, i32 4
  %150 = load %struct.Value**, %struct.Value*** %149, align 8
  %151 = getelementptr inbounds %struct.Value*, %struct.Value** %150, i64 2
  %152 = load %struct.Value*, %struct.Value** %151, align 8
  store %struct.Value* %152, %struct.Value** %31, align 8
  store %struct.Value* null, %struct.Value** %32, align 8
  %153 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %153, %struct.AConAlt** %33, align 8
  %154 = load %struct.AConAlt*, %struct.AConAlt** %33, align 8
  %155 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %154, i64 0
  %156 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %155, i32 0, i32 1
  store i32 0, i32* %156, align 8
  %157 = load %struct.AConAlt*, %struct.AConAlt** %33, align 8
  %158 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %157, i64 0
  %159 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %158, i32 0, i32 0
  store i8* null, i8** %159, align 8
  %160 = load %struct.Value*, %struct.Value** %29, align 8
  %161 = load %struct.AConAlt*, %struct.AConAlt** %33, align 8
  %162 = call i32 @compareConstructors(%struct.Value* noundef %160, %struct.AConAlt* noundef %161, i32 noundef 1)
  switch i32 %162, label %188 [
    i32 0, label %163
  ]

163:                                              ; preds = %134
  %164 = load %struct.Value*, %struct.Value** %29, align 8
  %165 = bitcast %struct.Value* %164 to %struct.Value_Constructor*
  %166 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %165, i32 0, i32 4
  %167 = load %struct.Value**, %struct.Value*** %166, align 8
  %168 = getelementptr inbounds %struct.Value*, %struct.Value** %167, i64 0
  %169 = load %struct.Value*, %struct.Value** %168, align 8
  store %struct.Value* %169, %struct.Value** %34, align 8
  %170 = load %struct.Value*, %struct.Value** %29, align 8
  %171 = bitcast %struct.Value* %170 to %struct.Value_Constructor*
  %172 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %171, i32 0, i32 4
  %173 = load %struct.Value**, %struct.Value*** %172, align 8
  %174 = getelementptr inbounds %struct.Value*, %struct.Value** %173, i64 1
  %175 = load %struct.Value*, %struct.Value** %174, align 8
  store %struct.Value* %175, %struct.Value** %35, align 8
  %176 = load %struct.Value*, %struct.Value** %29, align 8
  %177 = bitcast %struct.Value* %176 to %struct.Value_Constructor*
  %178 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %177, i32 0, i32 4
  %179 = load %struct.Value**, %struct.Value*** %178, align 8
  %180 = getelementptr inbounds %struct.Value*, %struct.Value** %179, i64 2
  %181 = load %struct.Value*, %struct.Value** %180, align 8
  store %struct.Value* %181, %struct.Value** %36, align 8
  %182 = call %struct.Value_Integer* @makeIntegerLiteral(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0))
  %183 = bitcast %struct.Value_Integer* %182 to %struct.Value*
  store %struct.Value* %183, %struct.Value** %37, align 8
  %184 = load %struct.Value*, %struct.Value** %36, align 8
  %185 = load %struct.Value*, %struct.Value** %37, align 8
  %186 = call %struct.Value* @apply_closure(%struct.Value* noundef %184, %struct.Value* noundef %185)
  store %struct.Value* %186, %struct.Value** %32, align 8
  %187 = load %struct.Value*, %struct.Value** %37, align 8
  call void @removeReference(%struct.Value* noundef %187)
  br label %188

188:                                              ; preds = %134, %163
  %189 = load %struct.AConAlt*, %struct.AConAlt** %33, align 8
  %190 = bitcast %struct.AConAlt* %189 to i8*
  call void @free(i8* noundef %190)
  %191 = load %struct.Value*, %struct.Value** %32, align 8
  store %struct.Value* %191, %struct.Value** %27, align 8
  br label %192

192:                                              ; preds = %76, %188
  %193 = load %struct.AConAlt*, %struct.AConAlt** %28, align 8
  %194 = bitcast %struct.AConAlt* %193 to i8*
  call void @free(i8* noundef %194)
  %195 = load %struct.Value*, %struct.Value** %27, align 8
  store %struct.Value* %195, %struct.Value** %38, align 8
  %196 = load %struct.Value*, %struct.Value** %18, align 8
  %197 = load %struct.Value*, %struct.Value** %38, align 8
  %198 = call %struct.Value* @tailcall_apply_closure(%struct.Value* noundef %196, %struct.Value* noundef %197)
  store %struct.Value* %198, %struct.Value** %13, align 8
  %199 = load %struct.Value*, %struct.Value** %38, align 8
  call void @removeReference(%struct.Value* noundef %199)
  %200 = load %struct.Value*, %struct.Value** %26, align 8
  call void @removeReference(%struct.Value* noundef %200)
  %201 = load %struct.Value*, %struct.Value** %22, align 8
  call void @removeReference(%struct.Value* noundef %201)
  %202 = load %struct.Value*, %struct.Value** %18, align 8
  call void @removeReference(%struct.Value* noundef %202)
  br label %203

203:                                              ; preds = %2, %192
  %204 = load %struct.AConAlt*, %struct.AConAlt** %14, align 8
  %205 = bitcast %struct.AConAlt* %204 to i8*
  call void @free(i8* noundef %205)
  %206 = load %struct.Value*, %struct.Value** %13, align 8
  store %struct.Value* %206, %struct.Value** %39, align 8
  %207 = load %struct.Value*, %struct.Value** %12, align 8
  call void @removeReference(%struct.Value* noundef %207)
  %208 = load %struct.Value*, %struct.Value** %8, align 8
  call void @removeReference(%struct.Value* noundef %208)
  %209 = load %struct.Value*, %struct.Value** %39, align 8
  ret %struct.Value* %209
}

declare %struct.Value* @tailcall_apply_closure(%struct.Value* noundef, %struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_rangeFromTo_Range__dollara_2(%struct.Value* noundef %0, %struct.Value* noundef %1, %struct.Value* noundef %2) #0 {
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value_Arglist*, align 8
  %8 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value*, align 8
  %11 = alloca %struct.Value_Arglist*, align 8
  %12 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %13 = alloca %struct.Value*, align 8
  %14 = alloca %struct.Value*, align 8
  %15 = alloca %struct.Value*, align 8
  %16 = alloca %struct.AConAlt*, align 8
  %17 = alloca %struct.Value*, align 8
  %18 = alloca %struct.Value*, align 8
  %19 = alloca %struct.Value*, align 8
  %20 = alloca %struct.Value*, align 8
  %21 = alloca %struct.Value*, align 8
  %22 = alloca %struct.Value*, align 8
  %23 = alloca %struct.Value*, align 8
  %24 = alloca %struct.Value*, align 8
  %25 = alloca %struct.Value*, align 8
  %26 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %4, align 8
  store %struct.Value* %1, %struct.Value** %5, align 8
  store %struct.Value* %2, %struct.Value** %6, align 8
  %27 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %27, %struct.Value_Arglist** %7, align 8
  %28 = load %struct.Value*, %struct.Value** %4, align 8
  %29 = call %struct.Value* @newReference(%struct.Value* noundef %28)
  %30 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %31 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %30, i32 0, i32 3
  %32 = load %struct.Value**, %struct.Value*** %31, align 8
  %33 = getelementptr inbounds %struct.Value*, %struct.Value** %32, i64 0
  store %struct.Value* %29, %struct.Value** %33, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Builtin_snd_arglist, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %34 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %35 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %36 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %34, %struct.Value_Arglist* noundef %35)
  %37 = bitcast %struct.Value_Closure* %36 to %struct.Value*
  store %struct.Value* %37, %struct.Value** %9, align 8
  %38 = load %struct.Value*, %struct.Value** %9, align 8
  %39 = call %struct.Value* @trampoline(%struct.Value* noundef %38)
  store %struct.Value* %39, %struct.Value** %10, align 8
  %40 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %40, %struct.Value_Arglist** %11, align 8
  %41 = load %struct.Value*, %struct.Value** %10, align 8
  %42 = call %struct.Value* @newReference(%struct.Value* noundef %41)
  %43 = load %struct.Value_Arglist*, %struct.Value_Arglist** %11, align 8
  %44 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %43, i32 0, i32 3
  %45 = load %struct.Value**, %struct.Value*** %44, align 8
  %46 = getelementptr inbounds %struct.Value*, %struct.Value** %45, i64 0
  store %struct.Value* %42, %struct.Value** %46, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Builtin_fst_arglist, %struct.Value* (%struct.Value_Arglist*)** %12, align 8
  %47 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %12, align 8
  %48 = load %struct.Value_Arglist*, %struct.Value_Arglist** %11, align 8
  %49 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %47, %struct.Value_Arglist* noundef %48)
  %50 = bitcast %struct.Value_Closure* %49 to %struct.Value*
  store %struct.Value* %50, %struct.Value** %13, align 8
  %51 = load %struct.Value*, %struct.Value** %13, align 8
  %52 = call %struct.Value* @trampoline(%struct.Value* noundef %51)
  store %struct.Value* %52, %struct.Value** %14, align 8
  store %struct.Value* null, %struct.Value** %15, align 8
  %53 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %53, %struct.AConAlt** %16, align 8
  %54 = load %struct.AConAlt*, %struct.AConAlt** %16, align 8
  %55 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %54, i64 0
  %56 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %55, i32 0, i32 1
  store i32 0, i32* %56, align 8
  %57 = load %struct.AConAlt*, %struct.AConAlt** %16, align 8
  %58 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %57, i64 0
  %59 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %58, i32 0, i32 0
  store i8* null, i8** %59, align 8
  %60 = load %struct.Value*, %struct.Value** %14, align 8
  %61 = load %struct.AConAlt*, %struct.AConAlt** %16, align 8
  %62 = call i32 @compareConstructors(%struct.Value* noundef %60, %struct.AConAlt* noundef %61, i32 noundef 1)
  switch i32 %62, label %119 [
    i32 0, label %63
  ]

63:                                               ; preds = %3
  %64 = load %struct.Value*, %struct.Value** %14, align 8
  %65 = bitcast %struct.Value* %64 to %struct.Value_Constructor*
  %66 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %65, i32 0, i32 4
  %67 = load %struct.Value**, %struct.Value*** %66, align 8
  %68 = getelementptr inbounds %struct.Value*, %struct.Value** %67, i64 0
  %69 = load %struct.Value*, %struct.Value** %68, align 8
  store %struct.Value* %69, %struct.Value** %17, align 8
  %70 = load %struct.Value*, %struct.Value** %14, align 8
  %71 = bitcast %struct.Value* %70 to %struct.Value_Constructor*
  %72 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %71, i32 0, i32 4
  %73 = load %struct.Value**, %struct.Value*** %72, align 8
  %74 = getelementptr inbounds %struct.Value*, %struct.Value** %73, i64 1
  %75 = load %struct.Value*, %struct.Value** %74, align 8
  store %struct.Value* %75, %struct.Value** %18, align 8
  %76 = load %struct.Value*, %struct.Value** %14, align 8
  %77 = bitcast %struct.Value* %76 to %struct.Value_Constructor*
  %78 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %77, i32 0, i32 4
  %79 = load %struct.Value**, %struct.Value*** %78, align 8
  %80 = getelementptr inbounds %struct.Value*, %struct.Value** %79, i64 2
  %81 = load %struct.Value*, %struct.Value** %80, align 8
  store %struct.Value* %81, %struct.Value** %19, align 8
  %82 = load %struct.Value*, %struct.Value** %14, align 8
  %83 = bitcast %struct.Value* %82 to %struct.Value_Constructor*
  %84 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %83, i32 0, i32 4
  %85 = load %struct.Value**, %struct.Value*** %84, align 8
  %86 = getelementptr inbounds %struct.Value*, %struct.Value** %85, i64 3
  %87 = load %struct.Value*, %struct.Value** %86, align 8
  store %struct.Value* %87, %struct.Value** %20, align 8
  %88 = load %struct.Value*, %struct.Value** %14, align 8
  %89 = bitcast %struct.Value* %88 to %struct.Value_Constructor*
  %90 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %89, i32 0, i32 4
  %91 = load %struct.Value**, %struct.Value*** %90, align 8
  %92 = getelementptr inbounds %struct.Value*, %struct.Value** %91, i64 4
  %93 = load %struct.Value*, %struct.Value** %92, align 8
  store %struct.Value* %93, %struct.Value** %21, align 8
  %94 = load %struct.Value*, %struct.Value** %14, align 8
  %95 = bitcast %struct.Value* %94 to %struct.Value_Constructor*
  %96 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %95, i32 0, i32 4
  %97 = load %struct.Value**, %struct.Value*** %96, align 8
  %98 = getelementptr inbounds %struct.Value*, %struct.Value** %97, i64 5
  %99 = load %struct.Value*, %struct.Value** %98, align 8
  store %struct.Value* %99, %struct.Value** %22, align 8
  %100 = load %struct.Value*, %struct.Value** %14, align 8
  %101 = bitcast %struct.Value* %100 to %struct.Value_Constructor*
  %102 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %101, i32 0, i32 4
  %103 = load %struct.Value**, %struct.Value*** %102, align 8
  %104 = getelementptr inbounds %struct.Value*, %struct.Value** %103, i64 6
  %105 = load %struct.Value*, %struct.Value** %104, align 8
  store %struct.Value* %105, %struct.Value** %23, align 8
  %106 = load %struct.Value*, %struct.Value** %14, align 8
  %107 = bitcast %struct.Value* %106 to %struct.Value_Constructor*
  %108 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %107, i32 0, i32 4
  %109 = load %struct.Value**, %struct.Value*** %108, align 8
  %110 = getelementptr inbounds %struct.Value*, %struct.Value** %109, i64 7
  %111 = load %struct.Value*, %struct.Value** %110, align 8
  store %struct.Value* %111, %struct.Value** %24, align 8
  %112 = load %struct.Value*, %struct.Value** %21, align 8
  %113 = load %struct.Value*, %struct.Value** %6, align 8
  %114 = call %struct.Value* @apply_closure(%struct.Value* noundef %112, %struct.Value* noundef %113)
  store %struct.Value* %114, %struct.Value** %25, align 8
  %115 = load %struct.Value*, %struct.Value** %25, align 8
  %116 = load %struct.Value*, %struct.Value** %5, align 8
  %117 = call %struct.Value* @tailcall_apply_closure(%struct.Value* noundef %115, %struct.Value* noundef %116)
  store %struct.Value* %117, %struct.Value** %15, align 8
  %118 = load %struct.Value*, %struct.Value** %25, align 8
  call void @removeReference(%struct.Value* noundef %118)
  br label %119

119:                                              ; preds = %3, %63
  %120 = load %struct.AConAlt*, %struct.AConAlt** %16, align 8
  %121 = bitcast %struct.AConAlt* %120 to i8*
  call void @free(i8* noundef %121)
  %122 = load %struct.Value*, %struct.Value** %15, align 8
  store %struct.Value* %122, %struct.Value** %26, align 8
  %123 = load %struct.Value*, %struct.Value** %14, align 8
  call void @removeReference(%struct.Value* noundef %123)
  %124 = load %struct.Value*, %struct.Value** %10, align 8
  call void @removeReference(%struct.Value* noundef %124)
  %125 = load %struct.Value*, %struct.Value** %26, align 8
  ret %struct.Value* %125
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_rangeFromTo_Range__dollara_1(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.Value_Arglist*, align 8
  %10 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %11 = alloca %struct.Value*, align 8
  %12 = alloca %struct.Value*, align 8
  %13 = alloca %struct.Value*, align 8
  %14 = alloca %struct.AConAlt*, align 8
  %15 = alloca %struct.Value*, align 8
  %16 = alloca %struct.Value*, align 8
  %17 = alloca %struct.Value*, align 8
  %18 = alloca %struct.Value*, align 8
  %19 = alloca %struct.AConAlt*, align 8
  %20 = alloca %struct.Value*, align 8
  %21 = alloca %struct.Value*, align 8
  %22 = alloca %struct.Value*, align 8
  %23 = alloca %struct.Value*, align 8
  %24 = alloca %struct.Value_Arglist*, align 8
  %25 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %26 = alloca %struct.Value*, align 8
  %27 = alloca %struct.Value*, align 8
  %28 = alloca %struct.Value_Arglist*, align 8
  %29 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %30 = alloca %struct.Value*, align 8
  %31 = alloca %struct.Value*, align 8
  %32 = alloca %struct.Value*, align 8
  %33 = alloca %struct.AConAlt*, align 8
  %34 = alloca %struct.Value*, align 8
  %35 = alloca %struct.Value*, align 8
  %36 = alloca %struct.Value*, align 8
  %37 = alloca %struct.Value*, align 8
  %38 = alloca %struct.AConAlt*, align 8
  %39 = alloca %struct.Value*, align 8
  %40 = alloca %struct.Value*, align 8
  %41 = alloca %struct.Value*, align 8
  %42 = alloca %struct.Value*, align 8
  %43 = alloca %struct.Value*, align 8
  %44 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %45 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %45, %struct.Value_Arglist** %5, align 8
  %46 = load %struct.Value*, %struct.Value** %3, align 8
  %47 = call %struct.Value* @newReference(%struct.Value* noundef %46)
  %48 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %49 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %48, i32 0, i32 3
  %50 = load %struct.Value**, %struct.Value*** %49, align 8
  %51 = getelementptr inbounds %struct.Value*, %struct.Value** %50, i64 0
  store %struct.Value* %47, %struct.Value** %51, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Builtin_snd_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %52 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %53 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %54 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %52, %struct.Value_Arglist* noundef %53)
  %55 = bitcast %struct.Value_Closure* %54 to %struct.Value*
  store %struct.Value* %55, %struct.Value** %7, align 8
  %56 = load %struct.Value*, %struct.Value** %7, align 8
  %57 = call %struct.Value* @trampoline(%struct.Value* noundef %56)
  store %struct.Value* %57, %struct.Value** %8, align 8
  %58 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %58, %struct.Value_Arglist** %9, align 8
  %59 = load %struct.Value*, %struct.Value** %8, align 8
  %60 = call %struct.Value* @newReference(%struct.Value* noundef %59)
  %61 = load %struct.Value_Arglist*, %struct.Value_Arglist** %9, align 8
  %62 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %61, i32 0, i32 3
  %63 = load %struct.Value**, %struct.Value*** %62, align 8
  %64 = getelementptr inbounds %struct.Value*, %struct.Value** %63, i64 0
  store %struct.Value* %60, %struct.Value** %64, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Builtin_snd_arglist, %struct.Value* (%struct.Value_Arglist*)** %10, align 8
  %65 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %10, align 8
  %66 = load %struct.Value_Arglist*, %struct.Value_Arglist** %9, align 8
  %67 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %65, %struct.Value_Arglist* noundef %66)
  %68 = bitcast %struct.Value_Closure* %67 to %struct.Value*
  store %struct.Value* %68, %struct.Value** %11, align 8
  %69 = load %struct.Value*, %struct.Value** %11, align 8
  %70 = call %struct.Value* @trampoline(%struct.Value* noundef %69)
  store %struct.Value* %70, %struct.Value** %12, align 8
  store %struct.Value* null, %struct.Value** %13, align 8
  %71 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %71, %struct.AConAlt** %14, align 8
  %72 = load %struct.AConAlt*, %struct.AConAlt** %14, align 8
  %73 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %72, i64 0
  %74 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %73, i32 0, i32 1
  store i32 0, i32* %74, align 8
  %75 = load %struct.AConAlt*, %struct.AConAlt** %14, align 8
  %76 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %75, i64 0
  %77 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %76, i32 0, i32 0
  store i8* null, i8** %77, align 8
  %78 = load %struct.Value*, %struct.Value** %12, align 8
  %79 = load %struct.AConAlt*, %struct.AConAlt** %14, align 8
  %80 = call i32 @compareConstructors(%struct.Value* noundef %78, %struct.AConAlt* noundef %79, i32 noundef 1)
  switch i32 %80, label %241 [
    i32 0, label %81
  ]

81:                                               ; preds = %2
  %82 = load %struct.Value*, %struct.Value** %12, align 8
  %83 = bitcast %struct.Value* %82 to %struct.Value_Constructor*
  %84 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %83, i32 0, i32 4
  %85 = load %struct.Value**, %struct.Value*** %84, align 8
  %86 = getelementptr inbounds %struct.Value*, %struct.Value** %85, i64 0
  %87 = load %struct.Value*, %struct.Value** %86, align 8
  store %struct.Value* %87, %struct.Value** %15, align 8
  %88 = load %struct.Value*, %struct.Value** %12, align 8
  %89 = bitcast %struct.Value* %88 to %struct.Value_Constructor*
  %90 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %89, i32 0, i32 4
  %91 = load %struct.Value**, %struct.Value*** %90, align 8
  %92 = getelementptr inbounds %struct.Value*, %struct.Value** %91, i64 1
  %93 = load %struct.Value*, %struct.Value** %92, align 8
  store %struct.Value* %93, %struct.Value** %16, align 8
  %94 = load %struct.Value*, %struct.Value** %12, align 8
  %95 = bitcast %struct.Value* %94 to %struct.Value_Constructor*
  %96 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %95, i32 0, i32 4
  %97 = load %struct.Value**, %struct.Value*** %96, align 8
  %98 = getelementptr inbounds %struct.Value*, %struct.Value** %97, i64 2
  %99 = load %struct.Value*, %struct.Value** %98, align 8
  store %struct.Value* %99, %struct.Value** %17, align 8
  store %struct.Value* null, %struct.Value** %18, align 8
  %100 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %100, %struct.AConAlt** %19, align 8
  %101 = load %struct.AConAlt*, %struct.AConAlt** %19, align 8
  %102 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %101, i64 0
  %103 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %102, i32 0, i32 1
  store i32 0, i32* %103, align 8
  %104 = load %struct.AConAlt*, %struct.AConAlt** %19, align 8
  %105 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %104, i64 0
  %106 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %105, i32 0, i32 0
  store i8* null, i8** %106, align 8
  %107 = load %struct.Value*, %struct.Value** %15, align 8
  %108 = load %struct.AConAlt*, %struct.AConAlt** %19, align 8
  %109 = call i32 @compareConstructors(%struct.Value* noundef %107, %struct.AConAlt* noundef %108, i32 noundef 1)
  switch i32 %109, label %237 [
    i32 0, label %110
  ]

110:                                              ; preds = %81
  %111 = load %struct.Value*, %struct.Value** %15, align 8
  %112 = bitcast %struct.Value* %111 to %struct.Value_Constructor*
  %113 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %112, i32 0, i32 4
  %114 = load %struct.Value**, %struct.Value*** %113, align 8
  %115 = getelementptr inbounds %struct.Value*, %struct.Value** %114, i64 0
  %116 = load %struct.Value*, %struct.Value** %115, align 8
  store %struct.Value* %116, %struct.Value** %20, align 8
  %117 = load %struct.Value*, %struct.Value** %15, align 8
  %118 = bitcast %struct.Value* %117 to %struct.Value_Constructor*
  %119 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %118, i32 0, i32 4
  %120 = load %struct.Value**, %struct.Value*** %119, align 8
  %121 = getelementptr inbounds %struct.Value*, %struct.Value** %120, i64 1
  %122 = load %struct.Value*, %struct.Value** %121, align 8
  store %struct.Value* %122, %struct.Value** %21, align 8
  %123 = load %struct.Value*, %struct.Value** %15, align 8
  %124 = bitcast %struct.Value* %123 to %struct.Value_Constructor*
  %125 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %124, i32 0, i32 4
  %126 = load %struct.Value**, %struct.Value*** %125, align 8
  %127 = getelementptr inbounds %struct.Value*, %struct.Value** %126, i64 2
  %128 = load %struct.Value*, %struct.Value** %127, align 8
  store %struct.Value* %128, %struct.Value** %22, align 8
  %129 = load %struct.Value*, %struct.Value** %20, align 8
  %130 = load %struct.Value*, %struct.Value** %4, align 8
  %131 = call %struct.Value* @apply_closure(%struct.Value* noundef %129, %struct.Value* noundef %130)
  store %struct.Value* %131, %struct.Value** %23, align 8
  %132 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %132, %struct.Value_Arglist** %24, align 8
  %133 = load %struct.Value*, %struct.Value** %3, align 8
  %134 = call %struct.Value* @newReference(%struct.Value* noundef %133)
  %135 = load %struct.Value_Arglist*, %struct.Value_Arglist** %24, align 8
  %136 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %135, i32 0, i32 3
  %137 = load %struct.Value**, %struct.Value*** %136, align 8
  %138 = getelementptr inbounds %struct.Value*, %struct.Value** %137, i64 0
  store %struct.Value* %134, %struct.Value** %138, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Builtin_snd_arglist, %struct.Value* (%struct.Value_Arglist*)** %25, align 8
  %139 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %25, align 8
  %140 = load %struct.Value_Arglist*, %struct.Value_Arglist** %24, align 8
  %141 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %139, %struct.Value_Arglist* noundef %140)
  %142 = bitcast %struct.Value_Closure* %141 to %struct.Value*
  store %struct.Value* %142, %struct.Value** %26, align 8
  %143 = load %struct.Value*, %struct.Value** %26, align 8
  %144 = call %struct.Value* @trampoline(%struct.Value* noundef %143)
  store %struct.Value* %144, %struct.Value** %27, align 8
  %145 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %145, %struct.Value_Arglist** %28, align 8
  %146 = load %struct.Value*, %struct.Value** %27, align 8
  %147 = call %struct.Value* @newReference(%struct.Value* noundef %146)
  %148 = load %struct.Value_Arglist*, %struct.Value_Arglist** %28, align 8
  %149 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %148, i32 0, i32 3
  %150 = load %struct.Value**, %struct.Value*** %149, align 8
  %151 = getelementptr inbounds %struct.Value*, %struct.Value** %150, i64 0
  store %struct.Value* %147, %struct.Value** %151, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Builtin_snd_arglist, %struct.Value* (%struct.Value_Arglist*)** %29, align 8
  %152 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %29, align 8
  %153 = load %struct.Value_Arglist*, %struct.Value_Arglist** %28, align 8
  %154 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %152, %struct.Value_Arglist* noundef %153)
  %155 = bitcast %struct.Value_Closure* %154 to %struct.Value*
  store %struct.Value* %155, %struct.Value** %30, align 8
  %156 = load %struct.Value*, %struct.Value** %30, align 8
  %157 = call %struct.Value* @trampoline(%struct.Value* noundef %156)
  store %struct.Value* %157, %struct.Value** %31, align 8
  store %struct.Value* null, %struct.Value** %32, align 8
  %158 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %158, %struct.AConAlt** %33, align 8
  %159 = load %struct.AConAlt*, %struct.AConAlt** %33, align 8
  %160 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %159, i64 0
  %161 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %160, i32 0, i32 1
  store i32 0, i32* %161, align 8
  %162 = load %struct.AConAlt*, %struct.AConAlt** %33, align 8
  %163 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %162, i64 0
  %164 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %163, i32 0, i32 0
  store i8* null, i8** %164, align 8
  %165 = load %struct.Value*, %struct.Value** %31, align 8
  %166 = load %struct.AConAlt*, %struct.AConAlt** %33, align 8
  %167 = call i32 @compareConstructors(%struct.Value* noundef %165, %struct.AConAlt* noundef %166, i32 noundef 1)
  switch i32 %167, label %226 [
    i32 0, label %168
  ]

168:                                              ; preds = %110
  %169 = load %struct.Value*, %struct.Value** %31, align 8
  %170 = bitcast %struct.Value* %169 to %struct.Value_Constructor*
  %171 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %170, i32 0, i32 4
  %172 = load %struct.Value**, %struct.Value*** %171, align 8
  %173 = getelementptr inbounds %struct.Value*, %struct.Value** %172, i64 0
  %174 = load %struct.Value*, %struct.Value** %173, align 8
  store %struct.Value* %174, %struct.Value** %34, align 8
  %175 = load %struct.Value*, %struct.Value** %31, align 8
  %176 = bitcast %struct.Value* %175 to %struct.Value_Constructor*
  %177 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %176, i32 0, i32 4
  %178 = load %struct.Value**, %struct.Value*** %177, align 8
  %179 = getelementptr inbounds %struct.Value*, %struct.Value** %178, i64 1
  %180 = load %struct.Value*, %struct.Value** %179, align 8
  store %struct.Value* %180, %struct.Value** %35, align 8
  %181 = load %struct.Value*, %struct.Value** %31, align 8
  %182 = bitcast %struct.Value* %181 to %struct.Value_Constructor*
  %183 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %182, i32 0, i32 4
  %184 = load %struct.Value**, %struct.Value*** %183, align 8
  %185 = getelementptr inbounds %struct.Value*, %struct.Value** %184, i64 2
  %186 = load %struct.Value*, %struct.Value** %185, align 8
  store %struct.Value* %186, %struct.Value** %36, align 8
  store %struct.Value* null, %struct.Value** %37, align 8
  %187 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %187, %struct.AConAlt** %38, align 8
  %188 = load %struct.AConAlt*, %struct.AConAlt** %38, align 8
  %189 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %188, i64 0
  %190 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %189, i32 0, i32 1
  store i32 0, i32* %190, align 8
  %191 = load %struct.AConAlt*, %struct.AConAlt** %38, align 8
  %192 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %191, i64 0
  %193 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %192, i32 0, i32 0
  store i8* null, i8** %193, align 8
  %194 = load %struct.Value*, %struct.Value** %34, align 8
  %195 = load %struct.AConAlt*, %struct.AConAlt** %38, align 8
  %196 = call i32 @compareConstructors(%struct.Value* noundef %194, %struct.AConAlt* noundef %195, i32 noundef 1)
  switch i32 %196, label %222 [
    i32 0, label %197
  ]

197:                                              ; preds = %168
  %198 = load %struct.Value*, %struct.Value** %34, align 8
  %199 = bitcast %struct.Value* %198 to %struct.Value_Constructor*
  %200 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %199, i32 0, i32 4
  %201 = load %struct.Value**, %struct.Value*** %200, align 8
  %202 = getelementptr inbounds %struct.Value*, %struct.Value** %201, i64 0
  %203 = load %struct.Value*, %struct.Value** %202, align 8
  store %struct.Value* %203, %struct.Value** %39, align 8
  %204 = load %struct.Value*, %struct.Value** %34, align 8
  %205 = bitcast %struct.Value* %204 to %struct.Value_Constructor*
  %206 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %205, i32 0, i32 4
  %207 = load %struct.Value**, %struct.Value*** %206, align 8
  %208 = getelementptr inbounds %struct.Value*, %struct.Value** %207, i64 1
  %209 = load %struct.Value*, %struct.Value** %208, align 8
  store %struct.Value* %209, %struct.Value** %40, align 8
  %210 = load %struct.Value*, %struct.Value** %34, align 8
  %211 = bitcast %struct.Value* %210 to %struct.Value_Constructor*
  %212 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %211, i32 0, i32 4
  %213 = load %struct.Value**, %struct.Value*** %212, align 8
  %214 = getelementptr inbounds %struct.Value*, %struct.Value** %213, i64 2
  %215 = load %struct.Value*, %struct.Value** %214, align 8
  store %struct.Value* %215, %struct.Value** %41, align 8
  %216 = call %struct.Value_Integer* @makeIntegerLiteral(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0))
  %217 = bitcast %struct.Value_Integer* %216 to %struct.Value*
  store %struct.Value* %217, %struct.Value** %42, align 8
  %218 = load %struct.Value*, %struct.Value** %41, align 8
  %219 = load %struct.Value*, %struct.Value** %42, align 8
  %220 = call %struct.Value* @apply_closure(%struct.Value* noundef %218, %struct.Value* noundef %219)
  store %struct.Value* %220, %struct.Value** %37, align 8
  %221 = load %struct.Value*, %struct.Value** %42, align 8
  call void @removeReference(%struct.Value* noundef %221)
  br label %222

222:                                              ; preds = %168, %197
  %223 = load %struct.AConAlt*, %struct.AConAlt** %38, align 8
  %224 = bitcast %struct.AConAlt* %223 to i8*
  call void @free(i8* noundef %224)
  %225 = load %struct.Value*, %struct.Value** %37, align 8
  store %struct.Value* %225, %struct.Value** %32, align 8
  br label %226

226:                                              ; preds = %110, %222
  %227 = load %struct.AConAlt*, %struct.AConAlt** %33, align 8
  %228 = bitcast %struct.AConAlt* %227 to i8*
  call void @free(i8* noundef %228)
  %229 = load %struct.Value*, %struct.Value** %32, align 8
  store %struct.Value* %229, %struct.Value** %43, align 8
  %230 = load %struct.Value*, %struct.Value** %23, align 8
  %231 = load %struct.Value*, %struct.Value** %43, align 8
  %232 = call %struct.Value* @tailcall_apply_closure(%struct.Value* noundef %230, %struct.Value* noundef %231)
  store %struct.Value* %232, %struct.Value** %18, align 8
  %233 = load %struct.Value*, %struct.Value** %43, align 8
  call void @removeReference(%struct.Value* noundef %233)
  %234 = load %struct.Value*, %struct.Value** %31, align 8
  call void @removeReference(%struct.Value* noundef %234)
  %235 = load %struct.Value*, %struct.Value** %27, align 8
  call void @removeReference(%struct.Value* noundef %235)
  %236 = load %struct.Value*, %struct.Value** %23, align 8
  call void @removeReference(%struct.Value* noundef %236)
  br label %237

237:                                              ; preds = %81, %226
  %238 = load %struct.AConAlt*, %struct.AConAlt** %19, align 8
  %239 = bitcast %struct.AConAlt* %238 to i8*
  call void @free(i8* noundef %239)
  %240 = load %struct.Value*, %struct.Value** %18, align 8
  store %struct.Value* %240, %struct.Value** %13, align 8
  br label %241

241:                                              ; preds = %2, %237
  %242 = load %struct.AConAlt*, %struct.AConAlt** %14, align 8
  %243 = bitcast %struct.AConAlt* %242 to i8*
  call void @free(i8* noundef %243)
  %244 = load %struct.Value*, %struct.Value** %13, align 8
  store %struct.Value* %244, %struct.Value** %44, align 8
  %245 = load %struct.Value*, %struct.Value** %12, align 8
  call void @removeReference(%struct.Value* noundef %245)
  %246 = load %struct.Value*, %struct.Value** %8, align 8
  call void @removeReference(%struct.Value* noundef %246)
  %247 = load %struct.Value*, %struct.Value** %44, align 8
  ret %struct.Value* %247
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_rangeFromTo_Range__dollara_0(%struct.Value* noundef %0, %struct.Value* noundef %1, %struct.Value* noundef %2) #0 {
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value_Arglist*, align 8
  %8 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value*, align 8
  %11 = alloca %struct.Value_Arglist*, align 8
  %12 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %13 = alloca %struct.Value*, align 8
  %14 = alloca %struct.Value*, align 8
  %15 = alloca %struct.Value*, align 8
  %16 = alloca %struct.AConAlt*, align 8
  %17 = alloca %struct.Value*, align 8
  %18 = alloca %struct.Value*, align 8
  %19 = alloca %struct.Value*, align 8
  %20 = alloca %struct.Value*, align 8
  %21 = alloca %struct.Value*, align 8
  %22 = alloca %struct.Value*, align 8
  %23 = alloca %struct.Value*, align 8
  %24 = alloca %struct.Value*, align 8
  %25 = alloca %struct.Value*, align 8
  %26 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %4, align 8
  store %struct.Value* %1, %struct.Value** %5, align 8
  store %struct.Value* %2, %struct.Value** %6, align 8
  %27 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %27, %struct.Value_Arglist** %7, align 8
  %28 = load %struct.Value*, %struct.Value** %4, align 8
  %29 = call %struct.Value* @newReference(%struct.Value* noundef %28)
  %30 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %31 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %30, i32 0, i32 3
  %32 = load %struct.Value**, %struct.Value*** %31, align 8
  %33 = getelementptr inbounds %struct.Value*, %struct.Value** %32, i64 0
  store %struct.Value* %29, %struct.Value** %33, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Builtin_snd_arglist, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %34 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %35 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %36 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %34, %struct.Value_Arglist* noundef %35)
  %37 = bitcast %struct.Value_Closure* %36 to %struct.Value*
  store %struct.Value* %37, %struct.Value** %9, align 8
  %38 = load %struct.Value*, %struct.Value** %9, align 8
  %39 = call %struct.Value* @trampoline(%struct.Value* noundef %38)
  store %struct.Value* %39, %struct.Value** %10, align 8
  %40 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %40, %struct.Value_Arglist** %11, align 8
  %41 = load %struct.Value*, %struct.Value** %10, align 8
  %42 = call %struct.Value* @newReference(%struct.Value* noundef %41)
  %43 = load %struct.Value_Arglist*, %struct.Value_Arglist** %11, align 8
  %44 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %43, i32 0, i32 3
  %45 = load %struct.Value**, %struct.Value*** %44, align 8
  %46 = getelementptr inbounds %struct.Value*, %struct.Value** %45, i64 0
  store %struct.Value* %42, %struct.Value** %46, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Builtin_fst_arglist, %struct.Value* (%struct.Value_Arglist*)** %12, align 8
  %47 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %12, align 8
  %48 = load %struct.Value_Arglist*, %struct.Value_Arglist** %11, align 8
  %49 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %47, %struct.Value_Arglist* noundef %48)
  %50 = bitcast %struct.Value_Closure* %49 to %struct.Value*
  store %struct.Value* %50, %struct.Value** %13, align 8
  %51 = load %struct.Value*, %struct.Value** %13, align 8
  %52 = call %struct.Value* @trampoline(%struct.Value* noundef %51)
  store %struct.Value* %52, %struct.Value** %14, align 8
  store %struct.Value* null, %struct.Value** %15, align 8
  %53 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %53, %struct.AConAlt** %16, align 8
  %54 = load %struct.AConAlt*, %struct.AConAlt** %16, align 8
  %55 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %54, i64 0
  %56 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %55, i32 0, i32 1
  store i32 0, i32* %56, align 8
  %57 = load %struct.AConAlt*, %struct.AConAlt** %16, align 8
  %58 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %57, i64 0
  %59 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %58, i32 0, i32 0
  store i8* null, i8** %59, align 8
  %60 = load %struct.Value*, %struct.Value** %14, align 8
  %61 = load %struct.AConAlt*, %struct.AConAlt** %16, align 8
  %62 = call i32 @compareConstructors(%struct.Value* noundef %60, %struct.AConAlt* noundef %61, i32 noundef 1)
  switch i32 %62, label %119 [
    i32 0, label %63
  ]

63:                                               ; preds = %3
  %64 = load %struct.Value*, %struct.Value** %14, align 8
  %65 = bitcast %struct.Value* %64 to %struct.Value_Constructor*
  %66 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %65, i32 0, i32 4
  %67 = load %struct.Value**, %struct.Value*** %66, align 8
  %68 = getelementptr inbounds %struct.Value*, %struct.Value** %67, i64 0
  %69 = load %struct.Value*, %struct.Value** %68, align 8
  store %struct.Value* %69, %struct.Value** %17, align 8
  %70 = load %struct.Value*, %struct.Value** %14, align 8
  %71 = bitcast %struct.Value* %70 to %struct.Value_Constructor*
  %72 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %71, i32 0, i32 4
  %73 = load %struct.Value**, %struct.Value*** %72, align 8
  %74 = getelementptr inbounds %struct.Value*, %struct.Value** %73, i64 1
  %75 = load %struct.Value*, %struct.Value** %74, align 8
  store %struct.Value* %75, %struct.Value** %18, align 8
  %76 = load %struct.Value*, %struct.Value** %14, align 8
  %77 = bitcast %struct.Value* %76 to %struct.Value_Constructor*
  %78 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %77, i32 0, i32 4
  %79 = load %struct.Value**, %struct.Value*** %78, align 8
  %80 = getelementptr inbounds %struct.Value*, %struct.Value** %79, i64 2
  %81 = load %struct.Value*, %struct.Value** %80, align 8
  store %struct.Value* %81, %struct.Value** %19, align 8
  %82 = load %struct.Value*, %struct.Value** %14, align 8
  %83 = bitcast %struct.Value* %82 to %struct.Value_Constructor*
  %84 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %83, i32 0, i32 4
  %85 = load %struct.Value**, %struct.Value*** %84, align 8
  %86 = getelementptr inbounds %struct.Value*, %struct.Value** %85, i64 3
  %87 = load %struct.Value*, %struct.Value** %86, align 8
  store %struct.Value* %87, %struct.Value** %20, align 8
  %88 = load %struct.Value*, %struct.Value** %14, align 8
  %89 = bitcast %struct.Value* %88 to %struct.Value_Constructor*
  %90 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %89, i32 0, i32 4
  %91 = load %struct.Value**, %struct.Value*** %90, align 8
  %92 = getelementptr inbounds %struct.Value*, %struct.Value** %91, i64 4
  %93 = load %struct.Value*, %struct.Value** %92, align 8
  store %struct.Value* %93, %struct.Value** %21, align 8
  %94 = load %struct.Value*, %struct.Value** %14, align 8
  %95 = bitcast %struct.Value* %94 to %struct.Value_Constructor*
  %96 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %95, i32 0, i32 4
  %97 = load %struct.Value**, %struct.Value*** %96, align 8
  %98 = getelementptr inbounds %struct.Value*, %struct.Value** %97, i64 5
  %99 = load %struct.Value*, %struct.Value** %98, align 8
  store %struct.Value* %99, %struct.Value** %22, align 8
  %100 = load %struct.Value*, %struct.Value** %14, align 8
  %101 = bitcast %struct.Value* %100 to %struct.Value_Constructor*
  %102 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %101, i32 0, i32 4
  %103 = load %struct.Value**, %struct.Value*** %102, align 8
  %104 = getelementptr inbounds %struct.Value*, %struct.Value** %103, i64 6
  %105 = load %struct.Value*, %struct.Value** %104, align 8
  store %struct.Value* %105, %struct.Value** %23, align 8
  %106 = load %struct.Value*, %struct.Value** %14, align 8
  %107 = bitcast %struct.Value* %106 to %struct.Value_Constructor*
  %108 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %107, i32 0, i32 4
  %109 = load %struct.Value**, %struct.Value*** %108, align 8
  %110 = getelementptr inbounds %struct.Value*, %struct.Value** %109, i64 7
  %111 = load %struct.Value*, %struct.Value** %110, align 8
  store %struct.Value* %111, %struct.Value** %24, align 8
  %112 = load %struct.Value*, %struct.Value** %22, align 8
  %113 = load %struct.Value*, %struct.Value** %6, align 8
  %114 = call %struct.Value* @apply_closure(%struct.Value* noundef %112, %struct.Value* noundef %113)
  store %struct.Value* %114, %struct.Value** %25, align 8
  %115 = load %struct.Value*, %struct.Value** %25, align 8
  %116 = load %struct.Value*, %struct.Value** %5, align 8
  %117 = call %struct.Value* @tailcall_apply_closure(%struct.Value* noundef %115, %struct.Value* noundef %116)
  store %struct.Value* %117, %struct.Value** %15, align 8
  %118 = load %struct.Value*, %struct.Value** %25, align 8
  call void @removeReference(%struct.Value* noundef %118)
  br label %119

119:                                              ; preds = %3, %63
  %120 = load %struct.AConAlt*, %struct.AConAlt** %16, align 8
  %121 = bitcast %struct.AConAlt* %120 to i8*
  call void @free(i8* noundef %121)
  %122 = load %struct.Value*, %struct.Value** %15, align 8
  store %struct.Value* %122, %struct.Value** %26, align 8
  %123 = load %struct.Value*, %struct.Value** %14, align 8
  call void @removeReference(%struct.Value* noundef %123)
  %124 = load %struct.Value*, %struct.Value** %10, align 8
  call void @removeReference(%struct.Value* noundef %124)
  %125 = load %struct.Value*, %struct.Value** %26, align 8
  ret %struct.Value* %125
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_pure_Applicative_List(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value_Constructor*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Constructor*, align 8
  %6 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %7 = call %struct.Value_Constructor* @newConstructor(i32 noundef 0, i32 noundef 0, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0))
  store %struct.Value_Constructor* %7, %struct.Value_Constructor** %3, align 8
  %8 = load %struct.Value_Constructor*, %struct.Value_Constructor** %3, align 8
  %9 = bitcast %struct.Value_Constructor* %8 to %struct.Value*
  store %struct.Value* %9, %struct.Value** %4, align 8
  %10 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %10, %struct.Value_Constructor** %5, align 8
  %11 = load %struct.Value*, %struct.Value** %2, align 8
  %12 = call %struct.Value* @newReference(%struct.Value* noundef %11)
  %13 = load %struct.Value_Constructor*, %struct.Value_Constructor** %5, align 8
  %14 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %13, i32 0, i32 4
  %15 = load %struct.Value**, %struct.Value*** %14, align 8
  %16 = getelementptr inbounds %struct.Value*, %struct.Value** %15, i64 0
  store %struct.Value* %12, %struct.Value** %16, align 8
  %17 = load %struct.Value*, %struct.Value** %4, align 8
  %18 = call %struct.Value* @newReference(%struct.Value* noundef %17)
  %19 = load %struct.Value_Constructor*, %struct.Value_Constructor** %5, align 8
  %20 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %19, i32 0, i32 4
  %21 = load %struct.Value**, %struct.Value*** %20, align 8
  %22 = getelementptr inbounds %struct.Value*, %struct.Value** %21, i64 1
  store %struct.Value* %18, %struct.Value** %22, align 8
  %23 = load %struct.Value_Constructor*, %struct.Value_Constructor** %5, align 8
  %24 = bitcast %struct.Value_Constructor* %23 to %struct.Value*
  store %struct.Value* %24, %struct.Value** %6, align 8
  %25 = load %struct.Value*, %struct.Value** %4, align 8
  call void @removeReference(%struct.Value* noundef %25)
  %26 = load %struct.Value*, %struct.Value** %6, align 8
  ret %struct.Value* %26
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_takeUntil(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.AConAlt*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value*, align 8
  %11 = alloca %struct.Value_Constructor*, align 8
  %12 = alloca %struct.Value*, align 8
  %13 = alloca %struct.Value_Constructor*, align 8
  %14 = alloca %struct.Value*, align 8
  %15 = alloca %struct.Value_Arglist*, align 8
  %16 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %17 = alloca %struct.Value*, align 8
  %18 = alloca %struct.Value*, align 8
  %19 = alloca %struct.Value_Constructor*, align 8
  %20 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  store %struct.Value* null, %struct.Value** %5, align 8
  %21 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %21, %struct.AConAlt** %6, align 8
  %22 = load %struct.AConAlt*, %struct.AConAlt** %6, align 8
  %23 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %22, i64 0
  %24 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %23, i32 0, i32 1
  store i32 0, i32* %24, align 8
  %25 = load %struct.AConAlt*, %struct.AConAlt** %6, align 8
  %26 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %25, i64 0
  %27 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %26, i32 0, i32 0
  store i8* null, i8** %27, align 8
  %28 = load %struct.Value*, %struct.Value** %4, align 8
  %29 = load %struct.AConAlt*, %struct.AConAlt** %6, align 8
  %30 = call i32 @compareConstructors(%struct.Value* noundef %28, %struct.AConAlt* noundef %29, i32 noundef 1)
  switch i32 %30, label %111 [
    i32 0, label %31
  ]

31:                                               ; preds = %2
  %32 = load %struct.Value*, %struct.Value** %4, align 8
  %33 = bitcast %struct.Value* %32 to %struct.Value_Constructor*
  %34 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %33, i32 0, i32 4
  %35 = load %struct.Value**, %struct.Value*** %34, align 8
  %36 = getelementptr inbounds %struct.Value*, %struct.Value** %35, i64 0
  %37 = load %struct.Value*, %struct.Value** %36, align 8
  store %struct.Value* %37, %struct.Value** %7, align 8
  %38 = load %struct.Value*, %struct.Value** %4, align 8
  %39 = bitcast %struct.Value* %38 to %struct.Value_Constructor*
  %40 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %39, i32 0, i32 4
  %41 = load %struct.Value**, %struct.Value*** %40, align 8
  %42 = getelementptr inbounds %struct.Value*, %struct.Value** %41, i64 1
  %43 = load %struct.Value*, %struct.Value** %42, align 8
  store %struct.Value* %43, %struct.Value** %8, align 8
  %44 = load %struct.Value*, %struct.Value** %3, align 8
  %45 = load %struct.Value*, %struct.Value** %7, align 8
  %46 = call %struct.Value* @apply_closure(%struct.Value* noundef %44, %struct.Value* noundef %45)
  store %struct.Value* %46, %struct.Value** %9, align 8
  store %struct.Value* null, %struct.Value** %10, align 8
  %47 = load %struct.Value*, %struct.Value** %9, align 8
  %48 = call i32 @extractInt(%struct.Value* noundef %47)
  switch i32 %48, label %108 [
    i32 1, label %49
    i32 0, label %69
  ]

49:                                               ; preds = %31
  %50 = call %struct.Value_Constructor* @newConstructor(i32 noundef 0, i32 noundef 0, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0))
  store %struct.Value_Constructor* %50, %struct.Value_Constructor** %11, align 8
  %51 = load %struct.Value_Constructor*, %struct.Value_Constructor** %11, align 8
  %52 = bitcast %struct.Value_Constructor* %51 to %struct.Value*
  store %struct.Value* %52, %struct.Value** %12, align 8
  %53 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %53, %struct.Value_Constructor** %13, align 8
  %54 = load %struct.Value*, %struct.Value** %7, align 8
  %55 = call %struct.Value* @newReference(%struct.Value* noundef %54)
  %56 = load %struct.Value_Constructor*, %struct.Value_Constructor** %13, align 8
  %57 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %56, i32 0, i32 4
  %58 = load %struct.Value**, %struct.Value*** %57, align 8
  %59 = getelementptr inbounds %struct.Value*, %struct.Value** %58, i64 0
  store %struct.Value* %55, %struct.Value** %59, align 8
  %60 = load %struct.Value*, %struct.Value** %12, align 8
  %61 = call %struct.Value* @newReference(%struct.Value* noundef %60)
  %62 = load %struct.Value_Constructor*, %struct.Value_Constructor** %13, align 8
  %63 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %62, i32 0, i32 4
  %64 = load %struct.Value**, %struct.Value*** %63, align 8
  %65 = getelementptr inbounds %struct.Value*, %struct.Value** %64, i64 1
  store %struct.Value* %61, %struct.Value** %65, align 8
  %66 = load %struct.Value_Constructor*, %struct.Value_Constructor** %13, align 8
  %67 = bitcast %struct.Value_Constructor* %66 to %struct.Value*
  store %struct.Value* %67, %struct.Value** %10, align 8
  %68 = load %struct.Value*, %struct.Value** %12, align 8
  call void @removeReference(%struct.Value* noundef %68)
  br label %108

69:                                               ; preds = %31
  %70 = load %struct.Value*, %struct.Value** %8, align 8
  %71 = call %struct.Value* @apply_closure(%struct.Value* noundef %70, %struct.Value* noundef null)
  store %struct.Value* %71, %struct.Value** %14, align 8
  %72 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %72, %struct.Value_Arglist** %15, align 8
  %73 = load %struct.Value*, %struct.Value** %3, align 8
  %74 = call %struct.Value* @newReference(%struct.Value* noundef %73)
  %75 = load %struct.Value_Arglist*, %struct.Value_Arglist** %15, align 8
  %76 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %75, i32 0, i32 3
  %77 = load %struct.Value**, %struct.Value*** %76, align 8
  %78 = getelementptr inbounds %struct.Value*, %struct.Value** %77, i64 0
  store %struct.Value* %74, %struct.Value** %78, align 8
  %79 = load %struct.Value*, %struct.Value** %14, align 8
  %80 = call %struct.Value* @newReference(%struct.Value* noundef %79)
  %81 = load %struct.Value_Arglist*, %struct.Value_Arglist** %15, align 8
  %82 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %81, i32 0, i32 3
  %83 = load %struct.Value**, %struct.Value*** %82, align 8
  %84 = getelementptr inbounds %struct.Value*, %struct.Value** %83, i64 1
  store %struct.Value* %80, %struct.Value** %84, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_takeUntil_arglist, %struct.Value* (%struct.Value_Arglist*)** %16, align 8
  %85 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %16, align 8
  %86 = load %struct.Value_Arglist*, %struct.Value_Arglist** %15, align 8
  %87 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %85, %struct.Value_Arglist* noundef %86)
  %88 = bitcast %struct.Value_Closure* %87 to %struct.Value*
  store %struct.Value* %88, %struct.Value** %17, align 8
  %89 = load %struct.Value*, %struct.Value** %17, align 8
  %90 = call %struct.Value* @trampoline(%struct.Value* noundef %89)
  store %struct.Value* %90, %struct.Value** %18, align 8
  %91 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %91, %struct.Value_Constructor** %19, align 8
  %92 = load %struct.Value*, %struct.Value** %7, align 8
  %93 = call %struct.Value* @newReference(%struct.Value* noundef %92)
  %94 = load %struct.Value_Constructor*, %struct.Value_Constructor** %19, align 8
  %95 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %94, i32 0, i32 4
  %96 = load %struct.Value**, %struct.Value*** %95, align 8
  %97 = getelementptr inbounds %struct.Value*, %struct.Value** %96, i64 0
  store %struct.Value* %93, %struct.Value** %97, align 8
  %98 = load %struct.Value*, %struct.Value** %18, align 8
  %99 = call %struct.Value* @newReference(%struct.Value* noundef %98)
  %100 = load %struct.Value_Constructor*, %struct.Value_Constructor** %19, align 8
  %101 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %100, i32 0, i32 4
  %102 = load %struct.Value**, %struct.Value*** %101, align 8
  %103 = getelementptr inbounds %struct.Value*, %struct.Value** %102, i64 1
  store %struct.Value* %99, %struct.Value** %103, align 8
  %104 = load %struct.Value_Constructor*, %struct.Value_Constructor** %19, align 8
  %105 = bitcast %struct.Value_Constructor* %104 to %struct.Value*
  store %struct.Value* %105, %struct.Value** %10, align 8
  %106 = load %struct.Value*, %struct.Value** %18, align 8
  call void @removeReference(%struct.Value* noundef %106)
  %107 = load %struct.Value*, %struct.Value** %14, align 8
  call void @removeReference(%struct.Value* noundef %107)
  br label %108

108:                                              ; preds = %31, %69, %49
  %109 = load %struct.Value*, %struct.Value** %10, align 8
  store %struct.Value* %109, %struct.Value** %5, align 8
  %110 = load %struct.Value*, %struct.Value** %9, align 8
  call void @removeReference(%struct.Value* noundef %110)
  br label %111

111:                                              ; preds = %2, %108
  %112 = load %struct.AConAlt*, %struct.AConAlt** %6, align 8
  %113 = bitcast %struct.AConAlt* %112 to i8*
  call void @free(i8* noundef %113)
  %114 = load %struct.Value*, %struct.Value** %5, align 8
  store %struct.Value* %114, %struct.Value** %20, align 8
  %115 = load %struct.Value*, %struct.Value** %20, align 8
  ret %struct.Value* %115
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_List_reverseOnto(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.AConAlt*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.Value_Constructor*, align 8
  %10 = alloca %struct.Value*, align 8
  %11 = alloca %struct.Value_Arglist*, align 8
  %12 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %13 = alloca %struct.Value*, align 8
  %14 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  store %struct.Value* null, %struct.Value** %5, align 8
  %15 = call %struct.AConAlt* @newConstructorField(i32 noundef 2)
  store %struct.AConAlt* %15, %struct.AConAlt** %6, align 8
  %16 = load %struct.AConAlt*, %struct.AConAlt** %6, align 8
  %17 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %16, i64 0
  %18 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %17, i32 0, i32 1
  store i32 0, i32* %18, align 8
  %19 = load %struct.AConAlt*, %struct.AConAlt** %6, align 8
  %20 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %19, i64 0
  %21 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %20, i32 0, i32 0
  store i8* null, i8** %21, align 8
  %22 = load %struct.AConAlt*, %struct.AConAlt** %6, align 8
  %23 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %22, i64 1
  %24 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %23, i32 0, i32 1
  store i32 1, i32* %24, align 8
  %25 = load %struct.AConAlt*, %struct.AConAlt** %6, align 8
  %26 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %25, i64 1
  %27 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %26, i32 0, i32 0
  store i8* null, i8** %27, align 8
  %28 = load %struct.Value*, %struct.Value** %4, align 8
  %29 = load %struct.AConAlt*, %struct.AConAlt** %6, align 8
  %30 = call i32 @compareConstructors(%struct.Value* noundef %28, %struct.AConAlt* noundef %29, i32 noundef 2)
  switch i32 %30, label %81 [
    i32 0, label %31
    i32 1, label %34
  ]

31:                                               ; preds = %2
  %32 = load %struct.Value*, %struct.Value** %3, align 8
  %33 = call %struct.Value* @newReference(%struct.Value* noundef %32)
  store %struct.Value* %33, %struct.Value** %5, align 8
  br label %81

34:                                               ; preds = %2
  %35 = load %struct.Value*, %struct.Value** %4, align 8
  %36 = bitcast %struct.Value* %35 to %struct.Value_Constructor*
  %37 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %36, i32 0, i32 4
  %38 = load %struct.Value**, %struct.Value*** %37, align 8
  %39 = getelementptr inbounds %struct.Value*, %struct.Value** %38, i64 0
  %40 = load %struct.Value*, %struct.Value** %39, align 8
  store %struct.Value* %40, %struct.Value** %7, align 8
  %41 = load %struct.Value*, %struct.Value** %4, align 8
  %42 = bitcast %struct.Value* %41 to %struct.Value_Constructor*
  %43 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %42, i32 0, i32 4
  %44 = load %struct.Value**, %struct.Value*** %43, align 8
  %45 = getelementptr inbounds %struct.Value*, %struct.Value** %44, i64 1
  %46 = load %struct.Value*, %struct.Value** %45, align 8
  store %struct.Value* %46, %struct.Value** %8, align 8
  %47 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %47, %struct.Value_Constructor** %9, align 8
  %48 = load %struct.Value*, %struct.Value** %7, align 8
  %49 = call %struct.Value* @newReference(%struct.Value* noundef %48)
  %50 = load %struct.Value_Constructor*, %struct.Value_Constructor** %9, align 8
  %51 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %50, i32 0, i32 4
  %52 = load %struct.Value**, %struct.Value*** %51, align 8
  %53 = getelementptr inbounds %struct.Value*, %struct.Value** %52, i64 0
  store %struct.Value* %49, %struct.Value** %53, align 8
  %54 = load %struct.Value*, %struct.Value** %3, align 8
  %55 = call %struct.Value* @newReference(%struct.Value* noundef %54)
  %56 = load %struct.Value_Constructor*, %struct.Value_Constructor** %9, align 8
  %57 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %56, i32 0, i32 4
  %58 = load %struct.Value**, %struct.Value*** %57, align 8
  %59 = getelementptr inbounds %struct.Value*, %struct.Value** %58, i64 1
  store %struct.Value* %55, %struct.Value** %59, align 8
  %60 = load %struct.Value_Constructor*, %struct.Value_Constructor** %9, align 8
  %61 = bitcast %struct.Value_Constructor* %60 to %struct.Value*
  store %struct.Value* %61, %struct.Value** %10, align 8
  %62 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %62, %struct.Value_Arglist** %11, align 8
  %63 = load %struct.Value*, %struct.Value** %10, align 8
  %64 = call %struct.Value* @newReference(%struct.Value* noundef %63)
  %65 = load %struct.Value_Arglist*, %struct.Value_Arglist** %11, align 8
  %66 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %65, i32 0, i32 3
  %67 = load %struct.Value**, %struct.Value*** %66, align 8
  %68 = getelementptr inbounds %struct.Value*, %struct.Value** %67, i64 0
  store %struct.Value* %64, %struct.Value** %68, align 8
  %69 = load %struct.Value*, %struct.Value** %8, align 8
  %70 = call %struct.Value* @newReference(%struct.Value* noundef %69)
  %71 = load %struct.Value_Arglist*, %struct.Value_Arglist** %11, align 8
  %72 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %71, i32 0, i32 3
  %73 = load %struct.Value**, %struct.Value*** %72, align 8
  %74 = getelementptr inbounds %struct.Value*, %struct.Value** %73, i64 1
  store %struct.Value* %70, %struct.Value** %74, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_List_reverseOnto_arglist, %struct.Value* (%struct.Value_Arglist*)** %12, align 8
  %75 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %12, align 8
  %76 = load %struct.Value_Arglist*, %struct.Value_Arglist** %11, align 8
  %77 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %75, %struct.Value_Arglist* noundef %76)
  %78 = bitcast %struct.Value_Closure* %77 to %struct.Value*
  store %struct.Value* %78, %struct.Value** %13, align 8
  %79 = load %struct.Value*, %struct.Value** %13, align 8
  store %struct.Value* %79, %struct.Value** %5, align 8
  %80 = load %struct.Value*, %struct.Value** %10, align 8
  call void @removeReference(%struct.Value* noundef %80)
  br label %81

81:                                               ; preds = %2, %34, %31
  %82 = load %struct.AConAlt*, %struct.AConAlt** %6, align 8
  %83 = bitcast %struct.AConAlt* %82 to i8*
  call void @free(i8* noundef %83)
  %84 = load %struct.Value*, %struct.Value** %5, align 8
  store %struct.Value* %84, %struct.Value** %14, align 8
  %85 = load %struct.Value*, %struct.Value** %14, align 8
  ret %struct.Value* %85
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_List_reverseOnto_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_Types_List_reverseOnto(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_List_reverse(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value_Constructor*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %9 = call %struct.Value_Constructor* @newConstructor(i32 noundef 0, i32 noundef 0, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0))
  store %struct.Value_Constructor* %9, %struct.Value_Constructor** %3, align 8
  %10 = load %struct.Value_Constructor*, %struct.Value_Constructor** %3, align 8
  %11 = bitcast %struct.Value_Constructor* %10 to %struct.Value*
  store %struct.Value* %11, %struct.Value** %4, align 8
  %12 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %12, %struct.Value_Arglist** %5, align 8
  %13 = load %struct.Value*, %struct.Value** %4, align 8
  %14 = call %struct.Value* @newReference(%struct.Value* noundef %13)
  %15 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %16 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %15, i32 0, i32 3
  %17 = load %struct.Value**, %struct.Value*** %16, align 8
  %18 = getelementptr inbounds %struct.Value*, %struct.Value** %17, i64 0
  store %struct.Value* %14, %struct.Value** %18, align 8
  %19 = load %struct.Value*, %struct.Value** %2, align 8
  %20 = call %struct.Value* @newReference(%struct.Value* noundef %19)
  %21 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %22 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %21, i32 0, i32 3
  %23 = load %struct.Value**, %struct.Value*** %22, align 8
  %24 = getelementptr inbounds %struct.Value*, %struct.Value** %23, i64 1
  store %struct.Value* %20, %struct.Value** %24, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_List_reverseOnto_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %25 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %26 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %27 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %25, %struct.Value_Arglist* noundef %26)
  %28 = bitcast %struct.Value_Closure* %27 to %struct.Value*
  store %struct.Value* %28, %struct.Value** %7, align 8
  %29 = load %struct.Value*, %struct.Value** %7, align 8
  store %struct.Value* %29, %struct.Value** %8, align 8
  %30 = load %struct.Value*, %struct.Value** %4, align 8
  call void @removeReference(%struct.Value* noundef %30)
  %31 = load %struct.Value*, %struct.Value** %8, align 8
  ret %struct.Value* %31
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_List_reverse_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Types_List_reverse(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_prim__integerToNat(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %7 = call %struct.Value_Integer* @makeIntegerLiteral(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0))
  %8 = bitcast %struct.Value_Integer* %7 to %struct.Value*
  store %struct.Value* %8, %struct.Value** %3, align 8
  %9 = load %struct.Value*, %struct.Value** %3, align 8
  %10 = load %struct.Value*, %struct.Value** %2, align 8
  %11 = call %struct.Value* @lte_Integer(%struct.Value* noundef %9, %struct.Value* noundef %10)
  store %struct.Value* %11, %struct.Value** %4, align 8
  store %struct.Value* null, %struct.Value** %5, align 8
  %12 = load %struct.Value*, %struct.Value** %4, align 8
  %13 = call i32 @extractInt(%struct.Value* noundef %12)
  switch i32 %13, label %17 [
    i32 0, label %14
  ]

14:                                               ; preds = %1
  %15 = call %struct.Value_Integer* @makeIntegerLiteral(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0))
  %16 = bitcast %struct.Value_Integer* %15 to %struct.Value*
  store %struct.Value* %16, %struct.Value** %5, align 8
  br label %20

17:                                               ; preds = %1
  %18 = load %struct.Value*, %struct.Value** %2, align 8
  %19 = call %struct.Value* @newReference(%struct.Value* noundef %18)
  store %struct.Value* %19, %struct.Value** %5, align 8
  br label %20

20:                                               ; preds = %17, %14
  %21 = load %struct.Value*, %struct.Value** %5, align 8
  store %struct.Value* %21, %struct.Value** %6, align 8
  %22 = load %struct.Value*, %struct.Value** %4, align 8
  call void @removeReference(%struct.Value* noundef %22)
  %23 = load %struct.Value*, %struct.Value** %3, align 8
  call void @removeReference(%struct.Value* noundef %23)
  %24 = load %struct.Value*, %struct.Value** %6, align 8
  ret %struct.Value* %24
}

declare %struct.Value* @lte_Integer(%struct.Value* noundef, %struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_prim__integerToNat_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Types_prim__integerToNat(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_listBindOnto(%struct.Value* noundef %0, %struct.Value* noundef %1, %struct.Value* noundef %2) #0 {
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.AConAlt*, align 8
  %9 = alloca %struct.Value_Arglist*, align 8
  %10 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %11 = alloca %struct.Value*, align 8
  %12 = alloca %struct.Value*, align 8
  %13 = alloca %struct.Value*, align 8
  %14 = alloca %struct.Value*, align 8
  %15 = alloca %struct.Value_Arglist*, align 8
  %16 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %17 = alloca %struct.Value*, align 8
  %18 = alloca %struct.Value*, align 8
  %19 = alloca %struct.Value_Arglist*, align 8
  %20 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %21 = alloca %struct.Value*, align 8
  %22 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %4, align 8
  store %struct.Value* %1, %struct.Value** %5, align 8
  store %struct.Value* %2, %struct.Value** %6, align 8
  store %struct.Value* null, %struct.Value** %7, align 8
  %23 = call %struct.AConAlt* @newConstructorField(i32 noundef 2)
  store %struct.AConAlt* %23, %struct.AConAlt** %8, align 8
  %24 = load %struct.AConAlt*, %struct.AConAlt** %8, align 8
  %25 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %24, i64 0
  %26 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %25, i32 0, i32 1
  store i32 0, i32* %26, align 8
  %27 = load %struct.AConAlt*, %struct.AConAlt** %8, align 8
  %28 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %27, i64 0
  %29 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %28, i32 0, i32 0
  store i8* null, i8** %29, align 8
  %30 = load %struct.AConAlt*, %struct.AConAlt** %8, align 8
  %31 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %30, i64 1
  %32 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %31, i32 0, i32 1
  store i32 1, i32* %32, align 8
  %33 = load %struct.AConAlt*, %struct.AConAlt** %8, align 8
  %34 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %33, i64 1
  %35 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %34, i32 0, i32 0
  store i8* null, i8** %35, align 8
  %36 = load %struct.Value*, %struct.Value** %6, align 8
  %37 = load %struct.AConAlt*, %struct.AConAlt** %8, align 8
  %38 = call i32 @compareConstructors(%struct.Value* noundef %36, %struct.AConAlt* noundef %37, i32 noundef 2)
  switch i32 %38, label %113 [
    i32 0, label %39
    i32 1, label %52
  ]

39:                                               ; preds = %3
  %40 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %40, %struct.Value_Arglist** %9, align 8
  %41 = load %struct.Value*, %struct.Value** %5, align 8
  %42 = call %struct.Value* @newReference(%struct.Value* noundef %41)
  %43 = load %struct.Value_Arglist*, %struct.Value_Arglist** %9, align 8
  %44 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %43, i32 0, i32 3
  %45 = load %struct.Value**, %struct.Value*** %44, align 8
  %46 = getelementptr inbounds %struct.Value*, %struct.Value** %45, i64 0
  store %struct.Value* %42, %struct.Value** %46, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_List_reverse_arglist, %struct.Value* (%struct.Value_Arglist*)** %10, align 8
  %47 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %10, align 8
  %48 = load %struct.Value_Arglist*, %struct.Value_Arglist** %9, align 8
  %49 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %47, %struct.Value_Arglist* noundef %48)
  %50 = bitcast %struct.Value_Closure* %49 to %struct.Value*
  store %struct.Value* %50, %struct.Value** %11, align 8
  %51 = load %struct.Value*, %struct.Value** %11, align 8
  store %struct.Value* %51, %struct.Value** %7, align 8
  br label %113

52:                                               ; preds = %3
  %53 = load %struct.Value*, %struct.Value** %6, align 8
  %54 = bitcast %struct.Value* %53 to %struct.Value_Constructor*
  %55 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %54, i32 0, i32 4
  %56 = load %struct.Value**, %struct.Value*** %55, align 8
  %57 = getelementptr inbounds %struct.Value*, %struct.Value** %56, i64 0
  %58 = load %struct.Value*, %struct.Value** %57, align 8
  store %struct.Value* %58, %struct.Value** %12, align 8
  %59 = load %struct.Value*, %struct.Value** %6, align 8
  %60 = bitcast %struct.Value* %59 to %struct.Value_Constructor*
  %61 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %60, i32 0, i32 4
  %62 = load %struct.Value**, %struct.Value*** %61, align 8
  %63 = getelementptr inbounds %struct.Value*, %struct.Value** %62, i64 1
  %64 = load %struct.Value*, %struct.Value** %63, align 8
  store %struct.Value* %64, %struct.Value** %13, align 8
  %65 = load %struct.Value*, %struct.Value** %4, align 8
  %66 = load %struct.Value*, %struct.Value** %12, align 8
  %67 = call %struct.Value* @apply_closure(%struct.Value* noundef %65, %struct.Value* noundef %66)
  store %struct.Value* %67, %struct.Value** %14, align 8
  %68 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %68, %struct.Value_Arglist** %15, align 8
  %69 = load %struct.Value*, %struct.Value** %5, align 8
  %70 = call %struct.Value* @newReference(%struct.Value* noundef %69)
  %71 = load %struct.Value_Arglist*, %struct.Value_Arglist** %15, align 8
  %72 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %71, i32 0, i32 3
  %73 = load %struct.Value**, %struct.Value*** %72, align 8
  %74 = getelementptr inbounds %struct.Value*, %struct.Value** %73, i64 0
  store %struct.Value* %70, %struct.Value** %74, align 8
  %75 = load %struct.Value*, %struct.Value** %14, align 8
  %76 = call %struct.Value* @newReference(%struct.Value* noundef %75)
  %77 = load %struct.Value_Arglist*, %struct.Value_Arglist** %15, align 8
  %78 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %77, i32 0, i32 3
  %79 = load %struct.Value**, %struct.Value*** %78, align 8
  %80 = getelementptr inbounds %struct.Value*, %struct.Value** %79, i64 1
  store %struct.Value* %76, %struct.Value** %80, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_List_reverseOnto_arglist, %struct.Value* (%struct.Value_Arglist*)** %16, align 8
  %81 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %16, align 8
  %82 = load %struct.Value_Arglist*, %struct.Value_Arglist** %15, align 8
  %83 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %81, %struct.Value_Arglist* noundef %82)
  %84 = bitcast %struct.Value_Closure* %83 to %struct.Value*
  store %struct.Value* %84, %struct.Value** %17, align 8
  %85 = load %struct.Value*, %struct.Value** %17, align 8
  %86 = call %struct.Value* @trampoline(%struct.Value* noundef %85)
  store %struct.Value* %86, %struct.Value** %18, align 8
  %87 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 3)
  store %struct.Value_Arglist* %87, %struct.Value_Arglist** %19, align 8
  %88 = load %struct.Value*, %struct.Value** %4, align 8
  %89 = call %struct.Value* @newReference(%struct.Value* noundef %88)
  %90 = load %struct.Value_Arglist*, %struct.Value_Arglist** %19, align 8
  %91 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %90, i32 0, i32 3
  %92 = load %struct.Value**, %struct.Value*** %91, align 8
  %93 = getelementptr inbounds %struct.Value*, %struct.Value** %92, i64 0
  store %struct.Value* %89, %struct.Value** %93, align 8
  %94 = load %struct.Value*, %struct.Value** %18, align 8
  %95 = call %struct.Value* @newReference(%struct.Value* noundef %94)
  %96 = load %struct.Value_Arglist*, %struct.Value_Arglist** %19, align 8
  %97 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %96, i32 0, i32 3
  %98 = load %struct.Value**, %struct.Value*** %97, align 8
  %99 = getelementptr inbounds %struct.Value*, %struct.Value** %98, i64 1
  store %struct.Value* %95, %struct.Value** %99, align 8
  %100 = load %struct.Value*, %struct.Value** %13, align 8
  %101 = call %struct.Value* @newReference(%struct.Value* noundef %100)
  %102 = load %struct.Value_Arglist*, %struct.Value_Arglist** %19, align 8
  %103 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %102, i32 0, i32 3
  %104 = load %struct.Value**, %struct.Value*** %103, align 8
  %105 = getelementptr inbounds %struct.Value*, %struct.Value** %104, i64 2
  store %struct.Value* %101, %struct.Value** %105, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_listBindOnto_arglist, %struct.Value* (%struct.Value_Arglist*)** %20, align 8
  %106 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %20, align 8
  %107 = load %struct.Value_Arglist*, %struct.Value_Arglist** %19, align 8
  %108 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %106, %struct.Value_Arglist* noundef %107)
  %109 = bitcast %struct.Value_Closure* %108 to %struct.Value*
  store %struct.Value* %109, %struct.Value** %21, align 8
  %110 = load %struct.Value*, %struct.Value** %21, align 8
  store %struct.Value* %110, %struct.Value** %7, align 8
  %111 = load %struct.Value*, %struct.Value** %18, align 8
  call void @removeReference(%struct.Value* noundef %111)
  %112 = load %struct.Value*, %struct.Value** %14, align 8
  call void @removeReference(%struct.Value* noundef %112)
  br label %113

113:                                              ; preds = %3, %52, %39
  %114 = load %struct.AConAlt*, %struct.AConAlt** %8, align 8
  %115 = bitcast %struct.AConAlt* %114 to i8*
  call void @free(i8* noundef %115)
  %116 = load %struct.Value*, %struct.Value** %7, align 8
  store %struct.Value* %116, %struct.Value** %22, align 8
  %117 = load %struct.Value*, %struct.Value** %22, align 8
  ret %struct.Value* %117
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_listBindOnto_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %14 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %13, i32 0, i32 3
  %15 = load %struct.Value**, %struct.Value*** %14, align 8
  %16 = getelementptr inbounds %struct.Value*, %struct.Value** %15, i64 2
  %17 = load %struct.Value*, %struct.Value** %16, align 8
  %18 = call %struct.Value* @Prelude_Types_listBindOnto(%struct.Value* noundef %7, %struct.Value* noundef %12, %struct.Value* noundef %17)
  ret %struct.Value* %18
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_listBind(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Constructor*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value_Arglist*, align 8
  %8 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %11 = call %struct.Value_Constructor* @newConstructor(i32 noundef 0, i32 noundef 0, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0))
  store %struct.Value_Constructor* %11, %struct.Value_Constructor** %5, align 8
  %12 = load %struct.Value_Constructor*, %struct.Value_Constructor** %5, align 8
  %13 = bitcast %struct.Value_Constructor* %12 to %struct.Value*
  store %struct.Value* %13, %struct.Value** %6, align 8
  %14 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 3)
  store %struct.Value_Arglist* %14, %struct.Value_Arglist** %7, align 8
  %15 = load %struct.Value*, %struct.Value** %4, align 8
  %16 = call %struct.Value* @newReference(%struct.Value* noundef %15)
  %17 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %18 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %17, i32 0, i32 3
  %19 = load %struct.Value**, %struct.Value*** %18, align 8
  %20 = getelementptr inbounds %struct.Value*, %struct.Value** %19, i64 0
  store %struct.Value* %16, %struct.Value** %20, align 8
  %21 = load %struct.Value*, %struct.Value** %6, align 8
  %22 = call %struct.Value* @newReference(%struct.Value* noundef %21)
  %23 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %24 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %23, i32 0, i32 3
  %25 = load %struct.Value**, %struct.Value*** %24, align 8
  %26 = getelementptr inbounds %struct.Value*, %struct.Value** %25, i64 1
  store %struct.Value* %22, %struct.Value** %26, align 8
  %27 = load %struct.Value*, %struct.Value** %3, align 8
  %28 = call %struct.Value* @newReference(%struct.Value* noundef %27)
  %29 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %30 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %29, i32 0, i32 3
  %31 = load %struct.Value**, %struct.Value*** %30, align 8
  %32 = getelementptr inbounds %struct.Value*, %struct.Value** %31, i64 2
  store %struct.Value* %28, %struct.Value** %32, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_listBindOnto_arglist, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %33 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %34 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %35 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %33, %struct.Value_Arglist* noundef %34)
  %36 = bitcast %struct.Value_Closure* %35 to %struct.Value*
  store %struct.Value* %36, %struct.Value** %9, align 8
  %37 = load %struct.Value*, %struct.Value** %9, align 8
  store %struct.Value* %37, %struct.Value** %10, align 8
  %38 = load %struct.Value*, %struct.Value** %6, align 8
  call void @removeReference(%struct.Value* noundef %38)
  %39 = load %struct.Value*, %struct.Value** %10, align 8
  ret %struct.Value* %39
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_isDigit(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value_Arglist*, align 8
  %5 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value_Arglist*, align 8
  %11 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %12 = alloca %struct.Value*, align 8
  %13 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %14 = call %struct.Value_Char* @makeChar(i8 noundef signext 48)
  %15 = bitcast %struct.Value_Char* %14 to %struct.Value*
  store %struct.Value* %15, %struct.Value** %3, align 8
  %16 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %16, %struct.Value_Arglist** %4, align 8
  %17 = load %struct.Value*, %struct.Value** %2, align 8
  %18 = call %struct.Value* @newReference(%struct.Value* noundef %17)
  %19 = load %struct.Value_Arglist*, %struct.Value_Arglist** %4, align 8
  %20 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %19, i32 0, i32 3
  %21 = load %struct.Value**, %struct.Value*** %20, align 8
  %22 = getelementptr inbounds %struct.Value*, %struct.Value** %21, i64 0
  store %struct.Value* %18, %struct.Value** %22, align 8
  %23 = load %struct.Value*, %struct.Value** %3, align 8
  %24 = call %struct.Value* @newReference(%struct.Value* noundef %23)
  %25 = load %struct.Value_Arglist*, %struct.Value_Arglist** %4, align 8
  %26 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %25, i32 0, i32 3
  %27 = load %struct.Value**, %struct.Value*** %26, align 8
  %28 = getelementptr inbounds %struct.Value*, %struct.Value** %27, i64 1
  store %struct.Value* %24, %struct.Value** %28, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__gt_eq_Ord_Char_arglist, %struct.Value* (%struct.Value_Arglist*)** %5, align 8
  %29 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %5, align 8
  %30 = load %struct.Value_Arglist*, %struct.Value_Arglist** %4, align 8
  %31 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %29, %struct.Value_Arglist* noundef %30)
  %32 = bitcast %struct.Value_Closure* %31 to %struct.Value*
  store %struct.Value* %32, %struct.Value** %6, align 8
  %33 = load %struct.Value*, %struct.Value** %6, align 8
  %34 = call %struct.Value* @trampoline(%struct.Value* noundef %33)
  store %struct.Value* %34, %struct.Value** %7, align 8
  store %struct.Value* null, %struct.Value** %8, align 8
  %35 = load %struct.Value*, %struct.Value** %7, align 8
  %36 = call i32 @extractInt(%struct.Value* noundef %35)
  switch i32 %36, label %62 [
    i32 1, label %37
    i32 0, label %59
  ]

37:                                               ; preds = %1
  %38 = call %struct.Value_Char* @makeChar(i8 noundef signext 57)
  %39 = bitcast %struct.Value_Char* %38 to %struct.Value*
  store %struct.Value* %39, %struct.Value** %9, align 8
  %40 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %40, %struct.Value_Arglist** %10, align 8
  %41 = load %struct.Value*, %struct.Value** %2, align 8
  %42 = call %struct.Value* @newReference(%struct.Value* noundef %41)
  %43 = load %struct.Value_Arglist*, %struct.Value_Arglist** %10, align 8
  %44 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %43, i32 0, i32 3
  %45 = load %struct.Value**, %struct.Value*** %44, align 8
  %46 = getelementptr inbounds %struct.Value*, %struct.Value** %45, i64 0
  store %struct.Value* %42, %struct.Value** %46, align 8
  %47 = load %struct.Value*, %struct.Value** %9, align 8
  %48 = call %struct.Value* @newReference(%struct.Value* noundef %47)
  %49 = load %struct.Value_Arglist*, %struct.Value_Arglist** %10, align 8
  %50 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %49, i32 0, i32 3
  %51 = load %struct.Value**, %struct.Value*** %50, align 8
  %52 = getelementptr inbounds %struct.Value*, %struct.Value** %51, i64 1
  store %struct.Value* %48, %struct.Value** %52, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__lt_eq_Ord_Char_arglist, %struct.Value* (%struct.Value_Arglist*)** %11, align 8
  %53 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %11, align 8
  %54 = load %struct.Value_Arglist*, %struct.Value_Arglist** %10, align 8
  %55 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %53, %struct.Value_Arglist* noundef %54)
  %56 = bitcast %struct.Value_Closure* %55 to %struct.Value*
  store %struct.Value* %56, %struct.Value** %12, align 8
  %57 = load %struct.Value*, %struct.Value** %12, align 8
  store %struct.Value* %57, %struct.Value** %8, align 8
  %58 = load %struct.Value*, %struct.Value** %9, align 8
  call void @removeReference(%struct.Value* noundef %58)
  br label %62

59:                                               ; preds = %1
  %60 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %61 = bitcast %struct.Value_Bits8* %60 to %struct.Value*
  store %struct.Value* %61, %struct.Value** %8, align 8
  br label %62

62:                                               ; preds = %1, %59, %37
  %63 = load %struct.Value*, %struct.Value** %8, align 8
  store %struct.Value* %63, %struct.Value** %13, align 8
  %64 = load %struct.Value*, %struct.Value** %7, align 8
  call void @removeReference(%struct.Value* noundef %64)
  %65 = load %struct.Value*, %struct.Value** %3, align 8
  call void @removeReference(%struct.Value* noundef %65)
  %66 = load %struct.Value*, %struct.Value** %13, align 8
  ret %struct.Value* %66
}

declare %struct.Value_Char* @makeChar(i8 noundef signext) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__gt_eq_Ord_Char_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_EqOrd__gt_eq_Ord_Char(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__lt_eq_Ord_Char_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_EqOrd__lt_eq_Ord_Char(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

declare %struct.Value_Bits8* @makeBits8(i8 noundef zeroext) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_isDigit_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Types_isDigit(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_getAt(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.AConAlt*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value_Constructor*, align 8
  %11 = alloca %struct.Value*, align 8
  %12 = alloca %struct.AConAlt*, align 8
  %13 = alloca %struct.Value_Constructor*, align 8
  %14 = alloca %struct.Value*, align 8
  %15 = alloca %struct.Value*, align 8
  %16 = alloca %struct.Value*, align 8
  %17 = alloca %struct.AConAlt*, align 8
  %18 = alloca %struct.Value*, align 8
  %19 = alloca %struct.Value*, align 8
  %20 = alloca %struct.Value_Arglist*, align 8
  %21 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %22 = alloca %struct.Value*, align 8
  %23 = alloca %struct.Value*, align 8
  %24 = alloca %struct.AConAlt*, align 8
  %25 = alloca %struct.Value_Constructor*, align 8
  %26 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  store %struct.Value* null, %struct.Value** %5, align 8
  %27 = load %struct.Value*, %struct.Value** %3, align 8
  %28 = call i32 @extractInt(%struct.Value* noundef %27)
  switch i32 %28, label %85 [
    i32 0, label %29
  ]

29:                                               ; preds = %2
  store %struct.Value* null, %struct.Value** %6, align 8
  %30 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %30, %struct.AConAlt** %7, align 8
  %31 = load %struct.AConAlt*, %struct.AConAlt** %7, align 8
  %32 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %31, i64 0
  %33 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %32, i32 0, i32 1
  store i32 1, i32* %33, align 8
  %34 = load %struct.AConAlt*, %struct.AConAlt** %7, align 8
  %35 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %34, i64 0
  %36 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %35, i32 0, i32 0
  store i8* null, i8** %36, align 8
  %37 = load %struct.Value*, %struct.Value** %4, align 8
  %38 = load %struct.AConAlt*, %struct.AConAlt** %7, align 8
  %39 = call i32 @compareConstructors(%struct.Value* noundef %37, %struct.AConAlt* noundef %38, i32 noundef 1)
  switch i32 %39, label %62 [
    i32 0, label %40
  ]

40:                                               ; preds = %29
  %41 = load %struct.Value*, %struct.Value** %4, align 8
  %42 = bitcast %struct.Value* %41 to %struct.Value_Constructor*
  %43 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %42, i32 0, i32 4
  %44 = load %struct.Value**, %struct.Value*** %43, align 8
  %45 = getelementptr inbounds %struct.Value*, %struct.Value** %44, i64 0
  %46 = load %struct.Value*, %struct.Value** %45, align 8
  store %struct.Value* %46, %struct.Value** %8, align 8
  %47 = load %struct.Value*, %struct.Value** %4, align 8
  %48 = bitcast %struct.Value* %47 to %struct.Value_Constructor*
  %49 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %48, i32 0, i32 4
  %50 = load %struct.Value**, %struct.Value*** %49, align 8
  %51 = getelementptr inbounds %struct.Value*, %struct.Value** %50, i64 1
  %52 = load %struct.Value*, %struct.Value** %51, align 8
  store %struct.Value* %52, %struct.Value** %9, align 8
  %53 = call %struct.Value_Constructor* @newConstructor(i32 noundef 1, i32 noundef 1, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0))
  store %struct.Value_Constructor* %53, %struct.Value_Constructor** %10, align 8
  %54 = load %struct.Value*, %struct.Value** %8, align 8
  %55 = call %struct.Value* @newReference(%struct.Value* noundef %54)
  %56 = load %struct.Value_Constructor*, %struct.Value_Constructor** %10, align 8
  %57 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %56, i32 0, i32 4
  %58 = load %struct.Value**, %struct.Value*** %57, align 8
  %59 = getelementptr inbounds %struct.Value*, %struct.Value** %58, i64 0
  store %struct.Value* %55, %struct.Value** %59, align 8
  %60 = load %struct.Value_Constructor*, %struct.Value_Constructor** %10, align 8
  %61 = bitcast %struct.Value_Constructor* %60 to %struct.Value*
  store %struct.Value* %61, %struct.Value** %6, align 8
  br label %81

62:                                               ; preds = %29
  store %struct.Value* null, %struct.Value** %11, align 8
  %63 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %63, %struct.AConAlt** %12, align 8
  %64 = load %struct.AConAlt*, %struct.AConAlt** %12, align 8
  %65 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %64, i64 0
  %66 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %65, i32 0, i32 1
  store i32 0, i32* %66, align 8
  %67 = load %struct.AConAlt*, %struct.AConAlt** %12, align 8
  %68 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %67, i64 0
  %69 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %68, i32 0, i32 0
  store i8* null, i8** %69, align 8
  %70 = load %struct.Value*, %struct.Value** %4, align 8
  %71 = load %struct.AConAlt*, %struct.AConAlt** %12, align 8
  %72 = call i32 @compareConstructors(%struct.Value* noundef %70, %struct.AConAlt* noundef %71, i32 noundef 1)
  switch i32 %72, label %77 [
    i32 0, label %73
  ]

73:                                               ; preds = %62
  %74 = call %struct.Value_Constructor* @newConstructor(i32 noundef 0, i32 noundef 0, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i64 0, i64 0))
  store %struct.Value_Constructor* %74, %struct.Value_Constructor** %13, align 8
  %75 = load %struct.Value_Constructor*, %struct.Value_Constructor** %13, align 8
  %76 = bitcast %struct.Value_Constructor* %75 to %struct.Value*
  store %struct.Value* %76, %struct.Value** %11, align 8
  br label %77

77:                                               ; preds = %62, %73
  %78 = load %struct.AConAlt*, %struct.AConAlt** %12, align 8
  %79 = bitcast %struct.AConAlt* %78 to i8*
  call void @free(i8* noundef %79)
  %80 = load %struct.Value*, %struct.Value** %11, align 8
  store %struct.Value* %80, %struct.Value** %6, align 8
  br label %81

81:                                               ; preds = %77, %40
  %82 = load %struct.AConAlt*, %struct.AConAlt** %7, align 8
  %83 = bitcast %struct.AConAlt* %82 to i8*
  call void @free(i8* noundef %83)
  %84 = load %struct.Value*, %struct.Value** %6, align 8
  store %struct.Value* %84, %struct.Value** %5, align 8
  br label %157

85:                                               ; preds = %2
  %86 = call %struct.Value_Integer* @makeIntegerLiteral(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0))
  %87 = bitcast %struct.Value_Integer* %86 to %struct.Value*
  store %struct.Value* %87, %struct.Value** %14, align 8
  %88 = load %struct.Value*, %struct.Value** %3, align 8
  %89 = load %struct.Value*, %struct.Value** %14, align 8
  %90 = call %struct.Value* @sub_Integer(%struct.Value* noundef %88, %struct.Value* noundef %89)
  store %struct.Value* %90, %struct.Value** %15, align 8
  store %struct.Value* null, %struct.Value** %16, align 8
  %91 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %91, %struct.AConAlt** %17, align 8
  %92 = load %struct.AConAlt*, %struct.AConAlt** %17, align 8
  %93 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %92, i64 0
  %94 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %93, i32 0, i32 1
  store i32 1, i32* %94, align 8
  %95 = load %struct.AConAlt*, %struct.AConAlt** %17, align 8
  %96 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %95, i64 0
  %97 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %96, i32 0, i32 0
  store i8* null, i8** %97, align 8
  %98 = load %struct.Value*, %struct.Value** %4, align 8
  %99 = load %struct.AConAlt*, %struct.AConAlt** %17, align 8
  %100 = call i32 @compareConstructors(%struct.Value* noundef %98, %struct.AConAlt* noundef %99, i32 noundef 1)
  switch i32 %100, label %132 [
    i32 0, label %101
  ]

101:                                              ; preds = %85
  %102 = load %struct.Value*, %struct.Value** %4, align 8
  %103 = bitcast %struct.Value* %102 to %struct.Value_Constructor*
  %104 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %103, i32 0, i32 4
  %105 = load %struct.Value**, %struct.Value*** %104, align 8
  %106 = getelementptr inbounds %struct.Value*, %struct.Value** %105, i64 0
  %107 = load %struct.Value*, %struct.Value** %106, align 8
  store %struct.Value* %107, %struct.Value** %18, align 8
  %108 = load %struct.Value*, %struct.Value** %4, align 8
  %109 = bitcast %struct.Value* %108 to %struct.Value_Constructor*
  %110 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %109, i32 0, i32 4
  %111 = load %struct.Value**, %struct.Value*** %110, align 8
  %112 = getelementptr inbounds %struct.Value*, %struct.Value** %111, i64 1
  %113 = load %struct.Value*, %struct.Value** %112, align 8
  store %struct.Value* %113, %struct.Value** %19, align 8
  %114 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %114, %struct.Value_Arglist** %20, align 8
  %115 = load %struct.Value*, %struct.Value** %15, align 8
  %116 = call %struct.Value* @newReference(%struct.Value* noundef %115)
  %117 = load %struct.Value_Arglist*, %struct.Value_Arglist** %20, align 8
  %118 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %117, i32 0, i32 3
  %119 = load %struct.Value**, %struct.Value*** %118, align 8
  %120 = getelementptr inbounds %struct.Value*, %struct.Value** %119, i64 0
  store %struct.Value* %116, %struct.Value** %120, align 8
  %121 = load %struct.Value*, %struct.Value** %19, align 8
  %122 = call %struct.Value* @newReference(%struct.Value* noundef %121)
  %123 = load %struct.Value_Arglist*, %struct.Value_Arglist** %20, align 8
  %124 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %123, i32 0, i32 3
  %125 = load %struct.Value**, %struct.Value*** %124, align 8
  %126 = getelementptr inbounds %struct.Value*, %struct.Value** %125, i64 1
  store %struct.Value* %122, %struct.Value** %126, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_getAt_arglist, %struct.Value* (%struct.Value_Arglist*)** %21, align 8
  %127 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %21, align 8
  %128 = load %struct.Value_Arglist*, %struct.Value_Arglist** %20, align 8
  %129 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %127, %struct.Value_Arglist* noundef %128)
  %130 = bitcast %struct.Value_Closure* %129 to %struct.Value*
  store %struct.Value* %130, %struct.Value** %22, align 8
  %131 = load %struct.Value*, %struct.Value** %22, align 8
  store %struct.Value* %131, %struct.Value** %16, align 8
  br label %151

132:                                              ; preds = %85
  store %struct.Value* null, %struct.Value** %23, align 8
  %133 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %133, %struct.AConAlt** %24, align 8
  %134 = load %struct.AConAlt*, %struct.AConAlt** %24, align 8
  %135 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %134, i64 0
  %136 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %135, i32 0, i32 1
  store i32 0, i32* %136, align 8
  %137 = load %struct.AConAlt*, %struct.AConAlt** %24, align 8
  %138 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %137, i64 0
  %139 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %138, i32 0, i32 0
  store i8* null, i8** %139, align 8
  %140 = load %struct.Value*, %struct.Value** %4, align 8
  %141 = load %struct.AConAlt*, %struct.AConAlt** %24, align 8
  %142 = call i32 @compareConstructors(%struct.Value* noundef %140, %struct.AConAlt* noundef %141, i32 noundef 1)
  switch i32 %142, label %147 [
    i32 0, label %143
  ]

143:                                              ; preds = %132
  %144 = call %struct.Value_Constructor* @newConstructor(i32 noundef 0, i32 noundef 0, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i64 0, i64 0))
  store %struct.Value_Constructor* %144, %struct.Value_Constructor** %25, align 8
  %145 = load %struct.Value_Constructor*, %struct.Value_Constructor** %25, align 8
  %146 = bitcast %struct.Value_Constructor* %145 to %struct.Value*
  store %struct.Value* %146, %struct.Value** %23, align 8
  br label %147

147:                                              ; preds = %132, %143
  %148 = load %struct.AConAlt*, %struct.AConAlt** %24, align 8
  %149 = bitcast %struct.AConAlt* %148 to i8*
  call void @free(i8* noundef %149)
  %150 = load %struct.Value*, %struct.Value** %23, align 8
  store %struct.Value* %150, %struct.Value** %16, align 8
  br label %151

151:                                              ; preds = %147, %101
  %152 = load %struct.AConAlt*, %struct.AConAlt** %17, align 8
  %153 = bitcast %struct.AConAlt* %152 to i8*
  call void @free(i8* noundef %153)
  %154 = load %struct.Value*, %struct.Value** %16, align 8
  store %struct.Value* %154, %struct.Value** %5, align 8
  %155 = load %struct.Value*, %struct.Value** %15, align 8
  call void @removeReference(%struct.Value* noundef %155)
  %156 = load %struct.Value*, %struct.Value** %14, align 8
  call void @removeReference(%struct.Value* noundef %156)
  br label %157

157:                                              ; preds = %151, %81
  %158 = load %struct.Value*, %struct.Value** %5, align 8
  store %struct.Value* %158, %struct.Value** %26, align 8
  %159 = load %struct.Value*, %struct.Value** %26, align 8
  ret %struct.Value* %159
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_getAt_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_Types_getAt(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_fastUnpack_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Types_fastUnpack(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_fastUnpack(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca i8*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %4 = load %struct.Value*, %struct.Value** %2, align 8
  %5 = bitcast %struct.Value* %4 to %struct.Value_String*
  %6 = getelementptr inbounds %struct.Value_String, %struct.Value_String* %5, i32 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = call %struct.Value* @fastUnpack(i8* noundef %7)
  %9 = bitcast %struct.Value* %8 to i8*
  store i8* %9, i8** %3, align 8
  %10 = load i8*, i8** %3, align 8
  %11 = bitcast i8* %10 to %struct.Value*
  ret %struct.Value* %11
}

declare %struct.Value* @fastUnpack(i8* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_countFrom(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value_Constructor*, align 8
  %9 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %10 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 3)
  store %struct.Value_Arglist* %10, %struct.Value_Arglist** %5, align 8
  %11 = load %struct.Value*, %struct.Value** %3, align 8
  %12 = call %struct.Value* @newReference(%struct.Value* noundef %11)
  %13 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %14 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %13, i32 0, i32 3
  %15 = load %struct.Value**, %struct.Value*** %14, align 8
  %16 = getelementptr inbounds %struct.Value*, %struct.Value** %15, i64 0
  store %struct.Value* %12, %struct.Value** %16, align 8
  %17 = load %struct.Value*, %struct.Value** %4, align 8
  %18 = call %struct.Value* @newReference(%struct.Value* noundef %17)
  %19 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %20 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %19, i32 0, i32 3
  %21 = load %struct.Value**, %struct.Value*** %20, align 8
  %22 = getelementptr inbounds %struct.Value*, %struct.Value** %21, i64 1
  store %struct.Value* %18, %struct.Value** %22, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_countFrom_0_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %23 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %24 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %25 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %23, %struct.Value_Arglist* noundef %24)
  %26 = bitcast %struct.Value_Closure* %25 to %struct.Value*
  store %struct.Value* %26, %struct.Value** %7, align 8
  %27 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 0, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15, i64 0, i64 0))
  store %struct.Value_Constructor* %27, %struct.Value_Constructor** %8, align 8
  %28 = load %struct.Value*, %struct.Value** %3, align 8
  %29 = call %struct.Value* @newReference(%struct.Value* noundef %28)
  %30 = load %struct.Value_Constructor*, %struct.Value_Constructor** %8, align 8
  %31 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %30, i32 0, i32 4
  %32 = load %struct.Value**, %struct.Value*** %31, align 8
  %33 = getelementptr inbounds %struct.Value*, %struct.Value** %32, i64 0
  store %struct.Value* %29, %struct.Value** %33, align 8
  %34 = load %struct.Value*, %struct.Value** %7, align 8
  %35 = call %struct.Value* @newReference(%struct.Value* noundef %34)
  %36 = load %struct.Value_Constructor*, %struct.Value_Constructor** %8, align 8
  %37 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %36, i32 0, i32 4
  %38 = load %struct.Value**, %struct.Value*** %37, align 8
  %39 = getelementptr inbounds %struct.Value*, %struct.Value** %38, i64 1
  store %struct.Value* %35, %struct.Value** %39, align 8
  %40 = load %struct.Value_Constructor*, %struct.Value_Constructor** %8, align 8
  %41 = bitcast %struct.Value_Constructor* %40 to %struct.Value*
  store %struct.Value* %41, %struct.Value** %9, align 8
  %42 = load %struct.Value*, %struct.Value** %7, align 8
  call void @removeReference(%struct.Value* noundef %42)
  %43 = load %struct.Value*, %struct.Value** %9, align 8
  ret %struct.Value* %43
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_countFrom_0_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %14 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %13, i32 0, i32 3
  %15 = load %struct.Value**, %struct.Value*** %14, align 8
  %16 = getelementptr inbounds %struct.Value*, %struct.Value** %15, i64 2
  %17 = load %struct.Value*, %struct.Value** %16, align 8
  %18 = call %struct.Value* @Prelude_Types_countFrom_0(%struct.Value* noundef %7, %struct.Value* noundef %12, %struct.Value* noundef %17)
  ret %struct.Value* %18
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Types_countFrom_0(%struct.Value* noundef %0, %struct.Value* noundef %1, %struct.Value* noundef %2) #0 {
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value_Arglist*, align 8
  %9 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %10 = alloca %struct.Value*, align 8
  %11 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %4, align 8
  store %struct.Value* %1, %struct.Value** %5, align 8
  store %struct.Value* %2, %struct.Value** %6, align 8
  %12 = load %struct.Value*, %struct.Value** %5, align 8
  %13 = load %struct.Value*, %struct.Value** %4, align 8
  %14 = call %struct.Value* @apply_closure(%struct.Value* noundef %12, %struct.Value* noundef %13)
  store %struct.Value* %14, %struct.Value** %7, align 8
  %15 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %15, %struct.Value_Arglist** %8, align 8
  %16 = load %struct.Value*, %struct.Value** %7, align 8
  %17 = call %struct.Value* @newReference(%struct.Value* noundef %16)
  %18 = load %struct.Value_Arglist*, %struct.Value_Arglist** %8, align 8
  %19 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %18, i32 0, i32 3
  %20 = load %struct.Value**, %struct.Value*** %19, align 8
  %21 = getelementptr inbounds %struct.Value*, %struct.Value** %20, i64 0
  store %struct.Value* %17, %struct.Value** %21, align 8
  %22 = load %struct.Value*, %struct.Value** %5, align 8
  %23 = call %struct.Value* @newReference(%struct.Value* noundef %22)
  %24 = load %struct.Value_Arglist*, %struct.Value_Arglist** %8, align 8
  %25 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %24, i32 0, i32 3
  %26 = load %struct.Value**, %struct.Value*** %25, align 8
  %27 = getelementptr inbounds %struct.Value*, %struct.Value** %26, i64 1
  store %struct.Value* %23, %struct.Value** %27, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_countFrom_arglist, %struct.Value* (%struct.Value_Arglist*)** %9, align 8
  %28 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %9, align 8
  %29 = load %struct.Value_Arglist*, %struct.Value_Arglist** %8, align 8
  %30 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %28, %struct.Value_Arglist* noundef %29)
  %31 = bitcast %struct.Value_Closure* %30 to %struct.Value*
  store %struct.Value* %31, %struct.Value** %10, align 8
  %32 = load %struct.Value*, %struct.Value** %10, align 8
  store %struct.Value* %32, %struct.Value** %11, align 8
  %33 = load %struct.Value*, %struct.Value** %7, align 8
  call void @removeReference(%struct.Value* noundef %33)
  %34 = load %struct.Value*, %struct.Value** %11, align 8
  ret %struct.Value* %34
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Num_mod_Integral_Int(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value_Arglist*, align 8
  %8 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value*, align 8
  %11 = alloca %struct.Value*, align 8
  %12 = alloca %struct.Value*, align 8
  %13 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %14 = call %struct.Value_Integer* @makeIntegerLiteral(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0))
  %15 = bitcast %struct.Value_Integer* %14 to %struct.Value*
  store %struct.Value* %15, %struct.Value** %5, align 8
  %16 = load %struct.Value*, %struct.Value** %5, align 8
  %17 = call %struct.Value* @cast_Integer_to_Int64(%struct.Value* noundef %16)
  store %struct.Value* %17, %struct.Value** %6, align 8
  %18 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %18, %struct.Value_Arglist** %7, align 8
  %19 = load %struct.Value*, %struct.Value** %4, align 8
  %20 = call %struct.Value* @newReference(%struct.Value* noundef %19)
  %21 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %22 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %21, i32 0, i32 3
  %23 = load %struct.Value**, %struct.Value*** %22, align 8
  %24 = getelementptr inbounds %struct.Value*, %struct.Value** %23, i64 0
  store %struct.Value* %20, %struct.Value** %24, align 8
  %25 = load %struct.Value*, %struct.Value** %6, align 8
  %26 = call %struct.Value* @newReference(%struct.Value* noundef %25)
  %27 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %28 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %27, i32 0, i32 3
  %29 = load %struct.Value**, %struct.Value*** %28, align 8
  %30 = getelementptr inbounds %struct.Value*, %struct.Value** %29, i64 1
  store %struct.Value* %26, %struct.Value** %30, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__eq_eq_Eq_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %31 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %32 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %33 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %31, %struct.Value_Arglist* noundef %32)
  %34 = bitcast %struct.Value_Closure* %33 to %struct.Value*
  store %struct.Value* %34, %struct.Value** %9, align 8
  %35 = load %struct.Value*, %struct.Value** %9, align 8
  %36 = call %struct.Value* @trampoline(%struct.Value* noundef %35)
  store %struct.Value* %36, %struct.Value** %10, align 8
  store %struct.Value* null, %struct.Value** %11, align 8
  %37 = load %struct.Value*, %struct.Value** %10, align 8
  %38 = call i32 @extractInt(%struct.Value* noundef %37)
  switch i32 %38, label %43 [
    i32 0, label %39
  ]

39:                                               ; preds = %2
  %40 = load %struct.Value*, %struct.Value** %3, align 8
  %41 = load %struct.Value*, %struct.Value** %4, align 8
  %42 = call %struct.Value* @mod_Int64(%struct.Value* noundef %40, %struct.Value* noundef %41)
  store %struct.Value* %42, %struct.Value** %11, align 8
  br label %49

43:                                               ; preds = %2
  %44 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([79 x i8], [79 x i8]* @.str.16, i64 0, i64 0))
  %45 = bitcast %struct.Value_String* %44 to %struct.Value*
  store %struct.Value* %45, %struct.Value** %12, align 8
  %46 = load %struct.Value*, %struct.Value** %12, align 8
  %47 = call %struct.Value* @idris2_crash(%struct.Value* noundef %46)
  store %struct.Value* %47, %struct.Value** %11, align 8
  %48 = load %struct.Value*, %struct.Value** %12, align 8
  call void @removeReference(%struct.Value* noundef %48)
  br label %49

49:                                               ; preds = %43, %39
  %50 = load %struct.Value*, %struct.Value** %11, align 8
  store %struct.Value* %50, %struct.Value** %13, align 8
  %51 = load %struct.Value*, %struct.Value** %10, align 8
  call void @removeReference(%struct.Value* noundef %51)
  %52 = load %struct.Value*, %struct.Value** %6, align 8
  call void @removeReference(%struct.Value* noundef %52)
  %53 = load %struct.Value*, %struct.Value** %5, align 8
  call void @removeReference(%struct.Value* noundef %53)
  %54 = load %struct.Value*, %struct.Value** %13, align 8
  ret %struct.Value* %54
}

declare %struct.Value* @mod_Int64(%struct.Value* noundef, %struct.Value* noundef) #1

declare %struct.Value* @idris2_crash(%struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Num_div_Integral_Int(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value_Arglist*, align 8
  %8 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value*, align 8
  %11 = alloca %struct.Value*, align 8
  %12 = alloca %struct.Value*, align 8
  %13 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %14 = call %struct.Value_Integer* @makeIntegerLiteral(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0))
  %15 = bitcast %struct.Value_Integer* %14 to %struct.Value*
  store %struct.Value* %15, %struct.Value** %5, align 8
  %16 = load %struct.Value*, %struct.Value** %5, align 8
  %17 = call %struct.Value* @cast_Integer_to_Int64(%struct.Value* noundef %16)
  store %struct.Value* %17, %struct.Value** %6, align 8
  %18 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %18, %struct.Value_Arglist** %7, align 8
  %19 = load %struct.Value*, %struct.Value** %4, align 8
  %20 = call %struct.Value* @newReference(%struct.Value* noundef %19)
  %21 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %22 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %21, i32 0, i32 3
  %23 = load %struct.Value**, %struct.Value*** %22, align 8
  %24 = getelementptr inbounds %struct.Value*, %struct.Value** %23, i64 0
  store %struct.Value* %20, %struct.Value** %24, align 8
  %25 = load %struct.Value*, %struct.Value** %6, align 8
  %26 = call %struct.Value* @newReference(%struct.Value* noundef %25)
  %27 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %28 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %27, i32 0, i32 3
  %29 = load %struct.Value**, %struct.Value*** %28, align 8
  %30 = getelementptr inbounds %struct.Value*, %struct.Value** %29, i64 1
  store %struct.Value* %26, %struct.Value** %30, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__eq_eq_Eq_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %31 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %32 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %33 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %31, %struct.Value_Arglist* noundef %32)
  %34 = bitcast %struct.Value_Closure* %33 to %struct.Value*
  store %struct.Value* %34, %struct.Value** %9, align 8
  %35 = load %struct.Value*, %struct.Value** %9, align 8
  %36 = call %struct.Value* @trampoline(%struct.Value* noundef %35)
  store %struct.Value* %36, %struct.Value** %10, align 8
  store %struct.Value* null, %struct.Value** %11, align 8
  %37 = load %struct.Value*, %struct.Value** %10, align 8
  %38 = call i32 @extractInt(%struct.Value* noundef %37)
  switch i32 %38, label %43 [
    i32 0, label %39
  ]

39:                                               ; preds = %2
  %40 = load %struct.Value*, %struct.Value** %3, align 8
  %41 = load %struct.Value*, %struct.Value** %4, align 8
  %42 = call %struct.Value* @div_Int64(%struct.Value* noundef %40, %struct.Value* noundef %41)
  store %struct.Value* %42, %struct.Value** %11, align 8
  br label %49

43:                                               ; preds = %2
  %44 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([79 x i8], [79 x i8]* @.str.17, i64 0, i64 0))
  %45 = bitcast %struct.Value_String* %44 to %struct.Value*
  store %struct.Value* %45, %struct.Value** %12, align 8
  %46 = load %struct.Value*, %struct.Value** %12, align 8
  %47 = call %struct.Value* @idris2_crash(%struct.Value* noundef %46)
  store %struct.Value* %47, %struct.Value** %11, align 8
  %48 = load %struct.Value*, %struct.Value** %12, align 8
  call void @removeReference(%struct.Value* noundef %48)
  br label %49

49:                                               ; preds = %43, %39
  %50 = load %struct.Value*, %struct.Value** %11, align 8
  store %struct.Value* %50, %struct.Value** %13, align 8
  %51 = load %struct.Value*, %struct.Value** %10, align 8
  call void @removeReference(%struct.Value* noundef %51)
  %52 = load %struct.Value*, %struct.Value** %6, align 8
  call void @removeReference(%struct.Value* noundef %52)
  %53 = load %struct.Value*, %struct.Value** %5, align 8
  call void @removeReference(%struct.Value* noundef %53)
  %54 = load %struct.Value*, %struct.Value** %13, align 8
  ret %struct.Value* %54
}

declare %struct.Value* @div_Int64(%struct.Value* noundef, %struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd_min_Ord_Int(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %11 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %11, %struct.Value_Arglist** %5, align 8
  %12 = load %struct.Value*, %struct.Value** %3, align 8
  %13 = call %struct.Value* @newReference(%struct.Value* noundef %12)
  %14 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %15 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %14, i32 0, i32 3
  %16 = load %struct.Value**, %struct.Value*** %15, align 8
  %17 = getelementptr inbounds %struct.Value*, %struct.Value** %16, i64 0
  store %struct.Value* %13, %struct.Value** %17, align 8
  %18 = load %struct.Value*, %struct.Value** %4, align 8
  %19 = call %struct.Value* @newReference(%struct.Value* noundef %18)
  %20 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %21 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %20, i32 0, i32 3
  %22 = load %struct.Value**, %struct.Value*** %21, align 8
  %23 = getelementptr inbounds %struct.Value*, %struct.Value** %22, i64 1
  store %struct.Value* %19, %struct.Value** %23, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__lt_Ord_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %24 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %25 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %26 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %24, %struct.Value_Arglist* noundef %25)
  %27 = bitcast %struct.Value_Closure* %26 to %struct.Value*
  store %struct.Value* %27, %struct.Value** %7, align 8
  %28 = load %struct.Value*, %struct.Value** %7, align 8
  %29 = call %struct.Value* @trampoline(%struct.Value* noundef %28)
  store %struct.Value* %29, %struct.Value** %8, align 8
  store %struct.Value* null, %struct.Value** %9, align 8
  %30 = load %struct.Value*, %struct.Value** %8, align 8
  %31 = call i32 @extractInt(%struct.Value* noundef %30)
  switch i32 %31, label %38 [
    i32 1, label %32
    i32 0, label %35
  ]

32:                                               ; preds = %2
  %33 = load %struct.Value*, %struct.Value** %3, align 8
  %34 = call %struct.Value* @newReference(%struct.Value* noundef %33)
  store %struct.Value* %34, %struct.Value** %9, align 8
  br label %38

35:                                               ; preds = %2
  %36 = load %struct.Value*, %struct.Value** %4, align 8
  %37 = call %struct.Value* @newReference(%struct.Value* noundef %36)
  store %struct.Value* %37, %struct.Value** %9, align 8
  br label %38

38:                                               ; preds = %2, %35, %32
  %39 = load %struct.Value*, %struct.Value** %9, align 8
  store %struct.Value* %39, %struct.Value** %10, align 8
  %40 = load %struct.Value*, %struct.Value** %8, align 8
  call void @removeReference(%struct.Value* noundef %40)
  %41 = load %struct.Value*, %struct.Value** %10, align 8
  ret %struct.Value* %41
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd_max_Ord_Int(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %11 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %11, %struct.Value_Arglist** %5, align 8
  %12 = load %struct.Value*, %struct.Value** %3, align 8
  %13 = call %struct.Value* @newReference(%struct.Value* noundef %12)
  %14 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %15 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %14, i32 0, i32 3
  %16 = load %struct.Value**, %struct.Value*** %15, align 8
  %17 = getelementptr inbounds %struct.Value*, %struct.Value** %16, i64 0
  store %struct.Value* %13, %struct.Value** %17, align 8
  %18 = load %struct.Value*, %struct.Value** %4, align 8
  %19 = call %struct.Value* @newReference(%struct.Value* noundef %18)
  %20 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %21 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %20, i32 0, i32 3
  %22 = load %struct.Value**, %struct.Value*** %21, align 8
  %23 = getelementptr inbounds %struct.Value*, %struct.Value** %22, i64 1
  store %struct.Value* %19, %struct.Value** %23, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__gt_Ord_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %24 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %25 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %26 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %24, %struct.Value_Arglist* noundef %25)
  %27 = bitcast %struct.Value_Closure* %26 to %struct.Value*
  store %struct.Value* %27, %struct.Value** %7, align 8
  %28 = load %struct.Value*, %struct.Value** %7, align 8
  %29 = call %struct.Value* @trampoline(%struct.Value* noundef %28)
  store %struct.Value* %29, %struct.Value** %8, align 8
  store %struct.Value* null, %struct.Value** %9, align 8
  %30 = load %struct.Value*, %struct.Value** %8, align 8
  %31 = call i32 @extractInt(%struct.Value* noundef %30)
  switch i32 %31, label %38 [
    i32 1, label %32
    i32 0, label %35
  ]

32:                                               ; preds = %2
  %33 = load %struct.Value*, %struct.Value** %3, align 8
  %34 = call %struct.Value* @newReference(%struct.Value* noundef %33)
  store %struct.Value* %34, %struct.Value** %9, align 8
  br label %38

35:                                               ; preds = %2
  %36 = load %struct.Value*, %struct.Value** %4, align 8
  %37 = call %struct.Value* @newReference(%struct.Value* noundef %36)
  store %struct.Value* %37, %struct.Value** %9, align 8
  br label %38

38:                                               ; preds = %2, %35, %32
  %39 = load %struct.Value*, %struct.Value** %9, align 8
  store %struct.Value* %39, %struct.Value** %10, align 8
  %40 = load %struct.Value*, %struct.Value** %8, align 8
  call void @removeReference(%struct.Value* noundef %40)
  %41 = load %struct.Value*, %struct.Value** %10, align 8
  ret %struct.Value* %41
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd_compare_Ord_Integer(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value_Arglist*, align 8
  %11 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %12 = alloca %struct.Value*, align 8
  %13 = alloca %struct.Value*, align 8
  %14 = alloca %struct.Value*, align 8
  %15 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %16 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %16, %struct.Value_Arglist** %5, align 8
  %17 = load %struct.Value*, %struct.Value** %3, align 8
  %18 = call %struct.Value* @newReference(%struct.Value* noundef %17)
  %19 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %20 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %19, i32 0, i32 3
  %21 = load %struct.Value**, %struct.Value*** %20, align 8
  %22 = getelementptr inbounds %struct.Value*, %struct.Value** %21, i64 0
  store %struct.Value* %18, %struct.Value** %22, align 8
  %23 = load %struct.Value*, %struct.Value** %4, align 8
  %24 = call %struct.Value* @newReference(%struct.Value* noundef %23)
  %25 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %26 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %25, i32 0, i32 3
  %27 = load %struct.Value**, %struct.Value*** %26, align 8
  %28 = getelementptr inbounds %struct.Value*, %struct.Value** %27, i64 1
  store %struct.Value* %24, %struct.Value** %28, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__lt_Ord_Integer_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %29 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %30 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %31 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %29, %struct.Value_Arglist* noundef %30)
  %32 = bitcast %struct.Value_Closure* %31 to %struct.Value*
  store %struct.Value* %32, %struct.Value** %7, align 8
  %33 = load %struct.Value*, %struct.Value** %7, align 8
  %34 = call %struct.Value* @trampoline(%struct.Value* noundef %33)
  store %struct.Value* %34, %struct.Value** %8, align 8
  store %struct.Value* null, %struct.Value** %9, align 8
  %35 = load %struct.Value*, %struct.Value** %8, align 8
  %36 = call i32 @extractInt(%struct.Value* noundef %35)
  switch i32 %36, label %71 [
    i32 1, label %37
    i32 0, label %40
  ]

37:                                               ; preds = %2
  %38 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %39 = bitcast %struct.Value_Bits8* %38 to %struct.Value*
  store %struct.Value* %39, %struct.Value** %9, align 8
  br label %71

40:                                               ; preds = %2
  %41 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %41, %struct.Value_Arglist** %10, align 8
  %42 = load %struct.Value*, %struct.Value** %3, align 8
  %43 = call %struct.Value* @newReference(%struct.Value* noundef %42)
  %44 = load %struct.Value_Arglist*, %struct.Value_Arglist** %10, align 8
  %45 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %44, i32 0, i32 3
  %46 = load %struct.Value**, %struct.Value*** %45, align 8
  %47 = getelementptr inbounds %struct.Value*, %struct.Value** %46, i64 0
  store %struct.Value* %43, %struct.Value** %47, align 8
  %48 = load %struct.Value*, %struct.Value** %4, align 8
  %49 = call %struct.Value* @newReference(%struct.Value* noundef %48)
  %50 = load %struct.Value_Arglist*, %struct.Value_Arglist** %10, align 8
  %51 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %50, i32 0, i32 3
  %52 = load %struct.Value**, %struct.Value*** %51, align 8
  %53 = getelementptr inbounds %struct.Value*, %struct.Value** %52, i64 1
  store %struct.Value* %49, %struct.Value** %53, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__eq_eq_Eq_Integer_arglist, %struct.Value* (%struct.Value_Arglist*)** %11, align 8
  %54 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %11, align 8
  %55 = load %struct.Value_Arglist*, %struct.Value_Arglist** %10, align 8
  %56 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %54, %struct.Value_Arglist* noundef %55)
  %57 = bitcast %struct.Value_Closure* %56 to %struct.Value*
  store %struct.Value* %57, %struct.Value** %12, align 8
  %58 = load %struct.Value*, %struct.Value** %12, align 8
  %59 = call %struct.Value* @trampoline(%struct.Value* noundef %58)
  store %struct.Value* %59, %struct.Value** %13, align 8
  store %struct.Value* null, %struct.Value** %14, align 8
  %60 = load %struct.Value*, %struct.Value** %13, align 8
  %61 = call i32 @extractInt(%struct.Value* noundef %60)
  switch i32 %61, label %68 [
    i32 1, label %62
    i32 0, label %65
  ]

62:                                               ; preds = %40
  %63 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 1)
  %64 = bitcast %struct.Value_Bits8* %63 to %struct.Value*
  store %struct.Value* %64, %struct.Value** %14, align 8
  br label %68

65:                                               ; preds = %40
  %66 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 2)
  %67 = bitcast %struct.Value_Bits8* %66 to %struct.Value*
  store %struct.Value* %67, %struct.Value** %14, align 8
  br label %68

68:                                               ; preds = %40, %65, %62
  %69 = load %struct.Value*, %struct.Value** %14, align 8
  store %struct.Value* %69, %struct.Value** %9, align 8
  %70 = load %struct.Value*, %struct.Value** %13, align 8
  call void @removeReference(%struct.Value* noundef %70)
  br label %71

71:                                               ; preds = %2, %68, %37
  %72 = load %struct.Value*, %struct.Value** %9, align 8
  store %struct.Value* %72, %struct.Value** %15, align 8
  %73 = load %struct.Value*, %struct.Value** %8, align 8
  call void @removeReference(%struct.Value* noundef %73)
  %74 = load %struct.Value*, %struct.Value** %15, align 8
  ret %struct.Value* %74
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__lt_Ord_Integer_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_EqOrd__lt_Ord_Integer(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__eq_eq_Eq_Integer_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_EqOrd__eq_eq_Eq_Integer(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd_compare_Ord_Integer_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_EqOrd_compare_Ord_Integer(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd_compare_Ord_Int(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value_Arglist*, align 8
  %11 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %12 = alloca %struct.Value*, align 8
  %13 = alloca %struct.Value*, align 8
  %14 = alloca %struct.Value*, align 8
  %15 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %16 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %16, %struct.Value_Arglist** %5, align 8
  %17 = load %struct.Value*, %struct.Value** %3, align 8
  %18 = call %struct.Value* @newReference(%struct.Value* noundef %17)
  %19 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %20 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %19, i32 0, i32 3
  %21 = load %struct.Value**, %struct.Value*** %20, align 8
  %22 = getelementptr inbounds %struct.Value*, %struct.Value** %21, i64 0
  store %struct.Value* %18, %struct.Value** %22, align 8
  %23 = load %struct.Value*, %struct.Value** %4, align 8
  %24 = call %struct.Value* @newReference(%struct.Value* noundef %23)
  %25 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %26 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %25, i32 0, i32 3
  %27 = load %struct.Value**, %struct.Value*** %26, align 8
  %28 = getelementptr inbounds %struct.Value*, %struct.Value** %27, i64 1
  store %struct.Value* %24, %struct.Value** %28, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__lt_Ord_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %29 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %30 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %31 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %29, %struct.Value_Arglist* noundef %30)
  %32 = bitcast %struct.Value_Closure* %31 to %struct.Value*
  store %struct.Value* %32, %struct.Value** %7, align 8
  %33 = load %struct.Value*, %struct.Value** %7, align 8
  %34 = call %struct.Value* @trampoline(%struct.Value* noundef %33)
  store %struct.Value* %34, %struct.Value** %8, align 8
  store %struct.Value* null, %struct.Value** %9, align 8
  %35 = load %struct.Value*, %struct.Value** %8, align 8
  %36 = call i32 @extractInt(%struct.Value* noundef %35)
  switch i32 %36, label %71 [
    i32 1, label %37
    i32 0, label %40
  ]

37:                                               ; preds = %2
  %38 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %39 = bitcast %struct.Value_Bits8* %38 to %struct.Value*
  store %struct.Value* %39, %struct.Value** %9, align 8
  br label %71

40:                                               ; preds = %2
  %41 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %41, %struct.Value_Arglist** %10, align 8
  %42 = load %struct.Value*, %struct.Value** %3, align 8
  %43 = call %struct.Value* @newReference(%struct.Value* noundef %42)
  %44 = load %struct.Value_Arglist*, %struct.Value_Arglist** %10, align 8
  %45 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %44, i32 0, i32 3
  %46 = load %struct.Value**, %struct.Value*** %45, align 8
  %47 = getelementptr inbounds %struct.Value*, %struct.Value** %46, i64 0
  store %struct.Value* %43, %struct.Value** %47, align 8
  %48 = load %struct.Value*, %struct.Value** %4, align 8
  %49 = call %struct.Value* @newReference(%struct.Value* noundef %48)
  %50 = load %struct.Value_Arglist*, %struct.Value_Arglist** %10, align 8
  %51 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %50, i32 0, i32 3
  %52 = load %struct.Value**, %struct.Value*** %51, align 8
  %53 = getelementptr inbounds %struct.Value*, %struct.Value** %52, i64 1
  store %struct.Value* %49, %struct.Value** %53, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__eq_eq_Eq_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %11, align 8
  %54 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %11, align 8
  %55 = load %struct.Value_Arglist*, %struct.Value_Arglist** %10, align 8
  %56 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %54, %struct.Value_Arglist* noundef %55)
  %57 = bitcast %struct.Value_Closure* %56 to %struct.Value*
  store %struct.Value* %57, %struct.Value** %12, align 8
  %58 = load %struct.Value*, %struct.Value** %12, align 8
  %59 = call %struct.Value* @trampoline(%struct.Value* noundef %58)
  store %struct.Value* %59, %struct.Value** %13, align 8
  store %struct.Value* null, %struct.Value** %14, align 8
  %60 = load %struct.Value*, %struct.Value** %13, align 8
  %61 = call i32 @extractInt(%struct.Value* noundef %60)
  switch i32 %61, label %68 [
    i32 1, label %62
    i32 0, label %65
  ]

62:                                               ; preds = %40
  %63 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 1)
  %64 = bitcast %struct.Value_Bits8* %63 to %struct.Value*
  store %struct.Value* %64, %struct.Value** %14, align 8
  br label %68

65:                                               ; preds = %40
  %66 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 2)
  %67 = bitcast %struct.Value_Bits8* %66 to %struct.Value*
  store %struct.Value* %67, %struct.Value** %14, align 8
  br label %68

68:                                               ; preds = %40, %65, %62
  %69 = load %struct.Value*, %struct.Value** %14, align 8
  store %struct.Value* %69, %struct.Value** %9, align 8
  %70 = load %struct.Value*, %struct.Value** %13, align 8
  call void @removeReference(%struct.Value* noundef %70)
  br label %71

71:                                               ; preds = %2, %68, %37
  %72 = load %struct.Value*, %struct.Value** %9, align 8
  store %struct.Value* %72, %struct.Value** %15, align 8
  %73 = load %struct.Value*, %struct.Value** %8, align 8
  call void @removeReference(%struct.Value* noundef %73)
  %74 = load %struct.Value*, %struct.Value** %15, align 8
  ret %struct.Value* %74
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__gt_Ord_Int(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %8 = load %struct.Value*, %struct.Value** %3, align 8
  %9 = load %struct.Value*, %struct.Value** %4, align 8
  %10 = call %struct.Value* @gt_Int64(%struct.Value* noundef %8, %struct.Value* noundef %9)
  store %struct.Value* %10, %struct.Value** %5, align 8
  store %struct.Value* null, %struct.Value** %6, align 8
  %11 = load %struct.Value*, %struct.Value** %5, align 8
  %12 = call i32 @extractInt(%struct.Value* noundef %11)
  switch i32 %12, label %16 [
    i32 0, label %13
  ]

13:                                               ; preds = %2
  %14 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %15 = bitcast %struct.Value_Bits8* %14 to %struct.Value*
  store %struct.Value* %15, %struct.Value** %6, align 8
  br label %19

16:                                               ; preds = %2
  %17 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 1)
  %18 = bitcast %struct.Value_Bits8* %17 to %struct.Value*
  store %struct.Value* %18, %struct.Value** %6, align 8
  br label %19

19:                                               ; preds = %16, %13
  %20 = load %struct.Value*, %struct.Value** %6, align 8
  store %struct.Value* %20, %struct.Value** %7, align 8
  %21 = load %struct.Value*, %struct.Value** %5, align 8
  call void @removeReference(%struct.Value* noundef %21)
  %22 = load %struct.Value*, %struct.Value** %7, align 8
  ret %struct.Value* %22
}

declare %struct.Value* @gt_Int64(%struct.Value* noundef, %struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__gt_Ord_Char(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %8 = load %struct.Value*, %struct.Value** %3, align 8
  %9 = load %struct.Value*, %struct.Value** %4, align 8
  %10 = call %struct.Value* @gt_char(%struct.Value* noundef %8, %struct.Value* noundef %9)
  store %struct.Value* %10, %struct.Value** %5, align 8
  store %struct.Value* null, %struct.Value** %6, align 8
  %11 = load %struct.Value*, %struct.Value** %5, align 8
  %12 = call i32 @extractInt(%struct.Value* noundef %11)
  switch i32 %12, label %16 [
    i32 0, label %13
  ]

13:                                               ; preds = %2
  %14 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %15 = bitcast %struct.Value_Bits8* %14 to %struct.Value*
  store %struct.Value* %15, %struct.Value** %6, align 8
  br label %19

16:                                               ; preds = %2
  %17 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 1)
  %18 = bitcast %struct.Value_Bits8* %17 to %struct.Value*
  store %struct.Value* %18, %struct.Value** %6, align 8
  br label %19

19:                                               ; preds = %16, %13
  %20 = load %struct.Value*, %struct.Value** %6, align 8
  store %struct.Value* %20, %struct.Value** %7, align 8
  %21 = load %struct.Value*, %struct.Value** %5, align 8
  call void @removeReference(%struct.Value* noundef %21)
  %22 = load %struct.Value*, %struct.Value** %7, align 8
  ret %struct.Value* %22
}

declare %struct.Value* @gt_char(%struct.Value* noundef, %struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__gt_Ord_Char_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_EqOrd__gt_Ord_Char(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__gt_eq_Ord_Int(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %8 = load %struct.Value*, %struct.Value** %3, align 8
  %9 = load %struct.Value*, %struct.Value** %4, align 8
  %10 = call %struct.Value* @gte_Int64(%struct.Value* noundef %8, %struct.Value* noundef %9)
  store %struct.Value* %10, %struct.Value** %5, align 8
  store %struct.Value* null, %struct.Value** %6, align 8
  %11 = load %struct.Value*, %struct.Value** %5, align 8
  %12 = call i32 @extractInt(%struct.Value* noundef %11)
  switch i32 %12, label %16 [
    i32 0, label %13
  ]

13:                                               ; preds = %2
  %14 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %15 = bitcast %struct.Value_Bits8* %14 to %struct.Value*
  store %struct.Value* %15, %struct.Value** %6, align 8
  br label %19

16:                                               ; preds = %2
  %17 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 1)
  %18 = bitcast %struct.Value_Bits8* %17 to %struct.Value*
  store %struct.Value* %18, %struct.Value** %6, align 8
  br label %19

19:                                               ; preds = %16, %13
  %20 = load %struct.Value*, %struct.Value** %6, align 8
  store %struct.Value* %20, %struct.Value** %7, align 8
  %21 = load %struct.Value*, %struct.Value** %5, align 8
  call void @removeReference(%struct.Value* noundef %21)
  %22 = load %struct.Value*, %struct.Value** %7, align 8
  ret %struct.Value* %22
}

declare %struct.Value* @gte_Int64(%struct.Value* noundef, %struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__gt_eq_Ord_Char(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %8 = load %struct.Value*, %struct.Value** %3, align 8
  %9 = load %struct.Value*, %struct.Value** %4, align 8
  %10 = call %struct.Value* @gte_char(%struct.Value* noundef %8, %struct.Value* noundef %9)
  store %struct.Value* %10, %struct.Value** %5, align 8
  store %struct.Value* null, %struct.Value** %6, align 8
  %11 = load %struct.Value*, %struct.Value** %5, align 8
  %12 = call i32 @extractInt(%struct.Value* noundef %11)
  switch i32 %12, label %16 [
    i32 0, label %13
  ]

13:                                               ; preds = %2
  %14 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %15 = bitcast %struct.Value_Bits8* %14 to %struct.Value*
  store %struct.Value* %15, %struct.Value** %6, align 8
  br label %19

16:                                               ; preds = %2
  %17 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 1)
  %18 = bitcast %struct.Value_Bits8* %17 to %struct.Value*
  store %struct.Value* %18, %struct.Value** %6, align 8
  br label %19

19:                                               ; preds = %16, %13
  %20 = load %struct.Value*, %struct.Value** %6, align 8
  store %struct.Value* %20, %struct.Value** %7, align 8
  %21 = load %struct.Value*, %struct.Value** %5, align 8
  call void @removeReference(%struct.Value* noundef %21)
  %22 = load %struct.Value*, %struct.Value** %7, align 8
  ret %struct.Value* %22
}

declare %struct.Value* @gte_char(%struct.Value* noundef, %struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__eq_eq_Eq_Ordering(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  store %struct.Value* null, %struct.Value** %5, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  %11 = call i32 @extractInt(%struct.Value* noundef %10)
  switch i32 %11, label %45 [
    i32 0, label %12
    i32 1, label %23
    i32 2, label %34
  ]

12:                                               ; preds = %2
  store %struct.Value* null, %struct.Value** %6, align 8
  %13 = load %struct.Value*, %struct.Value** %4, align 8
  %14 = call i32 @extractInt(%struct.Value* noundef %13)
  switch i32 %14, label %18 [
    i32 0, label %15
  ]

15:                                               ; preds = %12
  %16 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 1)
  %17 = bitcast %struct.Value_Bits8* %16 to %struct.Value*
  store %struct.Value* %17, %struct.Value** %6, align 8
  br label %21

18:                                               ; preds = %12
  %19 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %20 = bitcast %struct.Value_Bits8* %19 to %struct.Value*
  store %struct.Value* %20, %struct.Value** %6, align 8
  br label %21

21:                                               ; preds = %18, %15
  %22 = load %struct.Value*, %struct.Value** %6, align 8
  store %struct.Value* %22, %struct.Value** %5, align 8
  br label %48

23:                                               ; preds = %2
  store %struct.Value* null, %struct.Value** %7, align 8
  %24 = load %struct.Value*, %struct.Value** %4, align 8
  %25 = call i32 @extractInt(%struct.Value* noundef %24)
  switch i32 %25, label %29 [
    i32 1, label %26
  ]

26:                                               ; preds = %23
  %27 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 1)
  %28 = bitcast %struct.Value_Bits8* %27 to %struct.Value*
  store %struct.Value* %28, %struct.Value** %7, align 8
  br label %32

29:                                               ; preds = %23
  %30 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %31 = bitcast %struct.Value_Bits8* %30 to %struct.Value*
  store %struct.Value* %31, %struct.Value** %7, align 8
  br label %32

32:                                               ; preds = %29, %26
  %33 = load %struct.Value*, %struct.Value** %7, align 8
  store %struct.Value* %33, %struct.Value** %5, align 8
  br label %48

34:                                               ; preds = %2
  store %struct.Value* null, %struct.Value** %8, align 8
  %35 = load %struct.Value*, %struct.Value** %4, align 8
  %36 = call i32 @extractInt(%struct.Value* noundef %35)
  switch i32 %36, label %40 [
    i32 2, label %37
  ]

37:                                               ; preds = %34
  %38 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 1)
  %39 = bitcast %struct.Value_Bits8* %38 to %struct.Value*
  store %struct.Value* %39, %struct.Value** %8, align 8
  br label %43

40:                                               ; preds = %34
  %41 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %42 = bitcast %struct.Value_Bits8* %41 to %struct.Value*
  store %struct.Value* %42, %struct.Value** %8, align 8
  br label %43

43:                                               ; preds = %40, %37
  %44 = load %struct.Value*, %struct.Value** %8, align 8
  store %struct.Value* %44, %struct.Value** %5, align 8
  br label %48

45:                                               ; preds = %2
  %46 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %47 = bitcast %struct.Value_Bits8* %46 to %struct.Value*
  store %struct.Value* %47, %struct.Value** %5, align 8
  br label %48

48:                                               ; preds = %45, %43, %32, %21
  %49 = load %struct.Value*, %struct.Value** %5, align 8
  store %struct.Value* %49, %struct.Value** %9, align 8
  %50 = load %struct.Value*, %struct.Value** %9, align 8
  ret %struct.Value* %50
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__eq_eq_Eq_Ordering_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_EqOrd__eq_eq_Eq_Ordering(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__eq_eq_Eq_Integer(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %8 = load %struct.Value*, %struct.Value** %3, align 8
  %9 = load %struct.Value*, %struct.Value** %4, align 8
  %10 = call %struct.Value* @eq_Integer(%struct.Value* noundef %8, %struct.Value* noundef %9)
  store %struct.Value* %10, %struct.Value** %5, align 8
  store %struct.Value* null, %struct.Value** %6, align 8
  %11 = load %struct.Value*, %struct.Value** %5, align 8
  %12 = call i32 @extractInt(%struct.Value* noundef %11)
  switch i32 %12, label %16 [
    i32 0, label %13
  ]

13:                                               ; preds = %2
  %14 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %15 = bitcast %struct.Value_Bits8* %14 to %struct.Value*
  store %struct.Value* %15, %struct.Value** %6, align 8
  br label %19

16:                                               ; preds = %2
  %17 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 1)
  %18 = bitcast %struct.Value_Bits8* %17 to %struct.Value*
  store %struct.Value* %18, %struct.Value** %6, align 8
  br label %19

19:                                               ; preds = %16, %13
  %20 = load %struct.Value*, %struct.Value** %6, align 8
  store %struct.Value* %20, %struct.Value** %7, align 8
  %21 = load %struct.Value*, %struct.Value** %5, align 8
  call void @removeReference(%struct.Value* noundef %21)
  %22 = load %struct.Value*, %struct.Value** %7, align 8
  ret %struct.Value* %22
}

declare %struct.Value* @eq_Integer(%struct.Value* noundef, %struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__eq_eq_Eq_Int(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %8 = load %struct.Value*, %struct.Value** %3, align 8
  %9 = load %struct.Value*, %struct.Value** %4, align 8
  %10 = call %struct.Value* @eq_Int64(%struct.Value* noundef %8, %struct.Value* noundef %9)
  store %struct.Value* %10, %struct.Value** %5, align 8
  store %struct.Value* null, %struct.Value** %6, align 8
  %11 = load %struct.Value*, %struct.Value** %5, align 8
  %12 = call i32 @extractInt(%struct.Value* noundef %11)
  switch i32 %12, label %16 [
    i32 0, label %13
  ]

13:                                               ; preds = %2
  %14 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %15 = bitcast %struct.Value_Bits8* %14 to %struct.Value*
  store %struct.Value* %15, %struct.Value** %6, align 8
  br label %19

16:                                               ; preds = %2
  %17 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 1)
  %18 = bitcast %struct.Value_Bits8* %17 to %struct.Value*
  store %struct.Value* %18, %struct.Value** %6, align 8
  br label %19

19:                                               ; preds = %16, %13
  %20 = load %struct.Value*, %struct.Value** %6, align 8
  store %struct.Value* %20, %struct.Value** %7, align 8
  %21 = load %struct.Value*, %struct.Value** %5, align 8
  call void @removeReference(%struct.Value* noundef %21)
  %22 = load %struct.Value*, %struct.Value** %7, align 8
  ret %struct.Value* %22
}

declare %struct.Value* @eq_Int64(%struct.Value* noundef, %struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__eq_eq_Eq_Char(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %8 = load %struct.Value*, %struct.Value** %3, align 8
  %9 = load %struct.Value*, %struct.Value** %4, align 8
  %10 = call %struct.Value* @eq_char(%struct.Value* noundef %8, %struct.Value* noundef %9)
  store %struct.Value* %10, %struct.Value** %5, align 8
  store %struct.Value* null, %struct.Value** %6, align 8
  %11 = load %struct.Value*, %struct.Value** %5, align 8
  %12 = call i32 @extractInt(%struct.Value* noundef %11)
  switch i32 %12, label %16 [
    i32 0, label %13
  ]

13:                                               ; preds = %2
  %14 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %15 = bitcast %struct.Value_Bits8* %14 to %struct.Value*
  store %struct.Value* %15, %struct.Value** %6, align 8
  br label %19

16:                                               ; preds = %2
  %17 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 1)
  %18 = bitcast %struct.Value_Bits8* %17 to %struct.Value*
  store %struct.Value* %18, %struct.Value** %6, align 8
  br label %19

19:                                               ; preds = %16, %13
  %20 = load %struct.Value*, %struct.Value** %6, align 8
  store %struct.Value* %20, %struct.Value** %7, align 8
  %21 = load %struct.Value*, %struct.Value** %5, align 8
  call void @removeReference(%struct.Value* noundef %21)
  %22 = load %struct.Value*, %struct.Value** %7, align 8
  ret %struct.Value* %22
}

declare %struct.Value* @eq_char(%struct.Value* noundef, %struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__eq_eq_Eq_Char_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_EqOrd__eq_eq_Eq_Char(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__lt_Ord_Integer(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %8 = load %struct.Value*, %struct.Value** %3, align 8
  %9 = load %struct.Value*, %struct.Value** %4, align 8
  %10 = call %struct.Value* @lt_Integer(%struct.Value* noundef %8, %struct.Value* noundef %9)
  store %struct.Value* %10, %struct.Value** %5, align 8
  store %struct.Value* null, %struct.Value** %6, align 8
  %11 = load %struct.Value*, %struct.Value** %5, align 8
  %12 = call i32 @extractInt(%struct.Value* noundef %11)
  switch i32 %12, label %16 [
    i32 0, label %13
  ]

13:                                               ; preds = %2
  %14 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %15 = bitcast %struct.Value_Bits8* %14 to %struct.Value*
  store %struct.Value* %15, %struct.Value** %6, align 8
  br label %19

16:                                               ; preds = %2
  %17 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 1)
  %18 = bitcast %struct.Value_Bits8* %17 to %struct.Value*
  store %struct.Value* %18, %struct.Value** %6, align 8
  br label %19

19:                                               ; preds = %16, %13
  %20 = load %struct.Value*, %struct.Value** %6, align 8
  store %struct.Value* %20, %struct.Value** %7, align 8
  %21 = load %struct.Value*, %struct.Value** %5, align 8
  call void @removeReference(%struct.Value* noundef %21)
  %22 = load %struct.Value*, %struct.Value** %7, align 8
  ret %struct.Value* %22
}

declare %struct.Value* @lt_Integer(%struct.Value* noundef, %struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__lt_Ord_Int(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %8 = load %struct.Value*, %struct.Value** %3, align 8
  %9 = load %struct.Value*, %struct.Value** %4, align 8
  %10 = call %struct.Value* @lt_Int64(%struct.Value* noundef %8, %struct.Value* noundef %9)
  store %struct.Value* %10, %struct.Value** %5, align 8
  store %struct.Value* null, %struct.Value** %6, align 8
  %11 = load %struct.Value*, %struct.Value** %5, align 8
  %12 = call i32 @extractInt(%struct.Value* noundef %11)
  switch i32 %12, label %16 [
    i32 0, label %13
  ]

13:                                               ; preds = %2
  %14 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %15 = bitcast %struct.Value_Bits8* %14 to %struct.Value*
  store %struct.Value* %15, %struct.Value** %6, align 8
  br label %19

16:                                               ; preds = %2
  %17 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 1)
  %18 = bitcast %struct.Value_Bits8* %17 to %struct.Value*
  store %struct.Value* %18, %struct.Value** %6, align 8
  br label %19

19:                                               ; preds = %16, %13
  %20 = load %struct.Value*, %struct.Value** %6, align 8
  store %struct.Value* %20, %struct.Value** %7, align 8
  %21 = load %struct.Value*, %struct.Value** %5, align 8
  call void @removeReference(%struct.Value* noundef %21)
  %22 = load %struct.Value*, %struct.Value** %7, align 8
  ret %struct.Value* %22
}

declare %struct.Value* @lt_Int64(%struct.Value* noundef, %struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__lt_eq_Ord_Int(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %8 = load %struct.Value*, %struct.Value** %3, align 8
  %9 = load %struct.Value*, %struct.Value** %4, align 8
  %10 = call %struct.Value* @lte_Int64(%struct.Value* noundef %8, %struct.Value* noundef %9)
  store %struct.Value* %10, %struct.Value** %5, align 8
  store %struct.Value* null, %struct.Value** %6, align 8
  %11 = load %struct.Value*, %struct.Value** %5, align 8
  %12 = call i32 @extractInt(%struct.Value* noundef %11)
  switch i32 %12, label %16 [
    i32 0, label %13
  ]

13:                                               ; preds = %2
  %14 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %15 = bitcast %struct.Value_Bits8* %14 to %struct.Value*
  store %struct.Value* %15, %struct.Value** %6, align 8
  br label %19

16:                                               ; preds = %2
  %17 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 1)
  %18 = bitcast %struct.Value_Bits8* %17 to %struct.Value*
  store %struct.Value* %18, %struct.Value** %6, align 8
  br label %19

19:                                               ; preds = %16, %13
  %20 = load %struct.Value*, %struct.Value** %6, align 8
  store %struct.Value* %20, %struct.Value** %7, align 8
  %21 = load %struct.Value*, %struct.Value** %5, align 8
  call void @removeReference(%struct.Value* noundef %21)
  %22 = load %struct.Value*, %struct.Value** %7, align 8
  ret %struct.Value* %22
}

declare %struct.Value* @lte_Int64(%struct.Value* noundef, %struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__lt_eq_Ord_Char(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %8 = load %struct.Value*, %struct.Value** %3, align 8
  %9 = load %struct.Value*, %struct.Value** %4, align 8
  %10 = call %struct.Value* @lte_char(%struct.Value* noundef %8, %struct.Value* noundef %9)
  store %struct.Value* %10, %struct.Value** %5, align 8
  store %struct.Value* null, %struct.Value** %6, align 8
  %11 = load %struct.Value*, %struct.Value** %5, align 8
  %12 = call i32 @extractInt(%struct.Value* noundef %11)
  switch i32 %12, label %16 [
    i32 0, label %13
  ]

13:                                               ; preds = %2
  %14 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %15 = bitcast %struct.Value_Bits8* %14 to %struct.Value*
  store %struct.Value* %15, %struct.Value** %6, align 8
  br label %19

16:                                               ; preds = %2
  %17 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 1)
  %18 = bitcast %struct.Value_Bits8* %17 to %struct.Value*
  store %struct.Value* %18, %struct.Value** %6, align 8
  br label %19

19:                                               ; preds = %16, %13
  %20 = load %struct.Value*, %struct.Value** %6, align 8
  store %struct.Value* %20, %struct.Value** %7, align 8
  %21 = load %struct.Value*, %struct.Value** %5, align 8
  call void @removeReference(%struct.Value* noundef %21)
  %22 = load %struct.Value*, %struct.Value** %7, align 8
  ret %struct.Value* %22
}

declare %struct.Value* @lte_char(%struct.Value* noundef, %struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__slash_eq_Eq_Ordering(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %11 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %11, %struct.Value_Arglist** %5, align 8
  %12 = load %struct.Value*, %struct.Value** %3, align 8
  %13 = call %struct.Value* @newReference(%struct.Value* noundef %12)
  %14 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %15 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %14, i32 0, i32 3
  %16 = load %struct.Value**, %struct.Value*** %15, align 8
  %17 = getelementptr inbounds %struct.Value*, %struct.Value** %16, i64 0
  store %struct.Value* %13, %struct.Value** %17, align 8
  %18 = load %struct.Value*, %struct.Value** %4, align 8
  %19 = call %struct.Value* @newReference(%struct.Value* noundef %18)
  %20 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %21 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %20, i32 0, i32 3
  %22 = load %struct.Value**, %struct.Value*** %21, align 8
  %23 = getelementptr inbounds %struct.Value*, %struct.Value** %22, i64 1
  store %struct.Value* %19, %struct.Value** %23, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__eq_eq_Eq_Ordering_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %24 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %25 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %26 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %24, %struct.Value_Arglist* noundef %25)
  %27 = bitcast %struct.Value_Closure* %26 to %struct.Value*
  store %struct.Value* %27, %struct.Value** %7, align 8
  %28 = load %struct.Value*, %struct.Value** %7, align 8
  %29 = call %struct.Value* @trampoline(%struct.Value* noundef %28)
  store %struct.Value* %29, %struct.Value** %8, align 8
  store %struct.Value* null, %struct.Value** %9, align 8
  %30 = load %struct.Value*, %struct.Value** %8, align 8
  %31 = call i32 @extractInt(%struct.Value* noundef %30)
  switch i32 %31, label %38 [
    i32 1, label %32
    i32 0, label %35
  ]

32:                                               ; preds = %2
  %33 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %34 = bitcast %struct.Value_Bits8* %33 to %struct.Value*
  store %struct.Value* %34, %struct.Value** %9, align 8
  br label %38

35:                                               ; preds = %2
  %36 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 1)
  %37 = bitcast %struct.Value_Bits8* %36 to %struct.Value*
  store %struct.Value* %37, %struct.Value** %9, align 8
  br label %38

38:                                               ; preds = %2, %35, %32
  %39 = load %struct.Value*, %struct.Value** %9, align 8
  store %struct.Value* %39, %struct.Value** %10, align 8
  %40 = load %struct.Value*, %struct.Value** %8, align 8
  call void @removeReference(%struct.Value* noundef %40)
  %41 = load %struct.Value*, %struct.Value** %10, align 8
  ret %struct.Value* %41
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__slash_eq_Eq_Ordering_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_EqOrd__slash_eq_Eq_Ordering(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd__slash_eq_Eq_Int(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %11 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %11, %struct.Value_Arglist** %5, align 8
  %12 = load %struct.Value*, %struct.Value** %3, align 8
  %13 = call %struct.Value* @newReference(%struct.Value* noundef %12)
  %14 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %15 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %14, i32 0, i32 3
  %16 = load %struct.Value**, %struct.Value*** %15, align 8
  %17 = getelementptr inbounds %struct.Value*, %struct.Value** %16, i64 0
  store %struct.Value* %13, %struct.Value** %17, align 8
  %18 = load %struct.Value*, %struct.Value** %4, align 8
  %19 = call %struct.Value* @newReference(%struct.Value* noundef %18)
  %20 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %21 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %20, i32 0, i32 3
  %22 = load %struct.Value**, %struct.Value*** %21, align 8
  %23 = getelementptr inbounds %struct.Value*, %struct.Value** %22, i64 1
  store %struct.Value* %19, %struct.Value** %23, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__eq_eq_Eq_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %24 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %25 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %26 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %24, %struct.Value_Arglist* noundef %25)
  %27 = bitcast %struct.Value_Closure* %26 to %struct.Value*
  store %struct.Value* %27, %struct.Value** %7, align 8
  %28 = load %struct.Value*, %struct.Value** %7, align 8
  %29 = call %struct.Value* @trampoline(%struct.Value* noundef %28)
  store %struct.Value* %29, %struct.Value** %8, align 8
  store %struct.Value* null, %struct.Value** %9, align 8
  %30 = load %struct.Value*, %struct.Value** %8, align 8
  %31 = call i32 @extractInt(%struct.Value* noundef %30)
  switch i32 %31, label %38 [
    i32 1, label %32
    i32 0, label %35
  ]

32:                                               ; preds = %2
  %33 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %34 = bitcast %struct.Value_Bits8* %33 to %struct.Value*
  store %struct.Value* %34, %struct.Value** %9, align 8
  br label %38

35:                                               ; preds = %2
  %36 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 1)
  %37 = bitcast %struct.Value_Bits8* %36 to %struct.Value*
  store %struct.Value* %37, %struct.Value** %9, align 8
  br label %38

38:                                               ; preds = %2, %35, %32
  %39 = load %struct.Value*, %struct.Value** %9, align 8
  store %struct.Value* %39, %struct.Value** %10, align 8
  %40 = load %struct.Value*, %struct.Value** %8, align 8
  call void @removeReference(%struct.Value* noundef %40)
  %41 = load %struct.Value*, %struct.Value** %10, align 8
  ret %struct.Value* %41
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd_compareInteger(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %9 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %9, %struct.Value_Arglist** %5, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  %11 = call %struct.Value* @newReference(%struct.Value* noundef %10)
  %12 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %13 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %12, i32 0, i32 3
  %14 = load %struct.Value**, %struct.Value*** %13, align 8
  %15 = getelementptr inbounds %struct.Value*, %struct.Value** %14, i64 0
  store %struct.Value* %11, %struct.Value** %15, align 8
  %16 = load %struct.Value*, %struct.Value** %4, align 8
  %17 = call %struct.Value* @newReference(%struct.Value* noundef %16)
  %18 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %19 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %18, i32 0, i32 3
  %20 = load %struct.Value**, %struct.Value*** %19, align 8
  %21 = getelementptr inbounds %struct.Value*, %struct.Value** %20, i64 1
  store %struct.Value* %17, %struct.Value** %21, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd_compare_Ord_Integer_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %22 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %23 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %24 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %22, %struct.Value_Arglist* noundef %23)
  %25 = bitcast %struct.Value_Closure* %24 to %struct.Value*
  store %struct.Value* %25, %struct.Value** %7, align 8
  %26 = load %struct.Value*, %struct.Value** %7, align 8
  store %struct.Value* %26, %struct.Value** %8, align 8
  %27 = load %struct.Value*, %struct.Value** %8, align 8
  ret %struct.Value* %27
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_EqOrd_compareInteger_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_EqOrd_compareInteger(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_n___parenOpen3221_comma_12652_parenClose_show_tick(%struct.Value* noundef %0, %struct.Value* noundef %1, %struct.Value* noundef %2, %struct.Value* noundef %3) #0 {
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.AConAlt*, align 8
  %11 = alloca %struct.Value*, align 8
  %12 = alloca %struct.Value*, align 8
  %13 = alloca %struct.Value*, align 8
  %14 = alloca %struct.AConAlt*, align 8
  %15 = alloca %struct.Value*, align 8
  %16 = alloca %struct.AConAlt*, align 8
  %17 = alloca %struct.Value*, align 8
  %18 = alloca %struct.Value*, align 8
  %19 = alloca %struct.Value*, align 8
  %20 = alloca %struct.Value*, align 8
  %21 = alloca %struct.AConAlt*, align 8
  %22 = alloca %struct.Value*, align 8
  %23 = alloca %struct.Value*, align 8
  %24 = alloca %struct.Value*, align 8
  %25 = alloca %struct.Value*, align 8
  %26 = alloca %struct.Value*, align 8
  %27 = alloca %struct.Value*, align 8
  %28 = alloca %struct.Value_Arglist*, align 8
  %29 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %30 = alloca %struct.Value*, align 8
  %31 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %5, align 8
  store %struct.Value* %1, %struct.Value** %6, align 8
  store %struct.Value* %2, %struct.Value** %7, align 8
  store %struct.Value* %3, %struct.Value** %8, align 8
  store %struct.Value* null, %struct.Value** %9, align 8
  %32 = call %struct.AConAlt* @newConstructorField(i32 noundef 2)
  store %struct.AConAlt* %32, %struct.AConAlt** %10, align 8
  %33 = load %struct.AConAlt*, %struct.AConAlt** %10, align 8
  %34 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %33, i64 0
  %35 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %34, i32 0, i32 1
  store i32 0, i32* %35, align 8
  %36 = load %struct.AConAlt*, %struct.AConAlt** %10, align 8
  %37 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %36, i64 0
  %38 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %37, i32 0, i32 0
  store i8* null, i8** %38, align 8
  %39 = load %struct.AConAlt*, %struct.AConAlt** %10, align 8
  %40 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %39, i64 1
  %41 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %40, i32 0, i32 1
  store i32 1, i32* %41, align 8
  %42 = load %struct.AConAlt*, %struct.AConAlt** %10, align 8
  %43 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %42, i64 1
  %44 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %43, i32 0, i32 0
  store i8* null, i8** %44, align 8
  %45 = load %struct.Value*, %struct.Value** %8, align 8
  %46 = load %struct.AConAlt*, %struct.AConAlt** %10, align 8
  %47 = call i32 @compareConstructors(%struct.Value* noundef %45, %struct.AConAlt* noundef %46, i32 noundef 2)
  switch i32 %47, label %186 [
    i32 0, label %48
    i32 1, label %51
  ]

48:                                               ; preds = %4
  %49 = load %struct.Value*, %struct.Value** %7, align 8
  %50 = call %struct.Value* @newReference(%struct.Value* noundef %49)
  store %struct.Value* %50, %struct.Value** %9, align 8
  br label %186

51:                                               ; preds = %4
  %52 = load %struct.Value*, %struct.Value** %8, align 8
  %53 = bitcast %struct.Value* %52 to %struct.Value_Constructor*
  %54 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %53, i32 0, i32 4
  %55 = load %struct.Value**, %struct.Value*** %54, align 8
  %56 = getelementptr inbounds %struct.Value*, %struct.Value** %55, i64 0
  %57 = load %struct.Value*, %struct.Value** %56, align 8
  store %struct.Value* %57, %struct.Value** %11, align 8
  %58 = load %struct.Value*, %struct.Value** %8, align 8
  %59 = bitcast %struct.Value* %58 to %struct.Value_Constructor*
  %60 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %59, i32 0, i32 4
  %61 = load %struct.Value**, %struct.Value*** %60, align 8
  %62 = getelementptr inbounds %struct.Value*, %struct.Value** %61, i64 1
  %63 = load %struct.Value*, %struct.Value** %62, align 8
  store %struct.Value* %63, %struct.Value** %12, align 8
  store %struct.Value* null, %struct.Value** %13, align 8
  %64 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %64, %struct.AConAlt** %14, align 8
  %65 = load %struct.AConAlt*, %struct.AConAlt** %14, align 8
  %66 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %65, i64 0
  %67 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %66, i32 0, i32 1
  store i32 0, i32* %67, align 8
  %68 = load %struct.AConAlt*, %struct.AConAlt** %14, align 8
  %69 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %68, i64 0
  %70 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %69, i32 0, i32 0
  store i8* null, i8** %70, align 8
  %71 = load %struct.Value*, %struct.Value** %12, align 8
  %72 = load %struct.AConAlt*, %struct.AConAlt** %14, align 8
  %73 = call i32 @compareConstructors(%struct.Value* noundef %71, %struct.AConAlt* noundef %72, i32 noundef 1)
  switch i32 %73, label %109 [
    i32 0, label %74
  ]

74:                                               ; preds = %51
  store %struct.Value* null, %struct.Value** %15, align 8
  %75 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %75, %struct.AConAlt** %16, align 8
  %76 = load %struct.AConAlt*, %struct.AConAlt** %16, align 8
  %77 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %76, i64 0
  %78 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %77, i32 0, i32 1
  store i32 0, i32* %78, align 8
  %79 = load %struct.AConAlt*, %struct.AConAlt** %16, align 8
  %80 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %79, i64 0
  %81 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %80, i32 0, i32 0
  store i8* null, i8** %81, align 8
  %82 = load %struct.Value*, %struct.Value** %5, align 8
  %83 = load %struct.AConAlt*, %struct.AConAlt** %16, align 8
  %84 = call i32 @compareConstructors(%struct.Value* noundef %82, %struct.AConAlt* noundef %83, i32 noundef 1)
  switch i32 %84, label %101 [
    i32 0, label %85
  ]

85:                                               ; preds = %74
  %86 = load %struct.Value*, %struct.Value** %5, align 8
  %87 = bitcast %struct.Value* %86 to %struct.Value_Constructor*
  %88 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %87, i32 0, i32 4
  %89 = load %struct.Value**, %struct.Value*** %88, align 8
  %90 = getelementptr inbounds %struct.Value*, %struct.Value** %89, i64 0
  %91 = load %struct.Value*, %struct.Value** %90, align 8
  store %struct.Value* %91, %struct.Value** %17, align 8
  %92 = load %struct.Value*, %struct.Value** %5, align 8
  %93 = bitcast %struct.Value* %92 to %struct.Value_Constructor*
  %94 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %93, i32 0, i32 4
  %95 = load %struct.Value**, %struct.Value*** %94, align 8
  %96 = getelementptr inbounds %struct.Value*, %struct.Value** %95, i64 1
  %97 = load %struct.Value*, %struct.Value** %96, align 8
  store %struct.Value* %97, %struct.Value** %18, align 8
  %98 = load %struct.Value*, %struct.Value** %17, align 8
  %99 = load %struct.Value*, %struct.Value** %11, align 8
  %100 = call %struct.Value* @apply_closure(%struct.Value* noundef %98, %struct.Value* noundef %99)
  store %struct.Value* %100, %struct.Value** %15, align 8
  br label %101

101:                                              ; preds = %74, %85
  %102 = load %struct.AConAlt*, %struct.AConAlt** %16, align 8
  %103 = bitcast %struct.AConAlt* %102 to i8*
  call void @free(i8* noundef %103)
  %104 = load %struct.Value*, %struct.Value** %15, align 8
  store %struct.Value* %104, %struct.Value** %19, align 8
  %105 = load %struct.Value*, %struct.Value** %7, align 8
  %106 = load %struct.Value*, %struct.Value** %19, align 8
  %107 = call %struct.Value* @strAppend(%struct.Value* noundef %105, %struct.Value* noundef %106)
  store %struct.Value* %107, %struct.Value** %13, align 8
  %108 = load %struct.Value*, %struct.Value** %19, align 8
  call void @removeReference(%struct.Value* noundef %108)
  br label %182

109:                                              ; preds = %51
  store %struct.Value* null, %struct.Value** %20, align 8
  %110 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %110, %struct.AConAlt** %21, align 8
  %111 = load %struct.AConAlt*, %struct.AConAlt** %21, align 8
  %112 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %111, i64 0
  %113 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %112, i32 0, i32 1
  store i32 0, i32* %113, align 8
  %114 = load %struct.AConAlt*, %struct.AConAlt** %21, align 8
  %115 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %114, i64 0
  %116 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %115, i32 0, i32 0
  store i8* null, i8** %116, align 8
  %117 = load %struct.Value*, %struct.Value** %5, align 8
  %118 = load %struct.AConAlt*, %struct.AConAlt** %21, align 8
  %119 = call i32 @compareConstructors(%struct.Value* noundef %117, %struct.AConAlt* noundef %118, i32 noundef 1)
  switch i32 %119, label %136 [
    i32 0, label %120
  ]

120:                                              ; preds = %109
  %121 = load %struct.Value*, %struct.Value** %5, align 8
  %122 = bitcast %struct.Value* %121 to %struct.Value_Constructor*
  %123 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %122, i32 0, i32 4
  %124 = load %struct.Value**, %struct.Value*** %123, align 8
  %125 = getelementptr inbounds %struct.Value*, %struct.Value** %124, i64 0
  %126 = load %struct.Value*, %struct.Value** %125, align 8
  store %struct.Value* %126, %struct.Value** %22, align 8
  %127 = load %struct.Value*, %struct.Value** %5, align 8
  %128 = bitcast %struct.Value* %127 to %struct.Value_Constructor*
  %129 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %128, i32 0, i32 4
  %130 = load %struct.Value**, %struct.Value*** %129, align 8
  %131 = getelementptr inbounds %struct.Value*, %struct.Value** %130, i64 1
  %132 = load %struct.Value*, %struct.Value** %131, align 8
  store %struct.Value* %132, %struct.Value** %23, align 8
  %133 = load %struct.Value*, %struct.Value** %22, align 8
  %134 = load %struct.Value*, %struct.Value** %11, align 8
  %135 = call %struct.Value* @apply_closure(%struct.Value* noundef %133, %struct.Value* noundef %134)
  store %struct.Value* %135, %struct.Value** %20, align 8
  br label %136

136:                                              ; preds = %109, %120
  %137 = load %struct.AConAlt*, %struct.AConAlt** %21, align 8
  %138 = bitcast %struct.AConAlt* %137 to i8*
  call void @free(i8* noundef %138)
  %139 = load %struct.Value*, %struct.Value** %20, align 8
  store %struct.Value* %139, %struct.Value** %24, align 8
  %140 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0))
  %141 = bitcast %struct.Value_String* %140 to %struct.Value*
  store %struct.Value* %141, %struct.Value** %25, align 8
  %142 = load %struct.Value*, %struct.Value** %24, align 8
  %143 = load %struct.Value*, %struct.Value** %25, align 8
  %144 = call %struct.Value* @strAppend(%struct.Value* noundef %142, %struct.Value* noundef %143)
  store %struct.Value* %144, %struct.Value** %26, align 8
  %145 = load %struct.Value*, %struct.Value** %7, align 8
  %146 = load %struct.Value*, %struct.Value** %26, align 8
  %147 = call %struct.Value* @strAppend(%struct.Value* noundef %145, %struct.Value* noundef %146)
  store %struct.Value* %147, %struct.Value** %27, align 8
  %148 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 4)
  store %struct.Value_Arglist* %148, %struct.Value_Arglist** %28, align 8
  %149 = load %struct.Value*, %struct.Value** %5, align 8
  %150 = call %struct.Value* @newReference(%struct.Value* noundef %149)
  %151 = load %struct.Value_Arglist*, %struct.Value_Arglist** %28, align 8
  %152 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %151, i32 0, i32 3
  %153 = load %struct.Value**, %struct.Value*** %152, align 8
  %154 = getelementptr inbounds %struct.Value*, %struct.Value** %153, i64 0
  store %struct.Value* %150, %struct.Value** %154, align 8
  %155 = load %struct.Value*, %struct.Value** %6, align 8
  %156 = call %struct.Value* @newReference(%struct.Value* noundef %155)
  %157 = load %struct.Value_Arglist*, %struct.Value_Arglist** %28, align 8
  %158 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %157, i32 0, i32 3
  %159 = load %struct.Value**, %struct.Value*** %158, align 8
  %160 = getelementptr inbounds %struct.Value*, %struct.Value** %159, i64 1
  store %struct.Value* %156, %struct.Value** %160, align 8
  %161 = load %struct.Value*, %struct.Value** %27, align 8
  %162 = call %struct.Value* @newReference(%struct.Value* noundef %161)
  %163 = load %struct.Value_Arglist*, %struct.Value_Arglist** %28, align 8
  %164 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %163, i32 0, i32 3
  %165 = load %struct.Value**, %struct.Value*** %164, align 8
  %166 = getelementptr inbounds %struct.Value*, %struct.Value** %165, i64 2
  store %struct.Value* %162, %struct.Value** %166, align 8
  %167 = load %struct.Value*, %struct.Value** %12, align 8
  %168 = call %struct.Value* @newReference(%struct.Value* noundef %167)
  %169 = load %struct.Value_Arglist*, %struct.Value_Arglist** %28, align 8
  %170 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %169, i32 0, i32 3
  %171 = load %struct.Value**, %struct.Value*** %170, align 8
  %172 = getelementptr inbounds %struct.Value*, %struct.Value** %171, i64 3
  store %struct.Value* %168, %struct.Value** %172, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_n___parenOpen3221_comma_12652_parenClose_show_tick_arglist, %struct.Value* (%struct.Value_Arglist*)** %29, align 8
  %173 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %29, align 8
  %174 = load %struct.Value_Arglist*, %struct.Value_Arglist** %28, align 8
  %175 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %173, %struct.Value_Arglist* noundef %174)
  %176 = bitcast %struct.Value_Closure* %175 to %struct.Value*
  store %struct.Value* %176, %struct.Value** %30, align 8
  %177 = load %struct.Value*, %struct.Value** %30, align 8
  store %struct.Value* %177, %struct.Value** %13, align 8
  %178 = load %struct.Value*, %struct.Value** %27, align 8
  call void @removeReference(%struct.Value* noundef %178)
  %179 = load %struct.Value*, %struct.Value** %26, align 8
  call void @removeReference(%struct.Value* noundef %179)
  %180 = load %struct.Value*, %struct.Value** %25, align 8
  call void @removeReference(%struct.Value* noundef %180)
  %181 = load %struct.Value*, %struct.Value** %24, align 8
  call void @removeReference(%struct.Value* noundef %181)
  br label %182

182:                                              ; preds = %136, %101
  %183 = load %struct.AConAlt*, %struct.AConAlt** %14, align 8
  %184 = bitcast %struct.AConAlt* %183 to i8*
  call void @free(i8* noundef %184)
  %185 = load %struct.Value*, %struct.Value** %13, align 8
  store %struct.Value* %185, %struct.Value** %9, align 8
  br label %186

186:                                              ; preds = %4, %182, %48
  %187 = load %struct.AConAlt*, %struct.AConAlt** %10, align 8
  %188 = bitcast %struct.AConAlt* %187 to i8*
  call void @free(i8* noundef %188)
  %189 = load %struct.Value*, %struct.Value** %9, align 8
  store %struct.Value* %189, %struct.Value** %31, align 8
  %190 = load %struct.Value*, %struct.Value** %31, align 8
  ret %struct.Value* %190
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_n___parenOpen3221_comma_12652_parenClose_show_tick_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %14 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %13, i32 0, i32 3
  %15 = load %struct.Value**, %struct.Value*** %14, align 8
  %16 = getelementptr inbounds %struct.Value*, %struct.Value** %15, i64 2
  %17 = load %struct.Value*, %struct.Value** %16, align 8
  %18 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %19 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %18, i32 0, i32 3
  %20 = load %struct.Value**, %struct.Value*** %19, align 8
  %21 = getelementptr inbounds %struct.Value*, %struct.Value** %20, i64 3
  %22 = load %struct.Value*, %struct.Value** %21, align 8
  %23 = call %struct.Value* @Prelude_Show_n___parenOpen3221_comma_12652_parenClose_show_tick(%struct.Value* noundef %7, %struct.Value* noundef %12, %struct.Value* noundef %17, %struct.Value* noundef %22)
  ret %struct.Value* %23
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_n___parenOpen2439_comma_11931_parenClose_asciiTab(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value*, align 8
  %11 = alloca %struct.Value*, align 8
  %12 = alloca %struct.Value*, align 8
  %13 = alloca %struct.Value*, align 8
  %14 = alloca %struct.Value*, align 8
  %15 = alloca %struct.Value*, align 8
  %16 = alloca %struct.Value*, align 8
  %17 = alloca %struct.Value*, align 8
  %18 = alloca %struct.Value*, align 8
  %19 = alloca %struct.Value*, align 8
  %20 = alloca %struct.Value*, align 8
  %21 = alloca %struct.Value*, align 8
  %22 = alloca %struct.Value*, align 8
  %23 = alloca %struct.Value*, align 8
  %24 = alloca %struct.Value*, align 8
  %25 = alloca %struct.Value*, align 8
  %26 = alloca %struct.Value*, align 8
  %27 = alloca %struct.Value*, align 8
  %28 = alloca %struct.Value*, align 8
  %29 = alloca %struct.Value*, align 8
  %30 = alloca %struct.Value*, align 8
  %31 = alloca %struct.Value*, align 8
  %32 = alloca %struct.Value*, align 8
  %33 = alloca %struct.Value*, align 8
  %34 = alloca %struct.Value*, align 8
  %35 = alloca %struct.Value_Constructor*, align 8
  %36 = alloca %struct.Value*, align 8
  %37 = alloca %struct.Value_Constructor*, align 8
  %38 = alloca %struct.Value*, align 8
  %39 = alloca %struct.Value_Constructor*, align 8
  %40 = alloca %struct.Value*, align 8
  %41 = alloca %struct.Value_Constructor*, align 8
  %42 = alloca %struct.Value*, align 8
  %43 = alloca %struct.Value_Constructor*, align 8
  %44 = alloca %struct.Value*, align 8
  %45 = alloca %struct.Value_Constructor*, align 8
  %46 = alloca %struct.Value*, align 8
  %47 = alloca %struct.Value_Constructor*, align 8
  %48 = alloca %struct.Value*, align 8
  %49 = alloca %struct.Value_Constructor*, align 8
  %50 = alloca %struct.Value*, align 8
  %51 = alloca %struct.Value_Constructor*, align 8
  %52 = alloca %struct.Value*, align 8
  %53 = alloca %struct.Value_Constructor*, align 8
  %54 = alloca %struct.Value*, align 8
  %55 = alloca %struct.Value_Constructor*, align 8
  %56 = alloca %struct.Value*, align 8
  %57 = alloca %struct.Value_Constructor*, align 8
  %58 = alloca %struct.Value*, align 8
  %59 = alloca %struct.Value_Constructor*, align 8
  %60 = alloca %struct.Value*, align 8
  %61 = alloca %struct.Value_Constructor*, align 8
  %62 = alloca %struct.Value*, align 8
  %63 = alloca %struct.Value_Constructor*, align 8
  %64 = alloca %struct.Value*, align 8
  %65 = alloca %struct.Value_Constructor*, align 8
  %66 = alloca %struct.Value*, align 8
  %67 = alloca %struct.Value_Constructor*, align 8
  %68 = alloca %struct.Value*, align 8
  %69 = alloca %struct.Value_Constructor*, align 8
  %70 = alloca %struct.Value*, align 8
  %71 = alloca %struct.Value_Constructor*, align 8
  %72 = alloca %struct.Value*, align 8
  %73 = alloca %struct.Value_Constructor*, align 8
  %74 = alloca %struct.Value*, align 8
  %75 = alloca %struct.Value_Constructor*, align 8
  %76 = alloca %struct.Value*, align 8
  %77 = alloca %struct.Value_Constructor*, align 8
  %78 = alloca %struct.Value*, align 8
  %79 = alloca %struct.Value_Constructor*, align 8
  %80 = alloca %struct.Value*, align 8
  %81 = alloca %struct.Value_Constructor*, align 8
  %82 = alloca %struct.Value*, align 8
  %83 = alloca %struct.Value_Constructor*, align 8
  %84 = alloca %struct.Value*, align 8
  %85 = alloca %struct.Value_Constructor*, align 8
  %86 = alloca %struct.Value*, align 8
  %87 = alloca %struct.Value_Constructor*, align 8
  %88 = alloca %struct.Value*, align 8
  %89 = alloca %struct.Value_Constructor*, align 8
  %90 = alloca %struct.Value*, align 8
  %91 = alloca %struct.Value_Constructor*, align 8
  %92 = alloca %struct.Value*, align 8
  %93 = alloca %struct.Value_Constructor*, align 8
  %94 = alloca %struct.Value*, align 8
  %95 = alloca %struct.Value_Constructor*, align 8
  %96 = alloca %struct.Value*, align 8
  %97 = alloca %struct.Value_Constructor*, align 8
  %98 = alloca %struct.Value*, align 8
  %99 = alloca %struct.Value_Constructor*, align 8
  %100 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %101 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0))
  %102 = bitcast %struct.Value_String* %101 to %struct.Value*
  store %struct.Value* %102, %struct.Value** %3, align 8
  %103 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i64 0, i64 0))
  %104 = bitcast %struct.Value_String* %103 to %struct.Value*
  store %struct.Value* %104, %struct.Value** %4, align 8
  %105 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0))
  %106 = bitcast %struct.Value_String* %105 to %struct.Value*
  store %struct.Value* %106, %struct.Value** %5, align 8
  %107 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0))
  %108 = bitcast %struct.Value_String* %107 to %struct.Value*
  store %struct.Value* %108, %struct.Value** %6, align 8
  %109 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0))
  %110 = bitcast %struct.Value_String* %109 to %struct.Value*
  store %struct.Value* %110, %struct.Value** %7, align 8
  %111 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0))
  %112 = bitcast %struct.Value_String* %111 to %struct.Value*
  store %struct.Value* %112, %struct.Value** %8, align 8
  %113 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i64 0, i64 0))
  %114 = bitcast %struct.Value_String* %113 to %struct.Value*
  store %struct.Value* %114, %struct.Value** %9, align 8
  %115 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0))
  %116 = bitcast %struct.Value_String* %115 to %struct.Value*
  store %struct.Value* %116, %struct.Value** %10, align 8
  %117 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0))
  %118 = bitcast %struct.Value_String* %117 to %struct.Value*
  store %struct.Value* %118, %struct.Value** %11, align 8
  %119 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0))
  %120 = bitcast %struct.Value_String* %119 to %struct.Value*
  store %struct.Value* %120, %struct.Value** %12, align 8
  %121 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0))
  %122 = bitcast %struct.Value_String* %121 to %struct.Value*
  store %struct.Value* %122, %struct.Value** %13, align 8
  %123 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0))
  %124 = bitcast %struct.Value_String* %123 to %struct.Value*
  store %struct.Value* %124, %struct.Value** %14, align 8
  %125 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0))
  %126 = bitcast %struct.Value_String* %125 to %struct.Value*
  store %struct.Value* %126, %struct.Value** %15, align 8
  %127 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i64 0, i64 0))
  %128 = bitcast %struct.Value_String* %127 to %struct.Value*
  store %struct.Value* %128, %struct.Value** %16, align 8
  %129 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0))
  %130 = bitcast %struct.Value_String* %129 to %struct.Value*
  store %struct.Value* %130, %struct.Value** %17, align 8
  %131 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0))
  %132 = bitcast %struct.Value_String* %131 to %struct.Value*
  store %struct.Value* %132, %struct.Value** %18, align 8
  %133 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0))
  %134 = bitcast %struct.Value_String* %133 to %struct.Value*
  store %struct.Value* %134, %struct.Value** %19, align 8
  %135 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0))
  %136 = bitcast %struct.Value_String* %135 to %struct.Value*
  store %struct.Value* %136, %struct.Value** %20, align 8
  %137 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0))
  %138 = bitcast %struct.Value_String* %137 to %struct.Value*
  store %struct.Value* %138, %struct.Value** %21, align 8
  %139 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i64 0, i64 0))
  %140 = bitcast %struct.Value_String* %139 to %struct.Value*
  store %struct.Value* %140, %struct.Value** %22, align 8
  %141 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i64 0, i64 0))
  %142 = bitcast %struct.Value_String* %141 to %struct.Value*
  store %struct.Value* %142, %struct.Value** %23, align 8
  %143 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i64 0, i64 0))
  %144 = bitcast %struct.Value_String* %143 to %struct.Value*
  store %struct.Value* %144, %struct.Value** %24, align 8
  %145 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0))
  %146 = bitcast %struct.Value_String* %145 to %struct.Value*
  store %struct.Value* %146, %struct.Value** %25, align 8
  %147 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0))
  %148 = bitcast %struct.Value_String* %147 to %struct.Value*
  store %struct.Value* %148, %struct.Value** %26, align 8
  %149 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0))
  %150 = bitcast %struct.Value_String* %149 to %struct.Value*
  store %struct.Value* %150, %struct.Value** %27, align 8
  %151 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i64 0, i64 0))
  %152 = bitcast %struct.Value_String* %151 to %struct.Value*
  store %struct.Value* %152, %struct.Value** %28, align 8
  %153 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i64 0, i64 0))
  %154 = bitcast %struct.Value_String* %153 to %struct.Value*
  store %struct.Value* %154, %struct.Value** %29, align 8
  %155 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0))
  %156 = bitcast %struct.Value_String* %155 to %struct.Value*
  store %struct.Value* %156, %struct.Value** %30, align 8
  %157 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i64 0, i64 0))
  %158 = bitcast %struct.Value_String* %157 to %struct.Value*
  store %struct.Value* %158, %struct.Value** %31, align 8
  %159 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i64 0, i64 0))
  %160 = bitcast %struct.Value_String* %159 to %struct.Value*
  store %struct.Value* %160, %struct.Value** %32, align 8
  %161 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i64 0, i64 0))
  %162 = bitcast %struct.Value_String* %161 to %struct.Value*
  store %struct.Value* %162, %struct.Value** %33, align 8
  %163 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.50, i64 0, i64 0))
  %164 = bitcast %struct.Value_String* %163 to %struct.Value*
  store %struct.Value* %164, %struct.Value** %34, align 8
  %165 = call %struct.Value_Constructor* @newConstructor(i32 noundef 0, i32 noundef 0, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0))
  store %struct.Value_Constructor* %165, %struct.Value_Constructor** %35, align 8
  %166 = load %struct.Value_Constructor*, %struct.Value_Constructor** %35, align 8
  %167 = bitcast %struct.Value_Constructor* %166 to %struct.Value*
  store %struct.Value* %167, %struct.Value** %36, align 8
  %168 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %168, %struct.Value_Constructor** %37, align 8
  %169 = load %struct.Value*, %struct.Value** %34, align 8
  %170 = call %struct.Value* @newReference(%struct.Value* noundef %169)
  %171 = load %struct.Value_Constructor*, %struct.Value_Constructor** %37, align 8
  %172 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %171, i32 0, i32 4
  %173 = load %struct.Value**, %struct.Value*** %172, align 8
  %174 = getelementptr inbounds %struct.Value*, %struct.Value** %173, i64 0
  store %struct.Value* %170, %struct.Value** %174, align 8
  %175 = load %struct.Value*, %struct.Value** %36, align 8
  %176 = call %struct.Value* @newReference(%struct.Value* noundef %175)
  %177 = load %struct.Value_Constructor*, %struct.Value_Constructor** %37, align 8
  %178 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %177, i32 0, i32 4
  %179 = load %struct.Value**, %struct.Value*** %178, align 8
  %180 = getelementptr inbounds %struct.Value*, %struct.Value** %179, i64 1
  store %struct.Value* %176, %struct.Value** %180, align 8
  %181 = load %struct.Value_Constructor*, %struct.Value_Constructor** %37, align 8
  %182 = bitcast %struct.Value_Constructor* %181 to %struct.Value*
  store %struct.Value* %182, %struct.Value** %38, align 8
  %183 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %183, %struct.Value_Constructor** %39, align 8
  %184 = load %struct.Value*, %struct.Value** %33, align 8
  %185 = call %struct.Value* @newReference(%struct.Value* noundef %184)
  %186 = load %struct.Value_Constructor*, %struct.Value_Constructor** %39, align 8
  %187 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %186, i32 0, i32 4
  %188 = load %struct.Value**, %struct.Value*** %187, align 8
  %189 = getelementptr inbounds %struct.Value*, %struct.Value** %188, i64 0
  store %struct.Value* %185, %struct.Value** %189, align 8
  %190 = load %struct.Value*, %struct.Value** %38, align 8
  %191 = call %struct.Value* @newReference(%struct.Value* noundef %190)
  %192 = load %struct.Value_Constructor*, %struct.Value_Constructor** %39, align 8
  %193 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %192, i32 0, i32 4
  %194 = load %struct.Value**, %struct.Value*** %193, align 8
  %195 = getelementptr inbounds %struct.Value*, %struct.Value** %194, i64 1
  store %struct.Value* %191, %struct.Value** %195, align 8
  %196 = load %struct.Value_Constructor*, %struct.Value_Constructor** %39, align 8
  %197 = bitcast %struct.Value_Constructor* %196 to %struct.Value*
  store %struct.Value* %197, %struct.Value** %40, align 8
  %198 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %198, %struct.Value_Constructor** %41, align 8
  %199 = load %struct.Value*, %struct.Value** %32, align 8
  %200 = call %struct.Value* @newReference(%struct.Value* noundef %199)
  %201 = load %struct.Value_Constructor*, %struct.Value_Constructor** %41, align 8
  %202 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %201, i32 0, i32 4
  %203 = load %struct.Value**, %struct.Value*** %202, align 8
  %204 = getelementptr inbounds %struct.Value*, %struct.Value** %203, i64 0
  store %struct.Value* %200, %struct.Value** %204, align 8
  %205 = load %struct.Value*, %struct.Value** %40, align 8
  %206 = call %struct.Value* @newReference(%struct.Value* noundef %205)
  %207 = load %struct.Value_Constructor*, %struct.Value_Constructor** %41, align 8
  %208 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %207, i32 0, i32 4
  %209 = load %struct.Value**, %struct.Value*** %208, align 8
  %210 = getelementptr inbounds %struct.Value*, %struct.Value** %209, i64 1
  store %struct.Value* %206, %struct.Value** %210, align 8
  %211 = load %struct.Value_Constructor*, %struct.Value_Constructor** %41, align 8
  %212 = bitcast %struct.Value_Constructor* %211 to %struct.Value*
  store %struct.Value* %212, %struct.Value** %42, align 8
  %213 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %213, %struct.Value_Constructor** %43, align 8
  %214 = load %struct.Value*, %struct.Value** %31, align 8
  %215 = call %struct.Value* @newReference(%struct.Value* noundef %214)
  %216 = load %struct.Value_Constructor*, %struct.Value_Constructor** %43, align 8
  %217 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %216, i32 0, i32 4
  %218 = load %struct.Value**, %struct.Value*** %217, align 8
  %219 = getelementptr inbounds %struct.Value*, %struct.Value** %218, i64 0
  store %struct.Value* %215, %struct.Value** %219, align 8
  %220 = load %struct.Value*, %struct.Value** %42, align 8
  %221 = call %struct.Value* @newReference(%struct.Value* noundef %220)
  %222 = load %struct.Value_Constructor*, %struct.Value_Constructor** %43, align 8
  %223 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %222, i32 0, i32 4
  %224 = load %struct.Value**, %struct.Value*** %223, align 8
  %225 = getelementptr inbounds %struct.Value*, %struct.Value** %224, i64 1
  store %struct.Value* %221, %struct.Value** %225, align 8
  %226 = load %struct.Value_Constructor*, %struct.Value_Constructor** %43, align 8
  %227 = bitcast %struct.Value_Constructor* %226 to %struct.Value*
  store %struct.Value* %227, %struct.Value** %44, align 8
  %228 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %228, %struct.Value_Constructor** %45, align 8
  %229 = load %struct.Value*, %struct.Value** %30, align 8
  %230 = call %struct.Value* @newReference(%struct.Value* noundef %229)
  %231 = load %struct.Value_Constructor*, %struct.Value_Constructor** %45, align 8
  %232 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %231, i32 0, i32 4
  %233 = load %struct.Value**, %struct.Value*** %232, align 8
  %234 = getelementptr inbounds %struct.Value*, %struct.Value** %233, i64 0
  store %struct.Value* %230, %struct.Value** %234, align 8
  %235 = load %struct.Value*, %struct.Value** %44, align 8
  %236 = call %struct.Value* @newReference(%struct.Value* noundef %235)
  %237 = load %struct.Value_Constructor*, %struct.Value_Constructor** %45, align 8
  %238 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %237, i32 0, i32 4
  %239 = load %struct.Value**, %struct.Value*** %238, align 8
  %240 = getelementptr inbounds %struct.Value*, %struct.Value** %239, i64 1
  store %struct.Value* %236, %struct.Value** %240, align 8
  %241 = load %struct.Value_Constructor*, %struct.Value_Constructor** %45, align 8
  %242 = bitcast %struct.Value_Constructor* %241 to %struct.Value*
  store %struct.Value* %242, %struct.Value** %46, align 8
  %243 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %243, %struct.Value_Constructor** %47, align 8
  %244 = load %struct.Value*, %struct.Value** %29, align 8
  %245 = call %struct.Value* @newReference(%struct.Value* noundef %244)
  %246 = load %struct.Value_Constructor*, %struct.Value_Constructor** %47, align 8
  %247 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %246, i32 0, i32 4
  %248 = load %struct.Value**, %struct.Value*** %247, align 8
  %249 = getelementptr inbounds %struct.Value*, %struct.Value** %248, i64 0
  store %struct.Value* %245, %struct.Value** %249, align 8
  %250 = load %struct.Value*, %struct.Value** %46, align 8
  %251 = call %struct.Value* @newReference(%struct.Value* noundef %250)
  %252 = load %struct.Value_Constructor*, %struct.Value_Constructor** %47, align 8
  %253 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %252, i32 0, i32 4
  %254 = load %struct.Value**, %struct.Value*** %253, align 8
  %255 = getelementptr inbounds %struct.Value*, %struct.Value** %254, i64 1
  store %struct.Value* %251, %struct.Value** %255, align 8
  %256 = load %struct.Value_Constructor*, %struct.Value_Constructor** %47, align 8
  %257 = bitcast %struct.Value_Constructor* %256 to %struct.Value*
  store %struct.Value* %257, %struct.Value** %48, align 8
  %258 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %258, %struct.Value_Constructor** %49, align 8
  %259 = load %struct.Value*, %struct.Value** %28, align 8
  %260 = call %struct.Value* @newReference(%struct.Value* noundef %259)
  %261 = load %struct.Value_Constructor*, %struct.Value_Constructor** %49, align 8
  %262 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %261, i32 0, i32 4
  %263 = load %struct.Value**, %struct.Value*** %262, align 8
  %264 = getelementptr inbounds %struct.Value*, %struct.Value** %263, i64 0
  store %struct.Value* %260, %struct.Value** %264, align 8
  %265 = load %struct.Value*, %struct.Value** %48, align 8
  %266 = call %struct.Value* @newReference(%struct.Value* noundef %265)
  %267 = load %struct.Value_Constructor*, %struct.Value_Constructor** %49, align 8
  %268 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %267, i32 0, i32 4
  %269 = load %struct.Value**, %struct.Value*** %268, align 8
  %270 = getelementptr inbounds %struct.Value*, %struct.Value** %269, i64 1
  store %struct.Value* %266, %struct.Value** %270, align 8
  %271 = load %struct.Value_Constructor*, %struct.Value_Constructor** %49, align 8
  %272 = bitcast %struct.Value_Constructor* %271 to %struct.Value*
  store %struct.Value* %272, %struct.Value** %50, align 8
  %273 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %273, %struct.Value_Constructor** %51, align 8
  %274 = load %struct.Value*, %struct.Value** %27, align 8
  %275 = call %struct.Value* @newReference(%struct.Value* noundef %274)
  %276 = load %struct.Value_Constructor*, %struct.Value_Constructor** %51, align 8
  %277 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %276, i32 0, i32 4
  %278 = load %struct.Value**, %struct.Value*** %277, align 8
  %279 = getelementptr inbounds %struct.Value*, %struct.Value** %278, i64 0
  store %struct.Value* %275, %struct.Value** %279, align 8
  %280 = load %struct.Value*, %struct.Value** %50, align 8
  %281 = call %struct.Value* @newReference(%struct.Value* noundef %280)
  %282 = load %struct.Value_Constructor*, %struct.Value_Constructor** %51, align 8
  %283 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %282, i32 0, i32 4
  %284 = load %struct.Value**, %struct.Value*** %283, align 8
  %285 = getelementptr inbounds %struct.Value*, %struct.Value** %284, i64 1
  store %struct.Value* %281, %struct.Value** %285, align 8
  %286 = load %struct.Value_Constructor*, %struct.Value_Constructor** %51, align 8
  %287 = bitcast %struct.Value_Constructor* %286 to %struct.Value*
  store %struct.Value* %287, %struct.Value** %52, align 8
  %288 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %288, %struct.Value_Constructor** %53, align 8
  %289 = load %struct.Value*, %struct.Value** %26, align 8
  %290 = call %struct.Value* @newReference(%struct.Value* noundef %289)
  %291 = load %struct.Value_Constructor*, %struct.Value_Constructor** %53, align 8
  %292 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %291, i32 0, i32 4
  %293 = load %struct.Value**, %struct.Value*** %292, align 8
  %294 = getelementptr inbounds %struct.Value*, %struct.Value** %293, i64 0
  store %struct.Value* %290, %struct.Value** %294, align 8
  %295 = load %struct.Value*, %struct.Value** %52, align 8
  %296 = call %struct.Value* @newReference(%struct.Value* noundef %295)
  %297 = load %struct.Value_Constructor*, %struct.Value_Constructor** %53, align 8
  %298 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %297, i32 0, i32 4
  %299 = load %struct.Value**, %struct.Value*** %298, align 8
  %300 = getelementptr inbounds %struct.Value*, %struct.Value** %299, i64 1
  store %struct.Value* %296, %struct.Value** %300, align 8
  %301 = load %struct.Value_Constructor*, %struct.Value_Constructor** %53, align 8
  %302 = bitcast %struct.Value_Constructor* %301 to %struct.Value*
  store %struct.Value* %302, %struct.Value** %54, align 8
  %303 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %303, %struct.Value_Constructor** %55, align 8
  %304 = load %struct.Value*, %struct.Value** %25, align 8
  %305 = call %struct.Value* @newReference(%struct.Value* noundef %304)
  %306 = load %struct.Value_Constructor*, %struct.Value_Constructor** %55, align 8
  %307 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %306, i32 0, i32 4
  %308 = load %struct.Value**, %struct.Value*** %307, align 8
  %309 = getelementptr inbounds %struct.Value*, %struct.Value** %308, i64 0
  store %struct.Value* %305, %struct.Value** %309, align 8
  %310 = load %struct.Value*, %struct.Value** %54, align 8
  %311 = call %struct.Value* @newReference(%struct.Value* noundef %310)
  %312 = load %struct.Value_Constructor*, %struct.Value_Constructor** %55, align 8
  %313 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %312, i32 0, i32 4
  %314 = load %struct.Value**, %struct.Value*** %313, align 8
  %315 = getelementptr inbounds %struct.Value*, %struct.Value** %314, i64 1
  store %struct.Value* %311, %struct.Value** %315, align 8
  %316 = load %struct.Value_Constructor*, %struct.Value_Constructor** %55, align 8
  %317 = bitcast %struct.Value_Constructor* %316 to %struct.Value*
  store %struct.Value* %317, %struct.Value** %56, align 8
  %318 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %318, %struct.Value_Constructor** %57, align 8
  %319 = load %struct.Value*, %struct.Value** %24, align 8
  %320 = call %struct.Value* @newReference(%struct.Value* noundef %319)
  %321 = load %struct.Value_Constructor*, %struct.Value_Constructor** %57, align 8
  %322 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %321, i32 0, i32 4
  %323 = load %struct.Value**, %struct.Value*** %322, align 8
  %324 = getelementptr inbounds %struct.Value*, %struct.Value** %323, i64 0
  store %struct.Value* %320, %struct.Value** %324, align 8
  %325 = load %struct.Value*, %struct.Value** %56, align 8
  %326 = call %struct.Value* @newReference(%struct.Value* noundef %325)
  %327 = load %struct.Value_Constructor*, %struct.Value_Constructor** %57, align 8
  %328 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %327, i32 0, i32 4
  %329 = load %struct.Value**, %struct.Value*** %328, align 8
  %330 = getelementptr inbounds %struct.Value*, %struct.Value** %329, i64 1
  store %struct.Value* %326, %struct.Value** %330, align 8
  %331 = load %struct.Value_Constructor*, %struct.Value_Constructor** %57, align 8
  %332 = bitcast %struct.Value_Constructor* %331 to %struct.Value*
  store %struct.Value* %332, %struct.Value** %58, align 8
  %333 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %333, %struct.Value_Constructor** %59, align 8
  %334 = load %struct.Value*, %struct.Value** %23, align 8
  %335 = call %struct.Value* @newReference(%struct.Value* noundef %334)
  %336 = load %struct.Value_Constructor*, %struct.Value_Constructor** %59, align 8
  %337 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %336, i32 0, i32 4
  %338 = load %struct.Value**, %struct.Value*** %337, align 8
  %339 = getelementptr inbounds %struct.Value*, %struct.Value** %338, i64 0
  store %struct.Value* %335, %struct.Value** %339, align 8
  %340 = load %struct.Value*, %struct.Value** %58, align 8
  %341 = call %struct.Value* @newReference(%struct.Value* noundef %340)
  %342 = load %struct.Value_Constructor*, %struct.Value_Constructor** %59, align 8
  %343 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %342, i32 0, i32 4
  %344 = load %struct.Value**, %struct.Value*** %343, align 8
  %345 = getelementptr inbounds %struct.Value*, %struct.Value** %344, i64 1
  store %struct.Value* %341, %struct.Value** %345, align 8
  %346 = load %struct.Value_Constructor*, %struct.Value_Constructor** %59, align 8
  %347 = bitcast %struct.Value_Constructor* %346 to %struct.Value*
  store %struct.Value* %347, %struct.Value** %60, align 8
  %348 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %348, %struct.Value_Constructor** %61, align 8
  %349 = load %struct.Value*, %struct.Value** %22, align 8
  %350 = call %struct.Value* @newReference(%struct.Value* noundef %349)
  %351 = load %struct.Value_Constructor*, %struct.Value_Constructor** %61, align 8
  %352 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %351, i32 0, i32 4
  %353 = load %struct.Value**, %struct.Value*** %352, align 8
  %354 = getelementptr inbounds %struct.Value*, %struct.Value** %353, i64 0
  store %struct.Value* %350, %struct.Value** %354, align 8
  %355 = load %struct.Value*, %struct.Value** %60, align 8
  %356 = call %struct.Value* @newReference(%struct.Value* noundef %355)
  %357 = load %struct.Value_Constructor*, %struct.Value_Constructor** %61, align 8
  %358 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %357, i32 0, i32 4
  %359 = load %struct.Value**, %struct.Value*** %358, align 8
  %360 = getelementptr inbounds %struct.Value*, %struct.Value** %359, i64 1
  store %struct.Value* %356, %struct.Value** %360, align 8
  %361 = load %struct.Value_Constructor*, %struct.Value_Constructor** %61, align 8
  %362 = bitcast %struct.Value_Constructor* %361 to %struct.Value*
  store %struct.Value* %362, %struct.Value** %62, align 8
  %363 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %363, %struct.Value_Constructor** %63, align 8
  %364 = load %struct.Value*, %struct.Value** %21, align 8
  %365 = call %struct.Value* @newReference(%struct.Value* noundef %364)
  %366 = load %struct.Value_Constructor*, %struct.Value_Constructor** %63, align 8
  %367 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %366, i32 0, i32 4
  %368 = load %struct.Value**, %struct.Value*** %367, align 8
  %369 = getelementptr inbounds %struct.Value*, %struct.Value** %368, i64 0
  store %struct.Value* %365, %struct.Value** %369, align 8
  %370 = load %struct.Value*, %struct.Value** %62, align 8
  %371 = call %struct.Value* @newReference(%struct.Value* noundef %370)
  %372 = load %struct.Value_Constructor*, %struct.Value_Constructor** %63, align 8
  %373 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %372, i32 0, i32 4
  %374 = load %struct.Value**, %struct.Value*** %373, align 8
  %375 = getelementptr inbounds %struct.Value*, %struct.Value** %374, i64 1
  store %struct.Value* %371, %struct.Value** %375, align 8
  %376 = load %struct.Value_Constructor*, %struct.Value_Constructor** %63, align 8
  %377 = bitcast %struct.Value_Constructor* %376 to %struct.Value*
  store %struct.Value* %377, %struct.Value** %64, align 8
  %378 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %378, %struct.Value_Constructor** %65, align 8
  %379 = load %struct.Value*, %struct.Value** %20, align 8
  %380 = call %struct.Value* @newReference(%struct.Value* noundef %379)
  %381 = load %struct.Value_Constructor*, %struct.Value_Constructor** %65, align 8
  %382 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %381, i32 0, i32 4
  %383 = load %struct.Value**, %struct.Value*** %382, align 8
  %384 = getelementptr inbounds %struct.Value*, %struct.Value** %383, i64 0
  store %struct.Value* %380, %struct.Value** %384, align 8
  %385 = load %struct.Value*, %struct.Value** %64, align 8
  %386 = call %struct.Value* @newReference(%struct.Value* noundef %385)
  %387 = load %struct.Value_Constructor*, %struct.Value_Constructor** %65, align 8
  %388 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %387, i32 0, i32 4
  %389 = load %struct.Value**, %struct.Value*** %388, align 8
  %390 = getelementptr inbounds %struct.Value*, %struct.Value** %389, i64 1
  store %struct.Value* %386, %struct.Value** %390, align 8
  %391 = load %struct.Value_Constructor*, %struct.Value_Constructor** %65, align 8
  %392 = bitcast %struct.Value_Constructor* %391 to %struct.Value*
  store %struct.Value* %392, %struct.Value** %66, align 8
  %393 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %393, %struct.Value_Constructor** %67, align 8
  %394 = load %struct.Value*, %struct.Value** %19, align 8
  %395 = call %struct.Value* @newReference(%struct.Value* noundef %394)
  %396 = load %struct.Value_Constructor*, %struct.Value_Constructor** %67, align 8
  %397 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %396, i32 0, i32 4
  %398 = load %struct.Value**, %struct.Value*** %397, align 8
  %399 = getelementptr inbounds %struct.Value*, %struct.Value** %398, i64 0
  store %struct.Value* %395, %struct.Value** %399, align 8
  %400 = load %struct.Value*, %struct.Value** %66, align 8
  %401 = call %struct.Value* @newReference(%struct.Value* noundef %400)
  %402 = load %struct.Value_Constructor*, %struct.Value_Constructor** %67, align 8
  %403 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %402, i32 0, i32 4
  %404 = load %struct.Value**, %struct.Value*** %403, align 8
  %405 = getelementptr inbounds %struct.Value*, %struct.Value** %404, i64 1
  store %struct.Value* %401, %struct.Value** %405, align 8
  %406 = load %struct.Value_Constructor*, %struct.Value_Constructor** %67, align 8
  %407 = bitcast %struct.Value_Constructor* %406 to %struct.Value*
  store %struct.Value* %407, %struct.Value** %68, align 8
  %408 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %408, %struct.Value_Constructor** %69, align 8
  %409 = load %struct.Value*, %struct.Value** %18, align 8
  %410 = call %struct.Value* @newReference(%struct.Value* noundef %409)
  %411 = load %struct.Value_Constructor*, %struct.Value_Constructor** %69, align 8
  %412 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %411, i32 0, i32 4
  %413 = load %struct.Value**, %struct.Value*** %412, align 8
  %414 = getelementptr inbounds %struct.Value*, %struct.Value** %413, i64 0
  store %struct.Value* %410, %struct.Value** %414, align 8
  %415 = load %struct.Value*, %struct.Value** %68, align 8
  %416 = call %struct.Value* @newReference(%struct.Value* noundef %415)
  %417 = load %struct.Value_Constructor*, %struct.Value_Constructor** %69, align 8
  %418 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %417, i32 0, i32 4
  %419 = load %struct.Value**, %struct.Value*** %418, align 8
  %420 = getelementptr inbounds %struct.Value*, %struct.Value** %419, i64 1
  store %struct.Value* %416, %struct.Value** %420, align 8
  %421 = load %struct.Value_Constructor*, %struct.Value_Constructor** %69, align 8
  %422 = bitcast %struct.Value_Constructor* %421 to %struct.Value*
  store %struct.Value* %422, %struct.Value** %70, align 8
  %423 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %423, %struct.Value_Constructor** %71, align 8
  %424 = load %struct.Value*, %struct.Value** %17, align 8
  %425 = call %struct.Value* @newReference(%struct.Value* noundef %424)
  %426 = load %struct.Value_Constructor*, %struct.Value_Constructor** %71, align 8
  %427 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %426, i32 0, i32 4
  %428 = load %struct.Value**, %struct.Value*** %427, align 8
  %429 = getelementptr inbounds %struct.Value*, %struct.Value** %428, i64 0
  store %struct.Value* %425, %struct.Value** %429, align 8
  %430 = load %struct.Value*, %struct.Value** %70, align 8
  %431 = call %struct.Value* @newReference(%struct.Value* noundef %430)
  %432 = load %struct.Value_Constructor*, %struct.Value_Constructor** %71, align 8
  %433 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %432, i32 0, i32 4
  %434 = load %struct.Value**, %struct.Value*** %433, align 8
  %435 = getelementptr inbounds %struct.Value*, %struct.Value** %434, i64 1
  store %struct.Value* %431, %struct.Value** %435, align 8
  %436 = load %struct.Value_Constructor*, %struct.Value_Constructor** %71, align 8
  %437 = bitcast %struct.Value_Constructor* %436 to %struct.Value*
  store %struct.Value* %437, %struct.Value** %72, align 8
  %438 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %438, %struct.Value_Constructor** %73, align 8
  %439 = load %struct.Value*, %struct.Value** %16, align 8
  %440 = call %struct.Value* @newReference(%struct.Value* noundef %439)
  %441 = load %struct.Value_Constructor*, %struct.Value_Constructor** %73, align 8
  %442 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %441, i32 0, i32 4
  %443 = load %struct.Value**, %struct.Value*** %442, align 8
  %444 = getelementptr inbounds %struct.Value*, %struct.Value** %443, i64 0
  store %struct.Value* %440, %struct.Value** %444, align 8
  %445 = load %struct.Value*, %struct.Value** %72, align 8
  %446 = call %struct.Value* @newReference(%struct.Value* noundef %445)
  %447 = load %struct.Value_Constructor*, %struct.Value_Constructor** %73, align 8
  %448 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %447, i32 0, i32 4
  %449 = load %struct.Value**, %struct.Value*** %448, align 8
  %450 = getelementptr inbounds %struct.Value*, %struct.Value** %449, i64 1
  store %struct.Value* %446, %struct.Value** %450, align 8
  %451 = load %struct.Value_Constructor*, %struct.Value_Constructor** %73, align 8
  %452 = bitcast %struct.Value_Constructor* %451 to %struct.Value*
  store %struct.Value* %452, %struct.Value** %74, align 8
  %453 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %453, %struct.Value_Constructor** %75, align 8
  %454 = load %struct.Value*, %struct.Value** %15, align 8
  %455 = call %struct.Value* @newReference(%struct.Value* noundef %454)
  %456 = load %struct.Value_Constructor*, %struct.Value_Constructor** %75, align 8
  %457 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %456, i32 0, i32 4
  %458 = load %struct.Value**, %struct.Value*** %457, align 8
  %459 = getelementptr inbounds %struct.Value*, %struct.Value** %458, i64 0
  store %struct.Value* %455, %struct.Value** %459, align 8
  %460 = load %struct.Value*, %struct.Value** %74, align 8
  %461 = call %struct.Value* @newReference(%struct.Value* noundef %460)
  %462 = load %struct.Value_Constructor*, %struct.Value_Constructor** %75, align 8
  %463 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %462, i32 0, i32 4
  %464 = load %struct.Value**, %struct.Value*** %463, align 8
  %465 = getelementptr inbounds %struct.Value*, %struct.Value** %464, i64 1
  store %struct.Value* %461, %struct.Value** %465, align 8
  %466 = load %struct.Value_Constructor*, %struct.Value_Constructor** %75, align 8
  %467 = bitcast %struct.Value_Constructor* %466 to %struct.Value*
  store %struct.Value* %467, %struct.Value** %76, align 8
  %468 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %468, %struct.Value_Constructor** %77, align 8
  %469 = load %struct.Value*, %struct.Value** %14, align 8
  %470 = call %struct.Value* @newReference(%struct.Value* noundef %469)
  %471 = load %struct.Value_Constructor*, %struct.Value_Constructor** %77, align 8
  %472 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %471, i32 0, i32 4
  %473 = load %struct.Value**, %struct.Value*** %472, align 8
  %474 = getelementptr inbounds %struct.Value*, %struct.Value** %473, i64 0
  store %struct.Value* %470, %struct.Value** %474, align 8
  %475 = load %struct.Value*, %struct.Value** %76, align 8
  %476 = call %struct.Value* @newReference(%struct.Value* noundef %475)
  %477 = load %struct.Value_Constructor*, %struct.Value_Constructor** %77, align 8
  %478 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %477, i32 0, i32 4
  %479 = load %struct.Value**, %struct.Value*** %478, align 8
  %480 = getelementptr inbounds %struct.Value*, %struct.Value** %479, i64 1
  store %struct.Value* %476, %struct.Value** %480, align 8
  %481 = load %struct.Value_Constructor*, %struct.Value_Constructor** %77, align 8
  %482 = bitcast %struct.Value_Constructor* %481 to %struct.Value*
  store %struct.Value* %482, %struct.Value** %78, align 8
  %483 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %483, %struct.Value_Constructor** %79, align 8
  %484 = load %struct.Value*, %struct.Value** %13, align 8
  %485 = call %struct.Value* @newReference(%struct.Value* noundef %484)
  %486 = load %struct.Value_Constructor*, %struct.Value_Constructor** %79, align 8
  %487 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %486, i32 0, i32 4
  %488 = load %struct.Value**, %struct.Value*** %487, align 8
  %489 = getelementptr inbounds %struct.Value*, %struct.Value** %488, i64 0
  store %struct.Value* %485, %struct.Value** %489, align 8
  %490 = load %struct.Value*, %struct.Value** %78, align 8
  %491 = call %struct.Value* @newReference(%struct.Value* noundef %490)
  %492 = load %struct.Value_Constructor*, %struct.Value_Constructor** %79, align 8
  %493 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %492, i32 0, i32 4
  %494 = load %struct.Value**, %struct.Value*** %493, align 8
  %495 = getelementptr inbounds %struct.Value*, %struct.Value** %494, i64 1
  store %struct.Value* %491, %struct.Value** %495, align 8
  %496 = load %struct.Value_Constructor*, %struct.Value_Constructor** %79, align 8
  %497 = bitcast %struct.Value_Constructor* %496 to %struct.Value*
  store %struct.Value* %497, %struct.Value** %80, align 8
  %498 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %498, %struct.Value_Constructor** %81, align 8
  %499 = load %struct.Value*, %struct.Value** %12, align 8
  %500 = call %struct.Value* @newReference(%struct.Value* noundef %499)
  %501 = load %struct.Value_Constructor*, %struct.Value_Constructor** %81, align 8
  %502 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %501, i32 0, i32 4
  %503 = load %struct.Value**, %struct.Value*** %502, align 8
  %504 = getelementptr inbounds %struct.Value*, %struct.Value** %503, i64 0
  store %struct.Value* %500, %struct.Value** %504, align 8
  %505 = load %struct.Value*, %struct.Value** %80, align 8
  %506 = call %struct.Value* @newReference(%struct.Value* noundef %505)
  %507 = load %struct.Value_Constructor*, %struct.Value_Constructor** %81, align 8
  %508 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %507, i32 0, i32 4
  %509 = load %struct.Value**, %struct.Value*** %508, align 8
  %510 = getelementptr inbounds %struct.Value*, %struct.Value** %509, i64 1
  store %struct.Value* %506, %struct.Value** %510, align 8
  %511 = load %struct.Value_Constructor*, %struct.Value_Constructor** %81, align 8
  %512 = bitcast %struct.Value_Constructor* %511 to %struct.Value*
  store %struct.Value* %512, %struct.Value** %82, align 8
  %513 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %513, %struct.Value_Constructor** %83, align 8
  %514 = load %struct.Value*, %struct.Value** %11, align 8
  %515 = call %struct.Value* @newReference(%struct.Value* noundef %514)
  %516 = load %struct.Value_Constructor*, %struct.Value_Constructor** %83, align 8
  %517 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %516, i32 0, i32 4
  %518 = load %struct.Value**, %struct.Value*** %517, align 8
  %519 = getelementptr inbounds %struct.Value*, %struct.Value** %518, i64 0
  store %struct.Value* %515, %struct.Value** %519, align 8
  %520 = load %struct.Value*, %struct.Value** %82, align 8
  %521 = call %struct.Value* @newReference(%struct.Value* noundef %520)
  %522 = load %struct.Value_Constructor*, %struct.Value_Constructor** %83, align 8
  %523 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %522, i32 0, i32 4
  %524 = load %struct.Value**, %struct.Value*** %523, align 8
  %525 = getelementptr inbounds %struct.Value*, %struct.Value** %524, i64 1
  store %struct.Value* %521, %struct.Value** %525, align 8
  %526 = load %struct.Value_Constructor*, %struct.Value_Constructor** %83, align 8
  %527 = bitcast %struct.Value_Constructor* %526 to %struct.Value*
  store %struct.Value* %527, %struct.Value** %84, align 8
  %528 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %528, %struct.Value_Constructor** %85, align 8
  %529 = load %struct.Value*, %struct.Value** %10, align 8
  %530 = call %struct.Value* @newReference(%struct.Value* noundef %529)
  %531 = load %struct.Value_Constructor*, %struct.Value_Constructor** %85, align 8
  %532 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %531, i32 0, i32 4
  %533 = load %struct.Value**, %struct.Value*** %532, align 8
  %534 = getelementptr inbounds %struct.Value*, %struct.Value** %533, i64 0
  store %struct.Value* %530, %struct.Value** %534, align 8
  %535 = load %struct.Value*, %struct.Value** %84, align 8
  %536 = call %struct.Value* @newReference(%struct.Value* noundef %535)
  %537 = load %struct.Value_Constructor*, %struct.Value_Constructor** %85, align 8
  %538 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %537, i32 0, i32 4
  %539 = load %struct.Value**, %struct.Value*** %538, align 8
  %540 = getelementptr inbounds %struct.Value*, %struct.Value** %539, i64 1
  store %struct.Value* %536, %struct.Value** %540, align 8
  %541 = load %struct.Value_Constructor*, %struct.Value_Constructor** %85, align 8
  %542 = bitcast %struct.Value_Constructor* %541 to %struct.Value*
  store %struct.Value* %542, %struct.Value** %86, align 8
  %543 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %543, %struct.Value_Constructor** %87, align 8
  %544 = load %struct.Value*, %struct.Value** %9, align 8
  %545 = call %struct.Value* @newReference(%struct.Value* noundef %544)
  %546 = load %struct.Value_Constructor*, %struct.Value_Constructor** %87, align 8
  %547 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %546, i32 0, i32 4
  %548 = load %struct.Value**, %struct.Value*** %547, align 8
  %549 = getelementptr inbounds %struct.Value*, %struct.Value** %548, i64 0
  store %struct.Value* %545, %struct.Value** %549, align 8
  %550 = load %struct.Value*, %struct.Value** %86, align 8
  %551 = call %struct.Value* @newReference(%struct.Value* noundef %550)
  %552 = load %struct.Value_Constructor*, %struct.Value_Constructor** %87, align 8
  %553 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %552, i32 0, i32 4
  %554 = load %struct.Value**, %struct.Value*** %553, align 8
  %555 = getelementptr inbounds %struct.Value*, %struct.Value** %554, i64 1
  store %struct.Value* %551, %struct.Value** %555, align 8
  %556 = load %struct.Value_Constructor*, %struct.Value_Constructor** %87, align 8
  %557 = bitcast %struct.Value_Constructor* %556 to %struct.Value*
  store %struct.Value* %557, %struct.Value** %88, align 8
  %558 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %558, %struct.Value_Constructor** %89, align 8
  %559 = load %struct.Value*, %struct.Value** %8, align 8
  %560 = call %struct.Value* @newReference(%struct.Value* noundef %559)
  %561 = load %struct.Value_Constructor*, %struct.Value_Constructor** %89, align 8
  %562 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %561, i32 0, i32 4
  %563 = load %struct.Value**, %struct.Value*** %562, align 8
  %564 = getelementptr inbounds %struct.Value*, %struct.Value** %563, i64 0
  store %struct.Value* %560, %struct.Value** %564, align 8
  %565 = load %struct.Value*, %struct.Value** %88, align 8
  %566 = call %struct.Value* @newReference(%struct.Value* noundef %565)
  %567 = load %struct.Value_Constructor*, %struct.Value_Constructor** %89, align 8
  %568 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %567, i32 0, i32 4
  %569 = load %struct.Value**, %struct.Value*** %568, align 8
  %570 = getelementptr inbounds %struct.Value*, %struct.Value** %569, i64 1
  store %struct.Value* %566, %struct.Value** %570, align 8
  %571 = load %struct.Value_Constructor*, %struct.Value_Constructor** %89, align 8
  %572 = bitcast %struct.Value_Constructor* %571 to %struct.Value*
  store %struct.Value* %572, %struct.Value** %90, align 8
  %573 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %573, %struct.Value_Constructor** %91, align 8
  %574 = load %struct.Value*, %struct.Value** %7, align 8
  %575 = call %struct.Value* @newReference(%struct.Value* noundef %574)
  %576 = load %struct.Value_Constructor*, %struct.Value_Constructor** %91, align 8
  %577 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %576, i32 0, i32 4
  %578 = load %struct.Value**, %struct.Value*** %577, align 8
  %579 = getelementptr inbounds %struct.Value*, %struct.Value** %578, i64 0
  store %struct.Value* %575, %struct.Value** %579, align 8
  %580 = load %struct.Value*, %struct.Value** %90, align 8
  %581 = call %struct.Value* @newReference(%struct.Value* noundef %580)
  %582 = load %struct.Value_Constructor*, %struct.Value_Constructor** %91, align 8
  %583 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %582, i32 0, i32 4
  %584 = load %struct.Value**, %struct.Value*** %583, align 8
  %585 = getelementptr inbounds %struct.Value*, %struct.Value** %584, i64 1
  store %struct.Value* %581, %struct.Value** %585, align 8
  %586 = load %struct.Value_Constructor*, %struct.Value_Constructor** %91, align 8
  %587 = bitcast %struct.Value_Constructor* %586 to %struct.Value*
  store %struct.Value* %587, %struct.Value** %92, align 8
  %588 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %588, %struct.Value_Constructor** %93, align 8
  %589 = load %struct.Value*, %struct.Value** %6, align 8
  %590 = call %struct.Value* @newReference(%struct.Value* noundef %589)
  %591 = load %struct.Value_Constructor*, %struct.Value_Constructor** %93, align 8
  %592 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %591, i32 0, i32 4
  %593 = load %struct.Value**, %struct.Value*** %592, align 8
  %594 = getelementptr inbounds %struct.Value*, %struct.Value** %593, i64 0
  store %struct.Value* %590, %struct.Value** %594, align 8
  %595 = load %struct.Value*, %struct.Value** %92, align 8
  %596 = call %struct.Value* @newReference(%struct.Value* noundef %595)
  %597 = load %struct.Value_Constructor*, %struct.Value_Constructor** %93, align 8
  %598 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %597, i32 0, i32 4
  %599 = load %struct.Value**, %struct.Value*** %598, align 8
  %600 = getelementptr inbounds %struct.Value*, %struct.Value** %599, i64 1
  store %struct.Value* %596, %struct.Value** %600, align 8
  %601 = load %struct.Value_Constructor*, %struct.Value_Constructor** %93, align 8
  %602 = bitcast %struct.Value_Constructor* %601 to %struct.Value*
  store %struct.Value* %602, %struct.Value** %94, align 8
  %603 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %603, %struct.Value_Constructor** %95, align 8
  %604 = load %struct.Value*, %struct.Value** %5, align 8
  %605 = call %struct.Value* @newReference(%struct.Value* noundef %604)
  %606 = load %struct.Value_Constructor*, %struct.Value_Constructor** %95, align 8
  %607 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %606, i32 0, i32 4
  %608 = load %struct.Value**, %struct.Value*** %607, align 8
  %609 = getelementptr inbounds %struct.Value*, %struct.Value** %608, i64 0
  store %struct.Value* %605, %struct.Value** %609, align 8
  %610 = load %struct.Value*, %struct.Value** %94, align 8
  %611 = call %struct.Value* @newReference(%struct.Value* noundef %610)
  %612 = load %struct.Value_Constructor*, %struct.Value_Constructor** %95, align 8
  %613 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %612, i32 0, i32 4
  %614 = load %struct.Value**, %struct.Value*** %613, align 8
  %615 = getelementptr inbounds %struct.Value*, %struct.Value** %614, i64 1
  store %struct.Value* %611, %struct.Value** %615, align 8
  %616 = load %struct.Value_Constructor*, %struct.Value_Constructor** %95, align 8
  %617 = bitcast %struct.Value_Constructor* %616 to %struct.Value*
  store %struct.Value* %617, %struct.Value** %96, align 8
  %618 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %618, %struct.Value_Constructor** %97, align 8
  %619 = load %struct.Value*, %struct.Value** %4, align 8
  %620 = call %struct.Value* @newReference(%struct.Value* noundef %619)
  %621 = load %struct.Value_Constructor*, %struct.Value_Constructor** %97, align 8
  %622 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %621, i32 0, i32 4
  %623 = load %struct.Value**, %struct.Value*** %622, align 8
  %624 = getelementptr inbounds %struct.Value*, %struct.Value** %623, i64 0
  store %struct.Value* %620, %struct.Value** %624, align 8
  %625 = load %struct.Value*, %struct.Value** %96, align 8
  %626 = call %struct.Value* @newReference(%struct.Value* noundef %625)
  %627 = load %struct.Value_Constructor*, %struct.Value_Constructor** %97, align 8
  %628 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %627, i32 0, i32 4
  %629 = load %struct.Value**, %struct.Value*** %628, align 8
  %630 = getelementptr inbounds %struct.Value*, %struct.Value** %629, i64 1
  store %struct.Value* %626, %struct.Value** %630, align 8
  %631 = load %struct.Value_Constructor*, %struct.Value_Constructor** %97, align 8
  %632 = bitcast %struct.Value_Constructor* %631 to %struct.Value*
  store %struct.Value* %632, %struct.Value** %98, align 8
  %633 = call %struct.Value_Constructor* @newConstructor(i32 noundef 2, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  store %struct.Value_Constructor* %633, %struct.Value_Constructor** %99, align 8
  %634 = load %struct.Value*, %struct.Value** %3, align 8
  %635 = call %struct.Value* @newReference(%struct.Value* noundef %634)
  %636 = load %struct.Value_Constructor*, %struct.Value_Constructor** %99, align 8
  %637 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %636, i32 0, i32 4
  %638 = load %struct.Value**, %struct.Value*** %637, align 8
  %639 = getelementptr inbounds %struct.Value*, %struct.Value** %638, i64 0
  store %struct.Value* %635, %struct.Value** %639, align 8
  %640 = load %struct.Value*, %struct.Value** %98, align 8
  %641 = call %struct.Value* @newReference(%struct.Value* noundef %640)
  %642 = load %struct.Value_Constructor*, %struct.Value_Constructor** %99, align 8
  %643 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %642, i32 0, i32 4
  %644 = load %struct.Value**, %struct.Value*** %643, align 8
  %645 = getelementptr inbounds %struct.Value*, %struct.Value** %644, i64 1
  store %struct.Value* %641, %struct.Value** %645, align 8
  %646 = load %struct.Value_Constructor*, %struct.Value_Constructor** %99, align 8
  %647 = bitcast %struct.Value_Constructor* %646 to %struct.Value*
  store %struct.Value* %647, %struct.Value** %100, align 8
  %648 = load %struct.Value*, %struct.Value** %98, align 8
  call void @removeReference(%struct.Value* noundef %648)
  %649 = load %struct.Value*, %struct.Value** %96, align 8
  call void @removeReference(%struct.Value* noundef %649)
  %650 = load %struct.Value*, %struct.Value** %94, align 8
  call void @removeReference(%struct.Value* noundef %650)
  %651 = load %struct.Value*, %struct.Value** %92, align 8
  call void @removeReference(%struct.Value* noundef %651)
  %652 = load %struct.Value*, %struct.Value** %90, align 8
  call void @removeReference(%struct.Value* noundef %652)
  %653 = load %struct.Value*, %struct.Value** %88, align 8
  call void @removeReference(%struct.Value* noundef %653)
  %654 = load %struct.Value*, %struct.Value** %86, align 8
  call void @removeReference(%struct.Value* noundef %654)
  %655 = load %struct.Value*, %struct.Value** %84, align 8
  call void @removeReference(%struct.Value* noundef %655)
  %656 = load %struct.Value*, %struct.Value** %82, align 8
  call void @removeReference(%struct.Value* noundef %656)
  %657 = load %struct.Value*, %struct.Value** %80, align 8
  call void @removeReference(%struct.Value* noundef %657)
  %658 = load %struct.Value*, %struct.Value** %78, align 8
  call void @removeReference(%struct.Value* noundef %658)
  %659 = load %struct.Value*, %struct.Value** %76, align 8
  call void @removeReference(%struct.Value* noundef %659)
  %660 = load %struct.Value*, %struct.Value** %74, align 8
  call void @removeReference(%struct.Value* noundef %660)
  %661 = load %struct.Value*, %struct.Value** %72, align 8
  call void @removeReference(%struct.Value* noundef %661)
  %662 = load %struct.Value*, %struct.Value** %70, align 8
  call void @removeReference(%struct.Value* noundef %662)
  %663 = load %struct.Value*, %struct.Value** %68, align 8
  call void @removeReference(%struct.Value* noundef %663)
  %664 = load %struct.Value*, %struct.Value** %66, align 8
  call void @removeReference(%struct.Value* noundef %664)
  %665 = load %struct.Value*, %struct.Value** %64, align 8
  call void @removeReference(%struct.Value* noundef %665)
  %666 = load %struct.Value*, %struct.Value** %62, align 8
  call void @removeReference(%struct.Value* noundef %666)
  %667 = load %struct.Value*, %struct.Value** %60, align 8
  call void @removeReference(%struct.Value* noundef %667)
  %668 = load %struct.Value*, %struct.Value** %58, align 8
  call void @removeReference(%struct.Value* noundef %668)
  %669 = load %struct.Value*, %struct.Value** %56, align 8
  call void @removeReference(%struct.Value* noundef %669)
  %670 = load %struct.Value*, %struct.Value** %54, align 8
  call void @removeReference(%struct.Value* noundef %670)
  %671 = load %struct.Value*, %struct.Value** %52, align 8
  call void @removeReference(%struct.Value* noundef %671)
  %672 = load %struct.Value*, %struct.Value** %50, align 8
  call void @removeReference(%struct.Value* noundef %672)
  %673 = load %struct.Value*, %struct.Value** %48, align 8
  call void @removeReference(%struct.Value* noundef %673)
  %674 = load %struct.Value*, %struct.Value** %46, align 8
  call void @removeReference(%struct.Value* noundef %674)
  %675 = load %struct.Value*, %struct.Value** %44, align 8
  call void @removeReference(%struct.Value* noundef %675)
  %676 = load %struct.Value*, %struct.Value** %42, align 8
  call void @removeReference(%struct.Value* noundef %676)
  %677 = load %struct.Value*, %struct.Value** %40, align 8
  call void @removeReference(%struct.Value* noundef %677)
  %678 = load %struct.Value*, %struct.Value** %38, align 8
  call void @removeReference(%struct.Value* noundef %678)
  %679 = load %struct.Value*, %struct.Value** %36, align 8
  call void @removeReference(%struct.Value* noundef %679)
  %680 = load %struct.Value*, %struct.Value** %34, align 8
  call void @removeReference(%struct.Value* noundef %680)
  %681 = load %struct.Value*, %struct.Value** %33, align 8
  call void @removeReference(%struct.Value* noundef %681)
  %682 = load %struct.Value*, %struct.Value** %32, align 8
  call void @removeReference(%struct.Value* noundef %682)
  %683 = load %struct.Value*, %struct.Value** %31, align 8
  call void @removeReference(%struct.Value* noundef %683)
  %684 = load %struct.Value*, %struct.Value** %30, align 8
  call void @removeReference(%struct.Value* noundef %684)
  %685 = load %struct.Value*, %struct.Value** %29, align 8
  call void @removeReference(%struct.Value* noundef %685)
  %686 = load %struct.Value*, %struct.Value** %28, align 8
  call void @removeReference(%struct.Value* noundef %686)
  %687 = load %struct.Value*, %struct.Value** %27, align 8
  call void @removeReference(%struct.Value* noundef %687)
  %688 = load %struct.Value*, %struct.Value** %26, align 8
  call void @removeReference(%struct.Value* noundef %688)
  %689 = load %struct.Value*, %struct.Value** %25, align 8
  call void @removeReference(%struct.Value* noundef %689)
  %690 = load %struct.Value*, %struct.Value** %24, align 8
  call void @removeReference(%struct.Value* noundef %690)
  %691 = load %struct.Value*, %struct.Value** %23, align 8
  call void @removeReference(%struct.Value* noundef %691)
  %692 = load %struct.Value*, %struct.Value** %22, align 8
  call void @removeReference(%struct.Value* noundef %692)
  %693 = load %struct.Value*, %struct.Value** %21, align 8
  call void @removeReference(%struct.Value* noundef %693)
  %694 = load %struct.Value*, %struct.Value** %20, align 8
  call void @removeReference(%struct.Value* noundef %694)
  %695 = load %struct.Value*, %struct.Value** %19, align 8
  call void @removeReference(%struct.Value* noundef %695)
  %696 = load %struct.Value*, %struct.Value** %18, align 8
  call void @removeReference(%struct.Value* noundef %696)
  %697 = load %struct.Value*, %struct.Value** %17, align 8
  call void @removeReference(%struct.Value* noundef %697)
  %698 = load %struct.Value*, %struct.Value** %16, align 8
  call void @removeReference(%struct.Value* noundef %698)
  %699 = load %struct.Value*, %struct.Value** %15, align 8
  call void @removeReference(%struct.Value* noundef %699)
  %700 = load %struct.Value*, %struct.Value** %14, align 8
  call void @removeReference(%struct.Value* noundef %700)
  %701 = load %struct.Value*, %struct.Value** %13, align 8
  call void @removeReference(%struct.Value* noundef %701)
  %702 = load %struct.Value*, %struct.Value** %12, align 8
  call void @removeReference(%struct.Value* noundef %702)
  %703 = load %struct.Value*, %struct.Value** %11, align 8
  call void @removeReference(%struct.Value* noundef %703)
  %704 = load %struct.Value*, %struct.Value** %10, align 8
  call void @removeReference(%struct.Value* noundef %704)
  %705 = load %struct.Value*, %struct.Value** %9, align 8
  call void @removeReference(%struct.Value* noundef %705)
  %706 = load %struct.Value*, %struct.Value** %8, align 8
  call void @removeReference(%struct.Value* noundef %706)
  %707 = load %struct.Value*, %struct.Value** %7, align 8
  call void @removeReference(%struct.Value* noundef %707)
  %708 = load %struct.Value*, %struct.Value** %6, align 8
  call void @removeReference(%struct.Value* noundef %708)
  %709 = load %struct.Value*, %struct.Value** %5, align 8
  call void @removeReference(%struct.Value* noundef %709)
  %710 = load %struct.Value*, %struct.Value** %4, align 8
  call void @removeReference(%struct.Value* noundef %710)
  %711 = load %struct.Value*, %struct.Value** %3, align 8
  call void @removeReference(%struct.Value* noundef %711)
  %712 = load %struct.Value*, %struct.Value** %100, align 8
  ret %struct.Value* %712
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_n___parenOpen2439_comma_11931_parenClose_asciiTab_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Show_n___parenOpen2439_comma_11931_parenClose_asciiTab(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_show_Show_String(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value_Arglist*, align 8
  %5 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value_Arglist*, align 8
  %9 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %10 = alloca %struct.Value*, align 8
  %11 = alloca %struct.Value*, align 8
  %12 = alloca %struct.Value*, align 8
  %13 = alloca %struct.Value*, align 8
  %14 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %15 = call %struct.Value_Char* @makeChar(i8 noundef signext 34)
  %16 = bitcast %struct.Value_Char* %15 to %struct.Value*
  store %struct.Value* %16, %struct.Value** %3, align 8
  %17 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %17, %struct.Value_Arglist** %4, align 8
  %18 = load %struct.Value*, %struct.Value** %2, align 8
  %19 = call %struct.Value* @newReference(%struct.Value* noundef %18)
  %20 = load %struct.Value_Arglist*, %struct.Value_Arglist** %4, align 8
  %21 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %20, i32 0, i32 3
  %22 = load %struct.Value**, %struct.Value*** %21, align 8
  %23 = getelementptr inbounds %struct.Value*, %struct.Value** %22, i64 0
  store %struct.Value* %19, %struct.Value** %23, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_fastUnpack_arglist, %struct.Value* (%struct.Value_Arglist*)** %5, align 8
  %24 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %5, align 8
  %25 = load %struct.Value_Arglist*, %struct.Value_Arglist** %4, align 8
  %26 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %24, %struct.Value_Arglist* noundef %25)
  %27 = bitcast %struct.Value_Closure* %26 to %struct.Value*
  store %struct.Value* %27, %struct.Value** %6, align 8
  %28 = load %struct.Value*, %struct.Value** %6, align 8
  %29 = call %struct.Value* @trampoline(%struct.Value* noundef %28)
  store %struct.Value* %29, %struct.Value** %7, align 8
  %30 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %30, %struct.Value_Arglist** %8, align 8
  %31 = load %struct.Value*, %struct.Value** %7, align 8
  %32 = call %struct.Value* @newReference(%struct.Value* noundef %31)
  %33 = load %struct.Value_Arglist*, %struct.Value_Arglist** %8, align 8
  %34 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %33, i32 0, i32 3
  %35 = load %struct.Value**, %struct.Value*** %34, align 8
  %36 = getelementptr inbounds %struct.Value*, %struct.Value** %35, i64 0
  store %struct.Value* %32, %struct.Value** %36, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showLitString_arglist, %struct.Value* (%struct.Value_Arglist*)** %9, align 8
  %37 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %9, align 8
  %38 = load %struct.Value_Arglist*, %struct.Value_Arglist** %8, align 8
  %39 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %37, %struct.Value_Arglist* noundef %38)
  %40 = bitcast %struct.Value_Closure* %39 to %struct.Value*
  store %struct.Value* %40, %struct.Value** %10, align 8
  %41 = load %struct.Value*, %struct.Value** %10, align 8
  %42 = call %struct.Value* @trampoline(%struct.Value* noundef %41)
  store %struct.Value* %42, %struct.Value** %11, align 8
  %43 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0))
  %44 = bitcast %struct.Value_String* %43 to %struct.Value*
  store %struct.Value* %44, %struct.Value** %12, align 8
  %45 = load %struct.Value*, %struct.Value** %11, align 8
  %46 = load %struct.Value*, %struct.Value** %12, align 8
  %47 = call %struct.Value* @apply_closure(%struct.Value* noundef %45, %struct.Value* noundef %46)
  store %struct.Value* %47, %struct.Value** %13, align 8
  %48 = load %struct.Value*, %struct.Value** %3, align 8
  %49 = load %struct.Value*, %struct.Value** %13, align 8
  %50 = call %struct.Value* @strCons(%struct.Value* noundef %48, %struct.Value* noundef %49)
  store %struct.Value* %50, %struct.Value** %14, align 8
  %51 = load %struct.Value*, %struct.Value** %13, align 8
  call void @removeReference(%struct.Value* noundef %51)
  %52 = load %struct.Value*, %struct.Value** %12, align 8
  call void @removeReference(%struct.Value* noundef %52)
  %53 = load %struct.Value*, %struct.Value** %11, align 8
  call void @removeReference(%struct.Value* noundef %53)
  %54 = load %struct.Value*, %struct.Value** %7, align 8
  call void @removeReference(%struct.Value* noundef %54)
  %55 = load %struct.Value*, %struct.Value** %3, align 8
  call void @removeReference(%struct.Value* noundef %55)
  %56 = load %struct.Value*, %struct.Value** %14, align 8
  ret %struct.Value* %56
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitString_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Show_showLitString(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

declare %struct.Value* @strCons(%struct.Value* noundef, %struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_show_Show_Int(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value_Constructor*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %9 = call %struct.Value_Constructor* @newConstructor(i32 noundef 0, i32 noundef 0, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i64 0, i64 0))
  store %struct.Value_Constructor* %9, %struct.Value_Constructor** %3, align 8
  %10 = load %struct.Value_Constructor*, %struct.Value_Constructor** %3, align 8
  %11 = bitcast %struct.Value_Constructor* %10 to %struct.Value*
  store %struct.Value* %11, %struct.Value** %4, align 8
  %12 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %12, %struct.Value_Arglist** %5, align 8
  %13 = load %struct.Value*, %struct.Value** %4, align 8
  %14 = call %struct.Value* @newReference(%struct.Value* noundef %13)
  %15 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %16 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %15, i32 0, i32 3
  %17 = load %struct.Value**, %struct.Value*** %16, align 8
  %18 = getelementptr inbounds %struct.Value*, %struct.Value** %17, i64 0
  store %struct.Value* %14, %struct.Value** %18, align 8
  %19 = load %struct.Value*, %struct.Value** %2, align 8
  %20 = call %struct.Value* @newReference(%struct.Value* noundef %19)
  %21 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %22 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %21, i32 0, i32 3
  %23 = load %struct.Value**, %struct.Value*** %22, align 8
  %24 = getelementptr inbounds %struct.Value*, %struct.Value** %23, i64 1
  store %struct.Value* %20, %struct.Value** %24, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showPrec_Show_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %25 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %26 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %27 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %25, %struct.Value_Arglist* noundef %26)
  %28 = bitcast %struct.Value_Closure* %27 to %struct.Value*
  store %struct.Value* %28, %struct.Value** %7, align 8
  %29 = load %struct.Value*, %struct.Value** %7, align 8
  store %struct.Value* %29, %struct.Value** %8, align 8
  %30 = load %struct.Value*, %struct.Value** %4, align 8
  call void @removeReference(%struct.Value* noundef %30)
  %31 = load %struct.Value*, %struct.Value** %8, align 8
  ret %struct.Value* %31
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_show_Show__parenOpenList__dollara_parenClose(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value_Arglist*, align 8
  %8 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value*, align 8
  %11 = alloca %struct.Value*, align 8
  %12 = alloca %struct.Value*, align 8
  %13 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %14 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53, i64 0, i64 0))
  %15 = bitcast %struct.Value_String* %14 to %struct.Value*
  store %struct.Value* %15, %struct.Value** %5, align 8
  %16 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.54, i64 0, i64 0))
  %17 = bitcast %struct.Value_String* %16 to %struct.Value*
  store %struct.Value* %17, %struct.Value** %6, align 8
  %18 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 4)
  store %struct.Value_Arglist* %18, %struct.Value_Arglist** %7, align 8
  %19 = load %struct.Value*, %struct.Value** %3, align 8
  %20 = call %struct.Value* @newReference(%struct.Value* noundef %19)
  %21 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %22 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %21, i32 0, i32 3
  %23 = load %struct.Value**, %struct.Value*** %22, align 8
  %24 = getelementptr inbounds %struct.Value*, %struct.Value** %23, i64 0
  store %struct.Value* %20, %struct.Value** %24, align 8
  %25 = load %struct.Value*, %struct.Value** %4, align 8
  %26 = call %struct.Value* @newReference(%struct.Value* noundef %25)
  %27 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %28 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %27, i32 0, i32 3
  %29 = load %struct.Value**, %struct.Value*** %28, align 8
  %30 = getelementptr inbounds %struct.Value*, %struct.Value** %29, i64 1
  store %struct.Value* %26, %struct.Value** %30, align 8
  %31 = load %struct.Value*, %struct.Value** %6, align 8
  %32 = call %struct.Value* @newReference(%struct.Value* noundef %31)
  %33 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %34 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %33, i32 0, i32 3
  %35 = load %struct.Value**, %struct.Value*** %34, align 8
  %36 = getelementptr inbounds %struct.Value*, %struct.Value** %35, i64 2
  store %struct.Value* %32, %struct.Value** %36, align 8
  %37 = load %struct.Value*, %struct.Value** %4, align 8
  %38 = call %struct.Value* @newReference(%struct.Value* noundef %37)
  %39 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %40 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %39, i32 0, i32 3
  %41 = load %struct.Value**, %struct.Value*** %40, align 8
  %42 = getelementptr inbounds %struct.Value*, %struct.Value** %41, i64 3
  store %struct.Value* %38, %struct.Value** %42, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_n___parenOpen3221_comma_12652_parenClose_show_tick_arglist, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %43 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %44 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %45 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %43, %struct.Value_Arglist* noundef %44)
  %46 = bitcast %struct.Value_Closure* %45 to %struct.Value*
  store %struct.Value* %46, %struct.Value** %9, align 8
  %47 = load %struct.Value*, %struct.Value** %9, align 8
  %48 = call %struct.Value* @trampoline(%struct.Value* noundef %47)
  store %struct.Value* %48, %struct.Value** %10, align 8
  %49 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i64 0, i64 0))
  %50 = bitcast %struct.Value_String* %49 to %struct.Value*
  store %struct.Value* %50, %struct.Value** %11, align 8
  %51 = load %struct.Value*, %struct.Value** %10, align 8
  %52 = load %struct.Value*, %struct.Value** %11, align 8
  %53 = call %struct.Value* @strAppend(%struct.Value* noundef %51, %struct.Value* noundef %52)
  store %struct.Value* %53, %struct.Value** %12, align 8
  %54 = load %struct.Value*, %struct.Value** %5, align 8
  %55 = load %struct.Value*, %struct.Value** %12, align 8
  %56 = call %struct.Value* @strAppend(%struct.Value* noundef %54, %struct.Value* noundef %55)
  store %struct.Value* %56, %struct.Value** %13, align 8
  %57 = load %struct.Value*, %struct.Value** %12, align 8
  call void @removeReference(%struct.Value* noundef %57)
  %58 = load %struct.Value*, %struct.Value** %11, align 8
  call void @removeReference(%struct.Value* noundef %58)
  %59 = load %struct.Value*, %struct.Value** %10, align 8
  call void @removeReference(%struct.Value* noundef %59)
  %60 = load %struct.Value*, %struct.Value** %6, align 8
  call void @removeReference(%struct.Value* noundef %60)
  %61 = load %struct.Value*, %struct.Value** %5, align 8
  call void @removeReference(%struct.Value* noundef %61)
  %62 = load %struct.Value*, %struct.Value** %13, align 8
  ret %struct.Value* %62
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showPrec_Show_Int(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value_Arglist*, align 8
  %9 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %10 = alloca %struct.Value*, align 8
  %11 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %12 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 1)
  store %struct.Value_Arglist* %12, %struct.Value_Arglist** %5, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showPrec_Show_Int_0_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %13 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %14 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %15 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %13, %struct.Value_Arglist* noundef %14)
  %16 = bitcast %struct.Value_Closure* %15 to %struct.Value*
  store %struct.Value* %16, %struct.Value** %7, align 8
  %17 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 3)
  store %struct.Value_Arglist* %17, %struct.Value_Arglist** %8, align 8
  %18 = load %struct.Value*, %struct.Value** %7, align 8
  %19 = call %struct.Value* @newReference(%struct.Value* noundef %18)
  %20 = load %struct.Value_Arglist*, %struct.Value_Arglist** %8, align 8
  %21 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %20, i32 0, i32 3
  %22 = load %struct.Value**, %struct.Value*** %21, align 8
  %23 = getelementptr inbounds %struct.Value*, %struct.Value** %22, i64 0
  store %struct.Value* %19, %struct.Value** %23, align 8
  %24 = load %struct.Value*, %struct.Value** %3, align 8
  %25 = call %struct.Value* @newReference(%struct.Value* noundef %24)
  %26 = load %struct.Value_Arglist*, %struct.Value_Arglist** %8, align 8
  %27 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %26, i32 0, i32 3
  %28 = load %struct.Value**, %struct.Value*** %27, align 8
  %29 = getelementptr inbounds %struct.Value*, %struct.Value** %28, i64 1
  store %struct.Value* %25, %struct.Value** %29, align 8
  %30 = load %struct.Value*, %struct.Value** %4, align 8
  %31 = call %struct.Value* @newReference(%struct.Value* noundef %30)
  %32 = load %struct.Value_Arglist*, %struct.Value_Arglist** %8, align 8
  %33 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %32, i32 0, i32 3
  %34 = load %struct.Value**, %struct.Value*** %33, align 8
  %35 = getelementptr inbounds %struct.Value*, %struct.Value** %34, i64 2
  store %struct.Value* %31, %struct.Value** %35, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_primNumShow_arglist, %struct.Value* (%struct.Value_Arglist*)** %9, align 8
  %36 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %9, align 8
  %37 = load %struct.Value_Arglist*, %struct.Value_Arglist** %8, align 8
  %38 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %36, %struct.Value_Arglist* noundef %37)
  %39 = bitcast %struct.Value_Closure* %38 to %struct.Value*
  store %struct.Value* %39, %struct.Value** %10, align 8
  %40 = load %struct.Value*, %struct.Value** %10, align 8
  store %struct.Value* %40, %struct.Value** %11, align 8
  %41 = load %struct.Value*, %struct.Value** %7, align 8
  call void @removeReference(%struct.Value* noundef %41)
  %42 = load %struct.Value*, %struct.Value** %11, align 8
  ret %struct.Value* %42
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showPrec_Show_Int_0_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Show_showPrec_Show_Int_0(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_primNumShow_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %14 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %13, i32 0, i32 3
  %15 = load %struct.Value**, %struct.Value*** %14, align 8
  %16 = getelementptr inbounds %struct.Value*, %struct.Value** %15, i64 2
  %17 = load %struct.Value*, %struct.Value** %16, align 8
  %18 = call %struct.Value* @Prelude_Show_primNumShow(%struct.Value* noundef %7, %struct.Value* noundef %12, %struct.Value* noundef %17)
  ret %struct.Value* %18
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showPrec_Show_Int_0(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %4 = load %struct.Value*, %struct.Value** %2, align 8
  %5 = call %struct.Value* @cast_Int64_to_string(%struct.Value* noundef %4)
  store %struct.Value* %5, %struct.Value** %3, align 8
  %6 = load %struct.Value*, %struct.Value** %3, align 8
  ret %struct.Value* %6
}

declare %struct.Value* @cast_Int64_to_string(%struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_compare_Ord_Prec(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.AConAlt*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.AConAlt*, align 8
  %10 = alloca %struct.Value*, align 8
  %11 = alloca %struct.Value_Arglist*, align 8
  %12 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %13 = alloca %struct.Value*, align 8
  %14 = alloca %struct.Value_Arglist*, align 8
  %15 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %16 = alloca %struct.Value*, align 8
  %17 = alloca %struct.Value*, align 8
  %18 = alloca %struct.Value_Arglist*, align 8
  %19 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %20 = alloca %struct.Value*, align 8
  %21 = alloca %struct.Value*, align 8
  %22 = alloca %struct.Value_Arglist*, align 8
  %23 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %24 = alloca %struct.Value*, align 8
  %25 = alloca %struct.Value_Arglist*, align 8
  %26 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %27 = alloca %struct.Value*, align 8
  %28 = alloca %struct.Value*, align 8
  %29 = alloca %struct.Value_Arglist*, align 8
  %30 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %31 = alloca %struct.Value*, align 8
  %32 = alloca %struct.Value*, align 8
  %33 = alloca %struct.Value_Arglist*, align 8
  %34 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %35 = alloca %struct.Value*, align 8
  %36 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  store %struct.Value* null, %struct.Value** %5, align 8
  %37 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %37, %struct.AConAlt** %6, align 8
  %38 = load %struct.AConAlt*, %struct.AConAlt** %6, align 8
  %39 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %38, i64 0
  %40 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %39, i32 0, i32 1
  store i32 4, i32* %40, align 8
  %41 = load %struct.AConAlt*, %struct.AConAlt** %6, align 8
  %42 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %41, i64 0
  %43 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %42, i32 0, i32 0
  store i8* null, i8** %43, align 8
  %44 = load %struct.Value*, %struct.Value** %3, align 8
  %45 = load %struct.AConAlt*, %struct.AConAlt** %6, align 8
  %46 = call i32 @compareConstructors(%struct.Value* noundef %44, %struct.AConAlt* noundef %45, i32 noundef 1)
  switch i32 %46, label %140 [
    i32 0, label %47
  ]

47:                                               ; preds = %2
  %48 = load %struct.Value*, %struct.Value** %3, align 8
  %49 = bitcast %struct.Value* %48 to %struct.Value_Constructor*
  %50 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %49, i32 0, i32 4
  %51 = load %struct.Value**, %struct.Value*** %50, align 8
  %52 = getelementptr inbounds %struct.Value*, %struct.Value** %51, i64 0
  %53 = load %struct.Value*, %struct.Value** %52, align 8
  store %struct.Value* %53, %struct.Value** %7, align 8
  store %struct.Value* null, %struct.Value** %8, align 8
  %54 = call %struct.AConAlt* @newConstructorField(i32 noundef 1)
  store %struct.AConAlt* %54, %struct.AConAlt** %9, align 8
  %55 = load %struct.AConAlt*, %struct.AConAlt** %9, align 8
  %56 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %55, i64 0
  %57 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %56, i32 0, i32 1
  store i32 4, i32* %57, align 8
  %58 = load %struct.AConAlt*, %struct.AConAlt** %9, align 8
  %59 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %58, i64 0
  %60 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %59, i32 0, i32 0
  store i8* null, i8** %60, align 8
  %61 = load %struct.Value*, %struct.Value** %4, align 8
  %62 = load %struct.AConAlt*, %struct.AConAlt** %9, align 8
  %63 = call i32 @compareConstructors(%struct.Value* noundef %61, %struct.AConAlt* noundef %62, i32 noundef 1)
  switch i32 %63, label %89 [
    i32 0, label %64
  ]

64:                                               ; preds = %47
  %65 = load %struct.Value*, %struct.Value** %4, align 8
  %66 = bitcast %struct.Value* %65 to %struct.Value_Constructor*
  %67 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %66, i32 0, i32 4
  %68 = load %struct.Value**, %struct.Value*** %67, align 8
  %69 = getelementptr inbounds %struct.Value*, %struct.Value** %68, i64 0
  %70 = load %struct.Value*, %struct.Value** %69, align 8
  store %struct.Value* %70, %struct.Value** %10, align 8
  %71 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %71, %struct.Value_Arglist** %11, align 8
  %72 = load %struct.Value*, %struct.Value** %7, align 8
  %73 = call %struct.Value* @newReference(%struct.Value* noundef %72)
  %74 = load %struct.Value_Arglist*, %struct.Value_Arglist** %11, align 8
  %75 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %74, i32 0, i32 3
  %76 = load %struct.Value**, %struct.Value*** %75, align 8
  %77 = getelementptr inbounds %struct.Value*, %struct.Value** %76, i64 0
  store %struct.Value* %73, %struct.Value** %77, align 8
  %78 = load %struct.Value*, %struct.Value** %10, align 8
  %79 = call %struct.Value* @newReference(%struct.Value* noundef %78)
  %80 = load %struct.Value_Arglist*, %struct.Value_Arglist** %11, align 8
  %81 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %80, i32 0, i32 3
  %82 = load %struct.Value**, %struct.Value*** %81, align 8
  %83 = getelementptr inbounds %struct.Value*, %struct.Value** %82, i64 1
  store %struct.Value* %79, %struct.Value** %83, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd_compare_Ord_Integer_arglist, %struct.Value* (%struct.Value_Arglist*)** %12, align 8
  %84 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %12, align 8
  %85 = load %struct.Value_Arglist*, %struct.Value_Arglist** %11, align 8
  %86 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %84, %struct.Value_Arglist* noundef %85)
  %87 = bitcast %struct.Value_Closure* %86 to %struct.Value*
  store %struct.Value* %87, %struct.Value** %13, align 8
  %88 = load %struct.Value*, %struct.Value** %13, align 8
  store %struct.Value* %88, %struct.Value** %8, align 8
  br label %136

89:                                               ; preds = %47
  %90 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %90, %struct.Value_Arglist** %14, align 8
  %91 = load %struct.Value*, %struct.Value** %3, align 8
  %92 = call %struct.Value* @newReference(%struct.Value* noundef %91)
  %93 = load %struct.Value_Arglist*, %struct.Value_Arglist** %14, align 8
  %94 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %93, i32 0, i32 3
  %95 = load %struct.Value**, %struct.Value*** %94, align 8
  %96 = getelementptr inbounds %struct.Value*, %struct.Value** %95, i64 0
  store %struct.Value* %92, %struct.Value** %96, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_precCon_arglist, %struct.Value* (%struct.Value_Arglist*)** %15, align 8
  %97 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %15, align 8
  %98 = load %struct.Value_Arglist*, %struct.Value_Arglist** %14, align 8
  %99 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %97, %struct.Value_Arglist* noundef %98)
  %100 = bitcast %struct.Value_Closure* %99 to %struct.Value*
  store %struct.Value* %100, %struct.Value** %16, align 8
  %101 = load %struct.Value*, %struct.Value** %16, align 8
  %102 = call %struct.Value* @trampoline(%struct.Value* noundef %101)
  store %struct.Value* %102, %struct.Value** %17, align 8
  %103 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %103, %struct.Value_Arglist** %18, align 8
  %104 = load %struct.Value*, %struct.Value** %4, align 8
  %105 = call %struct.Value* @newReference(%struct.Value* noundef %104)
  %106 = load %struct.Value_Arglist*, %struct.Value_Arglist** %18, align 8
  %107 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %106, i32 0, i32 3
  %108 = load %struct.Value**, %struct.Value*** %107, align 8
  %109 = getelementptr inbounds %struct.Value*, %struct.Value** %108, i64 0
  store %struct.Value* %105, %struct.Value** %109, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_precCon_arglist, %struct.Value* (%struct.Value_Arglist*)** %19, align 8
  %110 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %19, align 8
  %111 = load %struct.Value_Arglist*, %struct.Value_Arglist** %18, align 8
  %112 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %110, %struct.Value_Arglist* noundef %111)
  %113 = bitcast %struct.Value_Closure* %112 to %struct.Value*
  store %struct.Value* %113, %struct.Value** %20, align 8
  %114 = load %struct.Value*, %struct.Value** %20, align 8
  %115 = call %struct.Value* @trampoline(%struct.Value* noundef %114)
  store %struct.Value* %115, %struct.Value** %21, align 8
  %116 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %116, %struct.Value_Arglist** %22, align 8
  %117 = load %struct.Value*, %struct.Value** %17, align 8
  %118 = call %struct.Value* @newReference(%struct.Value* noundef %117)
  %119 = load %struct.Value_Arglist*, %struct.Value_Arglist** %22, align 8
  %120 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %119, i32 0, i32 3
  %121 = load %struct.Value**, %struct.Value*** %120, align 8
  %122 = getelementptr inbounds %struct.Value*, %struct.Value** %121, i64 0
  store %struct.Value* %118, %struct.Value** %122, align 8
  %123 = load %struct.Value*, %struct.Value** %21, align 8
  %124 = call %struct.Value* @newReference(%struct.Value* noundef %123)
  %125 = load %struct.Value_Arglist*, %struct.Value_Arglist** %22, align 8
  %126 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %125, i32 0, i32 3
  %127 = load %struct.Value**, %struct.Value*** %126, align 8
  %128 = getelementptr inbounds %struct.Value*, %struct.Value** %127, i64 1
  store %struct.Value* %124, %struct.Value** %128, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd_compare_Ord_Integer_arglist, %struct.Value* (%struct.Value_Arglist*)** %23, align 8
  %129 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %23, align 8
  %130 = load %struct.Value_Arglist*, %struct.Value_Arglist** %22, align 8
  %131 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %129, %struct.Value_Arglist* noundef %130)
  %132 = bitcast %struct.Value_Closure* %131 to %struct.Value*
  store %struct.Value* %132, %struct.Value** %24, align 8
  %133 = load %struct.Value*, %struct.Value** %24, align 8
  store %struct.Value* %133, %struct.Value** %8, align 8
  %134 = load %struct.Value*, %struct.Value** %21, align 8
  call void @removeReference(%struct.Value* noundef %134)
  %135 = load %struct.Value*, %struct.Value** %17, align 8
  call void @removeReference(%struct.Value* noundef %135)
  br label %136

136:                                              ; preds = %89, %64
  %137 = load %struct.AConAlt*, %struct.AConAlt** %9, align 8
  %138 = bitcast %struct.AConAlt* %137 to i8*
  call void @free(i8* noundef %138)
  %139 = load %struct.Value*, %struct.Value** %8, align 8
  store %struct.Value* %139, %struct.Value** %5, align 8
  br label %187

140:                                              ; preds = %2
  %141 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %141, %struct.Value_Arglist** %25, align 8
  %142 = load %struct.Value*, %struct.Value** %3, align 8
  %143 = call %struct.Value* @newReference(%struct.Value* noundef %142)
  %144 = load %struct.Value_Arglist*, %struct.Value_Arglist** %25, align 8
  %145 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %144, i32 0, i32 3
  %146 = load %struct.Value**, %struct.Value*** %145, align 8
  %147 = getelementptr inbounds %struct.Value*, %struct.Value** %146, i64 0
  store %struct.Value* %143, %struct.Value** %147, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_precCon_arglist, %struct.Value* (%struct.Value_Arglist*)** %26, align 8
  %148 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %26, align 8
  %149 = load %struct.Value_Arglist*, %struct.Value_Arglist** %25, align 8
  %150 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %148, %struct.Value_Arglist* noundef %149)
  %151 = bitcast %struct.Value_Closure* %150 to %struct.Value*
  store %struct.Value* %151, %struct.Value** %27, align 8
  %152 = load %struct.Value*, %struct.Value** %27, align 8
  %153 = call %struct.Value* @trampoline(%struct.Value* noundef %152)
  store %struct.Value* %153, %struct.Value** %28, align 8
  %154 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %154, %struct.Value_Arglist** %29, align 8
  %155 = load %struct.Value*, %struct.Value** %4, align 8
  %156 = call %struct.Value* @newReference(%struct.Value* noundef %155)
  %157 = load %struct.Value_Arglist*, %struct.Value_Arglist** %29, align 8
  %158 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %157, i32 0, i32 3
  %159 = load %struct.Value**, %struct.Value*** %158, align 8
  %160 = getelementptr inbounds %struct.Value*, %struct.Value** %159, i64 0
  store %struct.Value* %156, %struct.Value** %160, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_precCon_arglist, %struct.Value* (%struct.Value_Arglist*)** %30, align 8
  %161 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %30, align 8
  %162 = load %struct.Value_Arglist*, %struct.Value_Arglist** %29, align 8
  %163 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %161, %struct.Value_Arglist* noundef %162)
  %164 = bitcast %struct.Value_Closure* %163 to %struct.Value*
  store %struct.Value* %164, %struct.Value** %31, align 8
  %165 = load %struct.Value*, %struct.Value** %31, align 8
  %166 = call %struct.Value* @trampoline(%struct.Value* noundef %165)
  store %struct.Value* %166, %struct.Value** %32, align 8
  %167 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %167, %struct.Value_Arglist** %33, align 8
  %168 = load %struct.Value*, %struct.Value** %28, align 8
  %169 = call %struct.Value* @newReference(%struct.Value* noundef %168)
  %170 = load %struct.Value_Arglist*, %struct.Value_Arglist** %33, align 8
  %171 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %170, i32 0, i32 3
  %172 = load %struct.Value**, %struct.Value*** %171, align 8
  %173 = getelementptr inbounds %struct.Value*, %struct.Value** %172, i64 0
  store %struct.Value* %169, %struct.Value** %173, align 8
  %174 = load %struct.Value*, %struct.Value** %32, align 8
  %175 = call %struct.Value* @newReference(%struct.Value* noundef %174)
  %176 = load %struct.Value_Arglist*, %struct.Value_Arglist** %33, align 8
  %177 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %176, i32 0, i32 3
  %178 = load %struct.Value**, %struct.Value*** %177, align 8
  %179 = getelementptr inbounds %struct.Value*, %struct.Value** %178, i64 1
  store %struct.Value* %175, %struct.Value** %179, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd_compare_Ord_Integer_arglist, %struct.Value* (%struct.Value_Arglist*)** %34, align 8
  %180 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %34, align 8
  %181 = load %struct.Value_Arglist*, %struct.Value_Arglist** %33, align 8
  %182 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %180, %struct.Value_Arglist* noundef %181)
  %183 = bitcast %struct.Value_Closure* %182 to %struct.Value*
  store %struct.Value* %183, %struct.Value** %35, align 8
  %184 = load %struct.Value*, %struct.Value** %35, align 8
  store %struct.Value* %184, %struct.Value** %5, align 8
  %185 = load %struct.Value*, %struct.Value** %32, align 8
  call void @removeReference(%struct.Value* noundef %185)
  %186 = load %struct.Value*, %struct.Value** %28, align 8
  call void @removeReference(%struct.Value* noundef %186)
  br label %187

187:                                              ; preds = %140, %136
  %188 = load %struct.AConAlt*, %struct.AConAlt** %6, align 8
  %189 = bitcast %struct.AConAlt* %188 to i8*
  call void @free(i8* noundef %189)
  %190 = load %struct.Value*, %struct.Value** %5, align 8
  store %struct.Value* %190, %struct.Value** %36, align 8
  %191 = load %struct.Value*, %struct.Value** %36, align 8
  ret %struct.Value* %191
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_precCon_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Show_precCon(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_compare_Ord_Prec_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_Show_compare_Ord_Prec(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show__gt_eq_Ord_Prec(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value_Arglist*, align 8
  %6 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value_Arglist*, align 8
  %11 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %12 = alloca %struct.Value*, align 8
  %13 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %14 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %14, %struct.Value_Arglist** %5, align 8
  %15 = load %struct.Value*, %struct.Value** %3, align 8
  %16 = call %struct.Value* @newReference(%struct.Value* noundef %15)
  %17 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %18 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %17, i32 0, i32 3
  %19 = load %struct.Value**, %struct.Value*** %18, align 8
  %20 = getelementptr inbounds %struct.Value*, %struct.Value** %19, i64 0
  store %struct.Value* %16, %struct.Value** %20, align 8
  %21 = load %struct.Value*, %struct.Value** %4, align 8
  %22 = call %struct.Value* @newReference(%struct.Value* noundef %21)
  %23 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %24 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %23, i32 0, i32 3
  %25 = load %struct.Value**, %struct.Value*** %24, align 8
  %26 = getelementptr inbounds %struct.Value*, %struct.Value** %25, i64 1
  store %struct.Value* %22, %struct.Value** %26, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_compare_Ord_Prec_arglist, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %27 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %6, align 8
  %28 = load %struct.Value_Arglist*, %struct.Value_Arglist** %5, align 8
  %29 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %27, %struct.Value_Arglist* noundef %28)
  %30 = bitcast %struct.Value_Closure* %29 to %struct.Value*
  store %struct.Value* %30, %struct.Value** %7, align 8
  %31 = load %struct.Value*, %struct.Value** %7, align 8
  %32 = call %struct.Value* @trampoline(%struct.Value* noundef %31)
  store %struct.Value* %32, %struct.Value** %8, align 8
  %33 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %34 = bitcast %struct.Value_Bits8* %33 to %struct.Value*
  store %struct.Value* %34, %struct.Value** %9, align 8
  %35 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %35, %struct.Value_Arglist** %10, align 8
  %36 = load %struct.Value*, %struct.Value** %8, align 8
  %37 = call %struct.Value* @newReference(%struct.Value* noundef %36)
  %38 = load %struct.Value_Arglist*, %struct.Value_Arglist** %10, align 8
  %39 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %38, i32 0, i32 3
  %40 = load %struct.Value**, %struct.Value*** %39, align 8
  %41 = getelementptr inbounds %struct.Value*, %struct.Value** %40, i64 0
  store %struct.Value* %37, %struct.Value** %41, align 8
  %42 = load %struct.Value*, %struct.Value** %9, align 8
  %43 = call %struct.Value* @newReference(%struct.Value* noundef %42)
  %44 = load %struct.Value_Arglist*, %struct.Value_Arglist** %10, align 8
  %45 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %44, i32 0, i32 3
  %46 = load %struct.Value**, %struct.Value*** %45, align 8
  %47 = getelementptr inbounds %struct.Value*, %struct.Value** %46, i64 1
  store %struct.Value* %43, %struct.Value** %47, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__slash_eq_Eq_Ordering_arglist, %struct.Value* (%struct.Value_Arglist*)** %11, align 8
  %48 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %11, align 8
  %49 = load %struct.Value_Arglist*, %struct.Value_Arglist** %10, align 8
  %50 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %48, %struct.Value_Arglist* noundef %49)
  %51 = bitcast %struct.Value_Closure* %50 to %struct.Value*
  store %struct.Value* %51, %struct.Value** %12, align 8
  %52 = load %struct.Value*, %struct.Value** %12, align 8
  store %struct.Value* %52, %struct.Value** %13, align 8
  %53 = load %struct.Value*, %struct.Value** %9, align 8
  call void @removeReference(%struct.Value* noundef %53)
  %54 = load %struct.Value*, %struct.Value** %8, align 8
  call void @removeReference(%struct.Value* noundef %54)
  %55 = load %struct.Value*, %struct.Value** %13, align 8
  ret %struct.Value* %55
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show__gt_eq_Ord_Prec_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_Show__gt_eq_Ord_Prec(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showParens(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  store %struct.Value* null, %struct.Value** %5, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  %11 = call i32 @extractInt(%struct.Value* noundef %10)
  switch i32 %11, label %29 [
    i32 0, label %12
    i32 1, label %15
  ]

12:                                               ; preds = %2
  %13 = load %struct.Value*, %struct.Value** %4, align 8
  %14 = call %struct.Value* @newReference(%struct.Value* noundef %13)
  store %struct.Value* %14, %struct.Value** %5, align 8
  br label %29

15:                                               ; preds = %2
  %16 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.56, i64 0, i64 0))
  %17 = bitcast %struct.Value_String* %16 to %struct.Value*
  store %struct.Value* %17, %struct.Value** %6, align 8
  %18 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.57, i64 0, i64 0))
  %19 = bitcast %struct.Value_String* %18 to %struct.Value*
  store %struct.Value* %19, %struct.Value** %7, align 8
  %20 = load %struct.Value*, %struct.Value** %4, align 8
  %21 = load %struct.Value*, %struct.Value** %7, align 8
  %22 = call %struct.Value* @strAppend(%struct.Value* noundef %20, %struct.Value* noundef %21)
  store %struct.Value* %22, %struct.Value** %8, align 8
  %23 = load %struct.Value*, %struct.Value** %6, align 8
  %24 = load %struct.Value*, %struct.Value** %8, align 8
  %25 = call %struct.Value* @strAppend(%struct.Value* noundef %23, %struct.Value* noundef %24)
  store %struct.Value* %25, %struct.Value** %5, align 8
  %26 = load %struct.Value*, %struct.Value** %8, align 8
  call void @removeReference(%struct.Value* noundef %26)
  %27 = load %struct.Value*, %struct.Value** %7, align 8
  call void @removeReference(%struct.Value* noundef %27)
  %28 = load %struct.Value*, %struct.Value** %6, align 8
  call void @removeReference(%struct.Value* noundef %28)
  br label %29

29:                                               ; preds = %2, %15, %12
  %30 = load %struct.Value*, %struct.Value** %5, align 8
  store %struct.Value* %30, %struct.Value** %9, align 8
  %31 = load %struct.Value*, %struct.Value** %9, align 8
  ret %struct.Value* %31
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showParens_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_Show_showParens(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitString(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value_Arglist*, align 8
  %4 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %5 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %6 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 2)
  store %struct.Value_Arglist* %6, %struct.Value_Arglist** %3, align 8
  %7 = load %struct.Value*, %struct.Value** %2, align 8
  %8 = call %struct.Value* @newReference(%struct.Value* noundef %7)
  %9 = load %struct.Value_Arglist*, %struct.Value_Arglist** %3, align 8
  %10 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %9, i32 0, i32 3
  %11 = load %struct.Value**, %struct.Value*** %10, align 8
  %12 = getelementptr inbounds %struct.Value*, %struct.Value** %11, i64 0
  store %struct.Value* %8, %struct.Value** %12, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showLitString_0_arglist, %struct.Value* (%struct.Value_Arglist*)** %4, align 8
  %13 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %4, align 8
  %14 = load %struct.Value_Arglist*, %struct.Value_Arglist** %3, align 8
  %15 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %13, %struct.Value_Arglist* noundef %14)
  %16 = bitcast %struct.Value_Closure* %15 to %struct.Value*
  store %struct.Value* %16, %struct.Value** %5, align 8
  %17 = load %struct.Value*, %struct.Value** %5, align 8
  ret %struct.Value* %17
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitString_0_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_Show_showLitString_0(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitString_0(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.AConAlt*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value*, align 8
  %11 = alloca %struct.Value_Arglist*, align 8
  %12 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %13 = alloca %struct.Value*, align 8
  %14 = alloca %struct.Value*, align 8
  %15 = alloca %struct.Value*, align 8
  %16 = alloca %struct.Value_Arglist*, align 8
  %17 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %18 = alloca %struct.Value*, align 8
  %19 = alloca %struct.Value*, align 8
  %20 = alloca %struct.Value_Arglist*, align 8
  %21 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %22 = alloca %struct.Value*, align 8
  %23 = alloca %struct.Value*, align 8
  %24 = alloca %struct.Value*, align 8
  %25 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  store %struct.Value* null, %struct.Value** %5, align 8
  %26 = call %struct.AConAlt* @newConstructorField(i32 noundef 2)
  store %struct.AConAlt* %26, %struct.AConAlt** %6, align 8
  %27 = load %struct.AConAlt*, %struct.AConAlt** %6, align 8
  %28 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %27, i64 0
  %29 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %28, i32 0, i32 1
  store i32 0, i32* %29, align 8
  %30 = load %struct.AConAlt*, %struct.AConAlt** %6, align 8
  %31 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %30, i64 0
  %32 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %31, i32 0, i32 0
  store i8* null, i8** %32, align 8
  %33 = load %struct.AConAlt*, %struct.AConAlt** %6, align 8
  %34 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %33, i64 1
  %35 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %34, i32 0, i32 1
  store i32 1, i32* %35, align 8
  %36 = load %struct.AConAlt*, %struct.AConAlt** %6, align 8
  %37 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %36, i64 1
  %38 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %37, i32 0, i32 0
  store i8* null, i8** %38, align 8
  %39 = load %struct.Value*, %struct.Value** %3, align 8
  %40 = load %struct.AConAlt*, %struct.AConAlt** %6, align 8
  %41 = call i32 @compareConstructors(%struct.Value* noundef %39, %struct.AConAlt* noundef %40, i32 noundef 2)
  switch i32 %41, label %123 [
    i32 0, label %42
    i32 1, label %45
  ]

42:                                               ; preds = %2
  %43 = load %struct.Value*, %struct.Value** %4, align 8
  %44 = call %struct.Value* @newReference(%struct.Value* noundef %43)
  store %struct.Value* %44, %struct.Value** %5, align 8
  br label %123

45:                                               ; preds = %2
  %46 = load %struct.Value*, %struct.Value** %3, align 8
  %47 = bitcast %struct.Value* %46 to %struct.Value_Constructor*
  %48 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %47, i32 0, i32 4
  %49 = load %struct.Value**, %struct.Value*** %48, align 8
  %50 = getelementptr inbounds %struct.Value*, %struct.Value** %49, i64 0
  %51 = load %struct.Value*, %struct.Value** %50, align 8
  store %struct.Value* %51, %struct.Value** %7, align 8
  %52 = load %struct.Value*, %struct.Value** %3, align 8
  %53 = bitcast %struct.Value* %52 to %struct.Value_Constructor*
  %54 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %53, i32 0, i32 4
  %55 = load %struct.Value**, %struct.Value*** %54, align 8
  %56 = getelementptr inbounds %struct.Value*, %struct.Value** %55, i64 1
  %57 = load %struct.Value*, %struct.Value** %56, align 8
  store %struct.Value* %57, %struct.Value** %8, align 8
  store %struct.Value* null, %struct.Value** %9, align 8
  %58 = load %struct.Value*, %struct.Value** %7, align 8
  %59 = call i32 @extractInt(%struct.Value* noundef %58)
  switch i32 %59, label %85 [
    i32 34, label %60
  ]

60:                                               ; preds = %45
  %61 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58, i64 0, i64 0))
  %62 = bitcast %struct.Value_String* %61 to %struct.Value*
  store %struct.Value* %62, %struct.Value** %10, align 8
  %63 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %63, %struct.Value_Arglist** %11, align 8
  %64 = load %struct.Value*, %struct.Value** %8, align 8
  %65 = call %struct.Value* @newReference(%struct.Value* noundef %64)
  %66 = load %struct.Value_Arglist*, %struct.Value_Arglist** %11, align 8
  %67 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %66, i32 0, i32 3
  %68 = load %struct.Value**, %struct.Value*** %67, align 8
  %69 = getelementptr inbounds %struct.Value*, %struct.Value** %68, i64 0
  store %struct.Value* %65, %struct.Value** %69, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showLitString_arglist, %struct.Value* (%struct.Value_Arglist*)** %12, align 8
  %70 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %12, align 8
  %71 = load %struct.Value_Arglist*, %struct.Value_Arglist** %11, align 8
  %72 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %70, %struct.Value_Arglist* noundef %71)
  %73 = bitcast %struct.Value_Closure* %72 to %struct.Value*
  store %struct.Value* %73, %struct.Value** %13, align 8
  %74 = load %struct.Value*, %struct.Value** %13, align 8
  %75 = call %struct.Value* @trampoline(%struct.Value* noundef %74)
  store %struct.Value* %75, %struct.Value** %14, align 8
  %76 = load %struct.Value*, %struct.Value** %14, align 8
  %77 = load %struct.Value*, %struct.Value** %4, align 8
  %78 = call %struct.Value* @apply_closure(%struct.Value* noundef %76, %struct.Value* noundef %77)
  store %struct.Value* %78, %struct.Value** %15, align 8
  %79 = load %struct.Value*, %struct.Value** %10, align 8
  %80 = load %struct.Value*, %struct.Value** %15, align 8
  %81 = call %struct.Value* @strAppend(%struct.Value* noundef %79, %struct.Value* noundef %80)
  store %struct.Value* %81, %struct.Value** %9, align 8
  %82 = load %struct.Value*, %struct.Value** %15, align 8
  call void @removeReference(%struct.Value* noundef %82)
  %83 = load %struct.Value*, %struct.Value** %14, align 8
  call void @removeReference(%struct.Value* noundef %83)
  %84 = load %struct.Value*, %struct.Value** %10, align 8
  call void @removeReference(%struct.Value* noundef %84)
  br label %121

85:                                               ; preds = %45
  %86 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %86, %struct.Value_Arglist** %16, align 8
  %87 = load %struct.Value*, %struct.Value** %7, align 8
  %88 = call %struct.Value* @newReference(%struct.Value* noundef %87)
  %89 = load %struct.Value_Arglist*, %struct.Value_Arglist** %16, align 8
  %90 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %89, i32 0, i32 3
  %91 = load %struct.Value**, %struct.Value*** %90, align 8
  %92 = getelementptr inbounds %struct.Value*, %struct.Value** %91, i64 0
  store %struct.Value* %88, %struct.Value** %92, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showLitChar_arglist, %struct.Value* (%struct.Value_Arglist*)** %17, align 8
  %93 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %17, align 8
  %94 = load %struct.Value_Arglist*, %struct.Value_Arglist** %16, align 8
  %95 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %93, %struct.Value_Arglist* noundef %94)
  %96 = bitcast %struct.Value_Closure* %95 to %struct.Value*
  store %struct.Value* %96, %struct.Value** %18, align 8
  %97 = load %struct.Value*, %struct.Value** %18, align 8
  %98 = call %struct.Value* @trampoline(%struct.Value* noundef %97)
  store %struct.Value* %98, %struct.Value** %19, align 8
  %99 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %99, %struct.Value_Arglist** %20, align 8
  %100 = load %struct.Value*, %struct.Value** %8, align 8
  %101 = call %struct.Value* @newReference(%struct.Value* noundef %100)
  %102 = load %struct.Value_Arglist*, %struct.Value_Arglist** %20, align 8
  %103 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %102, i32 0, i32 3
  %104 = load %struct.Value**, %struct.Value*** %103, align 8
  %105 = getelementptr inbounds %struct.Value*, %struct.Value** %104, i64 0
  store %struct.Value* %101, %struct.Value** %105, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showLitString_arglist, %struct.Value* (%struct.Value_Arglist*)** %21, align 8
  %106 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %21, align 8
  %107 = load %struct.Value_Arglist*, %struct.Value_Arglist** %20, align 8
  %108 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %106, %struct.Value_Arglist* noundef %107)
  %109 = bitcast %struct.Value_Closure* %108 to %struct.Value*
  store %struct.Value* %109, %struct.Value** %22, align 8
  %110 = load %struct.Value*, %struct.Value** %22, align 8
  %111 = call %struct.Value* @trampoline(%struct.Value* noundef %110)
  store %struct.Value* %111, %struct.Value** %23, align 8
  %112 = load %struct.Value*, %struct.Value** %23, align 8
  %113 = load %struct.Value*, %struct.Value** %4, align 8
  %114 = call %struct.Value* @apply_closure(%struct.Value* noundef %112, %struct.Value* noundef %113)
  store %struct.Value* %114, %struct.Value** %24, align 8
  %115 = load %struct.Value*, %struct.Value** %19, align 8
  %116 = load %struct.Value*, %struct.Value** %24, align 8
  %117 = call %struct.Value* @tailcall_apply_closure(%struct.Value* noundef %115, %struct.Value* noundef %116)
  store %struct.Value* %117, %struct.Value** %9, align 8
  %118 = load %struct.Value*, %struct.Value** %24, align 8
  call void @removeReference(%struct.Value* noundef %118)
  %119 = load %struct.Value*, %struct.Value** %23, align 8
  call void @removeReference(%struct.Value* noundef %119)
  %120 = load %struct.Value*, %struct.Value** %19, align 8
  call void @removeReference(%struct.Value* noundef %120)
  br label %121

121:                                              ; preds = %85, %60
  %122 = load %struct.Value*, %struct.Value** %9, align 8
  store %struct.Value* %122, %struct.Value** %5, align 8
  br label %123

123:                                              ; preds = %2, %121, %42
  %124 = load %struct.AConAlt*, %struct.AConAlt** %6, align 8
  %125 = bitcast %struct.AConAlt* %124 to i8*
  call void @free(i8* noundef %125)
  %126 = load %struct.Value*, %struct.Value** %5, align 8
  store %struct.Value* %126, %struct.Value** %25, align 8
  %127 = load %struct.Value*, %struct.Value** %25, align 8
  ret %struct.Value* %127
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Show_showLitChar(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value_Arglist*, align 8
  %5 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %6 = alloca %struct.Value_Arglist*, align 8
  %7 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %8 = alloca %struct.Value_Arglist*, align 8
  %9 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %10 = alloca %struct.Value_Arglist*, align 8
  %11 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %12 = alloca %struct.Value_Arglist*, align 8
  %13 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %14 = alloca %struct.Value_Arglist*, align 8
  %15 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %16 = alloca %struct.Value_Arglist*, align 8
  %17 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %18 = alloca %struct.Value_Arglist*, align 8
  %19 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %20 = alloca %struct.Value_Arglist*, align 8
  %21 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %22 = alloca %struct.Value_Arglist*, align 8
  %23 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %24 = alloca %struct.Value_Arglist*, align 8
  %25 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %26 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  store %struct.Value* null, %struct.Value** %3, align 8
  %27 = load %struct.Value*, %struct.Value** %2, align 8
  %28 = call i32 @extractInt(%struct.Value* noundef %27)
  switch i32 %28, label %89 [
    i32 7, label %29
    i32 8, label %35
    i32 12, label %41
    i32 10, label %47
    i32 13, label %53
    i32 9, label %59
    i32 11, label %65
    i32 14, label %71
    i32 127, label %77
    i32 92, label %83
  ]

29:                                               ; preds = %1
  %30 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 1)
  store %struct.Value_Arglist* %30, %struct.Value_Arglist** %4, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showLitChar_0_arglist, %struct.Value* (%struct.Value_Arglist*)** %5, align 8
  %31 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %5, align 8
  %32 = load %struct.Value_Arglist*, %struct.Value_Arglist** %4, align 8
  %33 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %31, %struct.Value_Arglist* noundef %32)
  %34 = bitcast %struct.Value_Closure* %33 to %struct.Value*
  store %struct.Value* %34, %struct.Value** %3, align 8
  br label %101

35:                                               ; preds = %1
  %36 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 1)
  store %struct.Value_Arglist* %36, %struct.Value_Arglist** %6, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showLitChar_1_arglist, %struct.Value* (%struct.Value_Arglist*)** %7, align 8
  %37 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %7, align 8
  %38 = load %struct.Value_Arglist*, %struct.Value_Arglist** %6, align 8
  %39 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %37, %struct.Value_Arglist* noundef %38)
  %40 = bitcast %struct.Value_Closure* %39 to %struct.Value*
  store %struct.Value* %40, %struct.Value** %3, align 8
  br label %101

41:                                               ; preds = %1
  %42 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 1)
  store %struct.Value_Arglist* %42, %struct.Value_Arglist** %8, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showLitChar_2_arglist, %struct.Value* (%struct.Value_Arglist*)** %9, align 8
  %43 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %9, align 8
  %44 = load %struct.Value_Arglist*, %struct.Value_Arglist** %8, align 8
  %45 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %43, %struct.Value_Arglist* noundef %44)
  %46 = bitcast %struct.Value_Closure* %45 to %struct.Value*
  store %struct.Value* %46, %struct.Value** %3, align 8
  br label %101

47:                                               ; preds = %1
  %48 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 1)
  store %struct.Value_Arglist* %48, %struct.Value_Arglist** %10, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showLitChar_3_arglist, %struct.Value* (%struct.Value_Arglist*)** %11, align 8
  %49 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %11, align 8
  %50 = load %struct.Value_Arglist*, %struct.Value_Arglist** %10, align 8
  %51 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %49, %struct.Value_Arglist* noundef %50)
  %52 = bitcast %struct.Value_Closure* %51 to %struct.Value*
  store %struct.Value* %52, %struct.Value** %3, align 8
  br label %101

53:                                               ; preds = %1
  %54 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 1)
  store %struct.Value_Arglist* %54, %struct.Value_Arglist** %12, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showLitChar_4_arglist, %struct.Value* (%struct.Value_Arglist*)** %13, align 8
  %55 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %13, align 8
  %56 = load %struct.Value_Arglist*, %struct.Value_Arglist** %12, align 8
  %57 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %55, %struct.Value_Arglist* noundef %56)
  %58 = bitcast %struct.Value_Closure* %57 to %struct.Value*
  store %struct.Value* %58, %struct.Value** %3, align 8
  br label %101

59:                                               ; preds = %1
  %60 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 1)
  store %struct.Value_Arglist* %60, %struct.Value_Arglist** %14, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showLitChar_5_arglist, %struct.Value* (%struct.Value_Arglist*)** %15, align 8
  %61 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %15, align 8
  %62 = load %struct.Value_Arglist*, %struct.Value_Arglist** %14, align 8
  %63 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %61, %struct.Value_Arglist* noundef %62)
  %64 = bitcast %struct.Value_Closure* %63 to %struct.Value*
  store %struct.Value* %64, %struct.Value** %3, align 8
  br label %101

65:                                               ; preds = %1
  %66 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 1)
  store %struct.Value_Arglist* %66, %struct.Value_Arglist** %16, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showLitChar_6_arglist, %struct.Value* (%struct.Value_Arglist*)** %17, align 8
  %67 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %17, align 8
  %68 = load %struct.Value_Arglist*, %struct.Value_Arglist** %16, align 8
  %69 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %67, %struct.Value_Arglist* noundef %68)
  %70 = bitcast %struct.Value_Closure* %69 to %struct.Value*
  store %struct.Value* %70, %struct.Value** %3, align 8
  br label %101

71:                                               ; preds = %1
  %72 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 1)
  store %struct.Value_Arglist* %72, %struct.Value_Arglist** %18, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showLitChar_8_arglist, %struct.Value* (%struct.Value_Arglist*)** %19, align 8
  %73 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %19, align 8
  %74 = load %struct.Value_Arglist*, %struct.Value_Arglist** %18, align 8
  %75 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %73, %struct.Value_Arglist* noundef %74)
  %76 = bitcast %struct.Value_Closure* %75 to %struct.Value*
  store %struct.Value* %76, %struct.Value** %3, align 8
  br label %101

77:                                               ; preds = %1
  %78 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 1)
  store %struct.Value_Arglist* %78, %struct.Value_Arglist** %20, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showLitChar_9_arglist, %struct.Value* (%struct.Value_Arglist*)** %21, align 8
  %79 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %21, align 8
  %80 = load %struct.Value_Arglist*, %struct.Value_Arglist** %20, align 8
  %81 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %79, %struct.Value_Arglist* noundef %80)
  %82 = bitcast %struct.Value_Closure* %81 to %struct.Value*
  store %struct.Value* %82, %struct.Value** %3, align 8
  br label %101

83:                                               ; preds = %1
  %84 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 1)
  store %struct.Value_Arglist* %84, %struct.Value_Arglist** %22, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showLitChar_10_arglist, %struct.Value* (%struct.Value_Arglist*)** %23, align 8
  %85 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %23, align 8
  %86 = load %struct.Value_Arglist*, %struct.Value_Arglist** %22, align 8
  %87 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %85, %struct.Value_Arglist* noundef %86)
  %88 = bitcast %struct.Value_Closure* %87 to %struct.Value*
  store %struct.Value* %88, %struct.Value** %3, align 8
  br label %101

89:                                               ; preds = %1
  %90 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 2)
  store %struct.Value_Arglist* %90, %struct.Value_Arglist** %24, align 8
  %91 = load %struct.Value*, %struct.Value** %2, align 8
  %92 = call %struct.Value* @newReference(%struct.Value* noundef %91)
  %93 = load %struct.Value_Arglist*, %struct.Value_Arglist** %24, align 8
  %94 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %93, i32 0, i32 3
  %95 = load %struct.Value**, %struct.Value*** %94, align 8
  %96 = getelementptr inbounds %struct.Value*, %struct.Value** %95, i64 0
  store %struct.Value* %92, %struct.Value** %96, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showLitChar_12_arglist, %struct.Value* (%struct.Value_Arglist*)** %25, align 8
  %97 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %25, align 8
  %98 = load %struct.Value_Arglist*, %struct.Value_Arglist** %24, align 8
  %99 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %97, %struct.Value_Arglist* noundef %98)
  %100 = bitcast %struct.Value_Closure* %99 to %struct.Value*
  store %struct.Value* %100, %struct.Value** %3, align 8
  br label %101

101:                                              ; preds = %89, %83, %77, %71, %65, %59, %53, %47, %41, %35, %29
  %102 = load %struct.Value*, %struct.Value** %3, align 8
  store %struct.Value* %102, %struct.Value** %26, align 8
  %103 = load %struct.Value*, %struct.Value** %26, align 8
  ret %struct.Value* %103
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_0_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Show_showLitChar_0(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_1_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Show_showLitChar_1(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_2_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Show_showLitChar_2(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_3_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Show_showLitChar_3(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_4_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Show_showLitChar_4(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_5_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Show_showLitChar_5(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_6_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Show_showLitChar_6(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_8_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Show_showLitChar_8(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_9_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Show_showLitChar_9(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_10_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Show_showLitChar_10(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_12_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_Show_showLitChar_12(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_12(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value_Arglist*, align 8
  %7 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value_Arglist*, align 8
  %11 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %12 = alloca %struct.Value*, align 8
  %13 = alloca %struct.Value*, align 8
  %14 = alloca %struct.Value_Arglist*, align 8
  %15 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %16 = alloca %struct.Value*, align 8
  %17 = alloca %struct.Value*, align 8
  %18 = alloca %struct.Value*, align 8
  %19 = alloca %struct.AConAlt*, align 8
  %20 = alloca %struct.Value*, align 8
  %21 = alloca %struct.Value*, align 8
  %22 = alloca %struct.Value*, align 8
  %23 = alloca %struct.Value*, align 8
  %24 = alloca %struct.Value_Arglist*, align 8
  %25 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %26 = alloca %struct.Value*, align 8
  %27 = alloca %struct.Value*, align 8
  %28 = alloca %struct.Value*, align 8
  %29 = alloca %struct.Value*, align 8
  %30 = alloca %struct.Value_Arglist*, align 8
  %31 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %32 = alloca %struct.Value*, align 8
  %33 = alloca %struct.Value*, align 8
  %34 = alloca %struct.Value_Arglist*, align 8
  %35 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %36 = alloca %struct.Value*, align 8
  %37 = alloca %struct.Value*, align 8
  %38 = alloca %struct.Value_Arglist*, align 8
  %39 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %40 = alloca %struct.Value*, align 8
  %41 = alloca %struct.Value*, align 8
  %42 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %43 = load %struct.Value*, %struct.Value** %3, align 8
  %44 = call %struct.Value* @cast_char_to_Integer(%struct.Value* noundef %43)
  store %struct.Value* %44, %struct.Value** %5, align 8
  %45 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %45, %struct.Value_Arglist** %6, align 8
  %46 = load %struct.Value*, %struct.Value** %5, align 8
  %47 = call %struct.Value* @newReference(%struct.Value* noundef %46)
  %48 = load %struct.Value_Arglist*, %struct.Value_Arglist** %6, align 8
  %49 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %48, i32 0, i32 3
  %50 = load %struct.Value**, %struct.Value*** %49, align 8
  %51 = getelementptr inbounds %struct.Value*, %struct.Value** %50, i64 0
  store %struct.Value* %47, %struct.Value** %51, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_prim__integerToNat_arglist, %struct.Value* (%struct.Value_Arglist*)** %7, align 8
  %52 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %7, align 8
  %53 = load %struct.Value_Arglist*, %struct.Value_Arglist** %6, align 8
  %54 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %52, %struct.Value_Arglist* noundef %53)
  %55 = bitcast %struct.Value_Closure* %54 to %struct.Value*
  store %struct.Value* %55, %struct.Value** %8, align 8
  %56 = load %struct.Value*, %struct.Value** %8, align 8
  %57 = call %struct.Value* @trampoline(%struct.Value* noundef %56)
  store %struct.Value* %57, %struct.Value** %9, align 8
  %58 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %58, %struct.Value_Arglist** %10, align 8
  %59 = load %struct.Value*, %struct.Value** %3, align 8
  %60 = call %struct.Value* @newReference(%struct.Value* noundef %59)
  %61 = load %struct.Value_Arglist*, %struct.Value_Arglist** %10, align 8
  %62 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %61, i32 0, i32 3
  %63 = load %struct.Value**, %struct.Value*** %62, align 8
  %64 = getelementptr inbounds %struct.Value*, %struct.Value** %63, i64 0
  store %struct.Value* %60, %struct.Value** %64, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_n___parenOpen2439_comma_11931_parenClose_asciiTab_arglist, %struct.Value* (%struct.Value_Arglist*)** %11, align 8
  %65 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %11, align 8
  %66 = load %struct.Value_Arglist*, %struct.Value_Arglist** %10, align 8
  %67 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %65, %struct.Value_Arglist* noundef %66)
  %68 = bitcast %struct.Value_Closure* %67 to %struct.Value*
  store %struct.Value* %68, %struct.Value** %12, align 8
  %69 = load %struct.Value*, %struct.Value** %12, align 8
  %70 = call %struct.Value* @trampoline(%struct.Value* noundef %69)
  store %struct.Value* %70, %struct.Value** %13, align 8
  %71 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %71, %struct.Value_Arglist** %14, align 8
  %72 = load %struct.Value*, %struct.Value** %9, align 8
  %73 = call %struct.Value* @newReference(%struct.Value* noundef %72)
  %74 = load %struct.Value_Arglist*, %struct.Value_Arglist** %14, align 8
  %75 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %74, i32 0, i32 3
  %76 = load %struct.Value**, %struct.Value*** %75, align 8
  %77 = getelementptr inbounds %struct.Value*, %struct.Value** %76, i64 0
  store %struct.Value* %73, %struct.Value** %77, align 8
  %78 = load %struct.Value*, %struct.Value** %13, align 8
  %79 = call %struct.Value* @newReference(%struct.Value* noundef %78)
  %80 = load %struct.Value_Arglist*, %struct.Value_Arglist** %14, align 8
  %81 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %80, i32 0, i32 3
  %82 = load %struct.Value**, %struct.Value*** %81, align 8
  %83 = getelementptr inbounds %struct.Value*, %struct.Value** %82, i64 1
  store %struct.Value* %79, %struct.Value** %83, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_getAt_arglist, %struct.Value* (%struct.Value_Arglist*)** %15, align 8
  %84 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %15, align 8
  %85 = load %struct.Value_Arglist*, %struct.Value_Arglist** %14, align 8
  %86 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %84, %struct.Value_Arglist* noundef %85)
  %87 = bitcast %struct.Value_Closure* %86 to %struct.Value*
  store %struct.Value* %87, %struct.Value** %16, align 8
  %88 = load %struct.Value*, %struct.Value** %16, align 8
  %89 = call %struct.Value* @trampoline(%struct.Value* noundef %88)
  store %struct.Value* %89, %struct.Value** %17, align 8
  store %struct.Value* null, %struct.Value** %18, align 8
  %90 = call %struct.AConAlt* @newConstructorField(i32 noundef 2)
  store %struct.AConAlt* %90, %struct.AConAlt** %19, align 8
  %91 = load %struct.AConAlt*, %struct.AConAlt** %19, align 8
  %92 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %91, i64 0
  %93 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %92, i32 0, i32 1
  store i32 1, i32* %93, align 8
  %94 = load %struct.AConAlt*, %struct.AConAlt** %19, align 8
  %95 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %94, i64 0
  %96 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %95, i32 0, i32 0
  store i8* null, i8** %96, align 8
  %97 = load %struct.AConAlt*, %struct.AConAlt** %19, align 8
  %98 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %97, i64 1
  %99 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %98, i32 0, i32 1
  store i32 0, i32* %99, align 8
  %100 = load %struct.AConAlt*, %struct.AConAlt** %19, align 8
  %101 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %100, i64 1
  %102 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %101, i32 0, i32 0
  store i8* null, i8** %102, align 8
  %103 = load %struct.Value*, %struct.Value** %17, align 8
  %104 = load %struct.AConAlt*, %struct.AConAlt** %19, align 8
  %105 = call i32 @compareConstructors(%struct.Value* noundef %103, %struct.AConAlt* noundef %104, i32 noundef 2)
  switch i32 %105, label %211 [
    i32 0, label %106
    i32 1, label %123
  ]

106:                                              ; preds = %2
  %107 = load %struct.Value*, %struct.Value** %17, align 8
  %108 = bitcast %struct.Value* %107 to %struct.Value_Constructor*
  %109 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %108, i32 0, i32 4
  %110 = load %struct.Value**, %struct.Value*** %109, align 8
  %111 = getelementptr inbounds %struct.Value*, %struct.Value** %110, i64 0
  %112 = load %struct.Value*, %struct.Value** %111, align 8
  store %struct.Value* %112, %struct.Value** %20, align 8
  %113 = call %struct.Value_Char* @makeChar(i8 noundef signext 92)
  %114 = bitcast %struct.Value_Char* %113 to %struct.Value*
  store %struct.Value* %114, %struct.Value** %21, align 8
  %115 = load %struct.Value*, %struct.Value** %20, align 8
  %116 = load %struct.Value*, %struct.Value** %4, align 8
  %117 = call %struct.Value* @strAppend(%struct.Value* noundef %115, %struct.Value* noundef %116)
  store %struct.Value* %117, %struct.Value** %22, align 8
  %118 = load %struct.Value*, %struct.Value** %21, align 8
  %119 = load %struct.Value*, %struct.Value** %22, align 8
  %120 = call %struct.Value* @strCons(%struct.Value* noundef %118, %struct.Value* noundef %119)
  store %struct.Value* %120, %struct.Value** %18, align 8
  %121 = load %struct.Value*, %struct.Value** %22, align 8
  call void @removeReference(%struct.Value* noundef %121)
  %122 = load %struct.Value*, %struct.Value** %21, align 8
  call void @removeReference(%struct.Value* noundef %122)
  br label %211

123:                                              ; preds = %2
  %124 = call %struct.Value_Char* @makeChar(i8 noundef signext 127)
  %125 = bitcast %struct.Value_Char* %124 to %struct.Value*
  store %struct.Value* %125, %struct.Value** %23, align 8
  %126 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %126, %struct.Value_Arglist** %24, align 8
  %127 = load %struct.Value*, %struct.Value** %3, align 8
  %128 = call %struct.Value* @newReference(%struct.Value* noundef %127)
  %129 = load %struct.Value_Arglist*, %struct.Value_Arglist** %24, align 8
  %130 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %129, i32 0, i32 3
  %131 = load %struct.Value**, %struct.Value*** %130, align 8
  %132 = getelementptr inbounds %struct.Value*, %struct.Value** %131, i64 0
  store %struct.Value* %128, %struct.Value** %132, align 8
  %133 = load %struct.Value*, %struct.Value** %23, align 8
  %134 = call %struct.Value* @newReference(%struct.Value* noundef %133)
  %135 = load %struct.Value_Arglist*, %struct.Value_Arglist** %24, align 8
  %136 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %135, i32 0, i32 3
  %137 = load %struct.Value**, %struct.Value*** %136, align 8
  %138 = getelementptr inbounds %struct.Value*, %struct.Value** %137, i64 1
  store %struct.Value* %134, %struct.Value** %138, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__gt_Ord_Char_arglist, %struct.Value* (%struct.Value_Arglist*)** %25, align 8
  %139 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %25, align 8
  %140 = load %struct.Value_Arglist*, %struct.Value_Arglist** %24, align 8
  %141 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %139, %struct.Value_Arglist* noundef %140)
  %142 = bitcast %struct.Value_Closure* %141 to %struct.Value*
  store %struct.Value* %142, %struct.Value** %26, align 8
  %143 = load %struct.Value*, %struct.Value** %26, align 8
  %144 = call %struct.Value* @trampoline(%struct.Value* noundef %143)
  store %struct.Value* %144, %struct.Value** %27, align 8
  store %struct.Value* null, %struct.Value** %28, align 8
  %145 = load %struct.Value*, %struct.Value** %27, align 8
  %146 = call i32 @extractInt(%struct.Value* noundef %145)
  switch i32 %146, label %207 [
    i32 1, label %147
    i32 0, label %203
  ]

147:                                              ; preds = %123
  %148 = call %struct.Value_Char* @makeChar(i8 noundef signext 92)
  %149 = bitcast %struct.Value_Char* %148 to %struct.Value*
  store %struct.Value* %149, %struct.Value** %29, align 8
  %150 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 1)
  store %struct.Value_Arglist* %150, %struct.Value_Arglist** %30, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showLitChar_11_arglist, %struct.Value* (%struct.Value_Arglist*)** %31, align 8
  %151 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %31, align 8
  %152 = load %struct.Value_Arglist*, %struct.Value_Arglist** %30, align 8
  %153 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %151, %struct.Value_Arglist* noundef %152)
  %154 = bitcast %struct.Value_Closure* %153 to %struct.Value*
  store %struct.Value* %154, %struct.Value** %32, align 8
  %155 = load %struct.Value*, %struct.Value** %3, align 8
  %156 = call %struct.Value* @cast_char_to_Int64(%struct.Value* noundef %155)
  store %struct.Value* %156, %struct.Value** %33, align 8
  %157 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %157, %struct.Value_Arglist** %34, align 8
  %158 = load %struct.Value*, %struct.Value** %33, align 8
  %159 = call %struct.Value* @newReference(%struct.Value* noundef %158)
  %160 = load %struct.Value_Arglist*, %struct.Value_Arglist** %34, align 8
  %161 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %160, i32 0, i32 3
  %162 = load %struct.Value**, %struct.Value*** %161, align 8
  %163 = getelementptr inbounds %struct.Value*, %struct.Value** %162, i64 0
  store %struct.Value* %159, %struct.Value** %163, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_show_Show_Int_arglist, %struct.Value* (%struct.Value_Arglist*)** %35, align 8
  %164 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %35, align 8
  %165 = load %struct.Value_Arglist*, %struct.Value_Arglist** %34, align 8
  %166 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %164, %struct.Value_Arglist* noundef %165)
  %167 = bitcast %struct.Value_Closure* %166 to %struct.Value*
  store %struct.Value* %167, %struct.Value** %36, align 8
  %168 = load %struct.Value*, %struct.Value** %36, align 8
  %169 = call %struct.Value* @trampoline(%struct.Value* noundef %168)
  store %struct.Value* %169, %struct.Value** %37, align 8
  %170 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 3)
  store %struct.Value_Arglist* %170, %struct.Value_Arglist** %38, align 8
  %171 = load %struct.Value*, %struct.Value** %32, align 8
  %172 = call %struct.Value* @newReference(%struct.Value* noundef %171)
  %173 = load %struct.Value_Arglist*, %struct.Value_Arglist** %38, align 8
  %174 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %173, i32 0, i32 3
  %175 = load %struct.Value**, %struct.Value*** %174, align 8
  %176 = getelementptr inbounds %struct.Value*, %struct.Value** %175, i64 0
  store %struct.Value* %172, %struct.Value** %176, align 8
  %177 = load %struct.Value*, %struct.Value** %37, align 8
  %178 = call %struct.Value* @newReference(%struct.Value* noundef %177)
  %179 = load %struct.Value_Arglist*, %struct.Value_Arglist** %38, align 8
  %180 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %179, i32 0, i32 3
  %181 = load %struct.Value**, %struct.Value*** %180, align 8
  %182 = getelementptr inbounds %struct.Value*, %struct.Value** %181, i64 1
  store %struct.Value* %178, %struct.Value** %182, align 8
  %183 = load %struct.Value*, %struct.Value** %4, align 8
  %184 = call %struct.Value* @newReference(%struct.Value* noundef %183)
  %185 = load %struct.Value_Arglist*, %struct.Value_Arglist** %38, align 8
  %186 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %185, i32 0, i32 3
  %187 = load %struct.Value**, %struct.Value*** %186, align 8
  %188 = getelementptr inbounds %struct.Value*, %struct.Value** %187, i64 2
  store %struct.Value* %184, %struct.Value** %188, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_protectEsc_arglist, %struct.Value* (%struct.Value_Arglist*)** %39, align 8
  %189 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %39, align 8
  %190 = load %struct.Value_Arglist*, %struct.Value_Arglist** %38, align 8
  %191 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %189, %struct.Value_Arglist* noundef %190)
  %192 = bitcast %struct.Value_Closure* %191 to %struct.Value*
  store %struct.Value* %192, %struct.Value** %40, align 8
  %193 = load %struct.Value*, %struct.Value** %40, align 8
  %194 = call %struct.Value* @trampoline(%struct.Value* noundef %193)
  store %struct.Value* %194, %struct.Value** %41, align 8
  %195 = load %struct.Value*, %struct.Value** %29, align 8
  %196 = load %struct.Value*, %struct.Value** %41, align 8
  %197 = call %struct.Value* @strCons(%struct.Value* noundef %195, %struct.Value* noundef %196)
  store %struct.Value* %197, %struct.Value** %28, align 8
  %198 = load %struct.Value*, %struct.Value** %41, align 8
  call void @removeReference(%struct.Value* noundef %198)
  %199 = load %struct.Value*, %struct.Value** %37, align 8
  call void @removeReference(%struct.Value* noundef %199)
  %200 = load %struct.Value*, %struct.Value** %33, align 8
  call void @removeReference(%struct.Value* noundef %200)
  %201 = load %struct.Value*, %struct.Value** %32, align 8
  call void @removeReference(%struct.Value* noundef %201)
  %202 = load %struct.Value*, %struct.Value** %29, align 8
  call void @removeReference(%struct.Value* noundef %202)
  br label %207

203:                                              ; preds = %123
  %204 = load %struct.Value*, %struct.Value** %3, align 8
  %205 = load %struct.Value*, %struct.Value** %4, align 8
  %206 = call %struct.Value* @strCons(%struct.Value* noundef %204, %struct.Value* noundef %205)
  store %struct.Value* %206, %struct.Value** %28, align 8
  br label %207

207:                                              ; preds = %123, %203, %147
  %208 = load %struct.Value*, %struct.Value** %28, align 8
  store %struct.Value* %208, %struct.Value** %18, align 8
  %209 = load %struct.Value*, %struct.Value** %27, align 8
  call void @removeReference(%struct.Value* noundef %209)
  %210 = load %struct.Value*, %struct.Value** %23, align 8
  call void @removeReference(%struct.Value* noundef %210)
  br label %211

211:                                              ; preds = %2, %207, %106
  %212 = load %struct.AConAlt*, %struct.AConAlt** %19, align 8
  %213 = bitcast %struct.AConAlt* %212 to i8*
  call void @free(i8* noundef %213)
  %214 = load %struct.Value*, %struct.Value** %18, align 8
  store %struct.Value* %214, %struct.Value** %42, align 8
  %215 = load %struct.Value*, %struct.Value** %17, align 8
  call void @removeReference(%struct.Value* noundef %215)
  %216 = load %struct.Value*, %struct.Value** %13, align 8
  call void @removeReference(%struct.Value* noundef %216)
  %217 = load %struct.Value*, %struct.Value** %9, align 8
  call void @removeReference(%struct.Value* noundef %217)
  %218 = load %struct.Value*, %struct.Value** %5, align 8
  call void @removeReference(%struct.Value* noundef %218)
  %219 = load %struct.Value*, %struct.Value** %42, align 8
  ret %struct.Value* %219
}

declare %struct.Value* @cast_char_to_Integer(%struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_11_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Show_showLitChar_11(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

declare %struct.Value* @cast_char_to_Int64(%struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_protectEsc_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %14 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %13, i32 0, i32 3
  %15 = load %struct.Value**, %struct.Value*** %14, align 8
  %16 = getelementptr inbounds %struct.Value*, %struct.Value** %15, i64 2
  %17 = load %struct.Value*, %struct.Value** %16, align 8
  %18 = call %struct.Value* @Prelude_Show_protectEsc(%struct.Value* noundef %7, %struct.Value* noundef %12, %struct.Value* noundef %17)
  ret %struct.Value* %18
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_11(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value_Arglist*, align 8
  %4 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %7 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %7, %struct.Value_Arglist** %3, align 8
  %8 = load %struct.Value*, %struct.Value** %2, align 8
  %9 = call %struct.Value* @newReference(%struct.Value* noundef %8)
  %10 = load %struct.Value_Arglist*, %struct.Value_Arglist** %3, align 8
  %11 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %10, i32 0, i32 3
  %12 = load %struct.Value**, %struct.Value*** %11, align 8
  %13 = getelementptr inbounds %struct.Value*, %struct.Value** %12, i64 0
  store %struct.Value* %9, %struct.Value** %13, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Types_isDigit_arglist, %struct.Value* (%struct.Value_Arglist*)** %4, align 8
  %14 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %4, align 8
  %15 = load %struct.Value_Arglist*, %struct.Value_Arglist** %3, align 8
  %16 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %14, %struct.Value_Arglist* noundef %15)
  %17 = bitcast %struct.Value_Closure* %16 to %struct.Value*
  store %struct.Value* %17, %struct.Value** %5, align 8
  %18 = load %struct.Value*, %struct.Value** %5, align 8
  store %struct.Value* %18, %struct.Value** %6, align 8
  %19 = load %struct.Value*, %struct.Value** %6, align 8
  ret %struct.Value* %19
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_10(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %5 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i64 0, i64 0))
  %6 = bitcast %struct.Value_String* %5 to %struct.Value*
  store %struct.Value* %6, %struct.Value** %3, align 8
  %7 = load %struct.Value*, %struct.Value** %3, align 8
  %8 = load %struct.Value*, %struct.Value** %2, align 8
  %9 = call %struct.Value* @strAppend(%struct.Value* noundef %7, %struct.Value* noundef %8)
  store %struct.Value* %9, %struct.Value** %4, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  call void @removeReference(%struct.Value* noundef %10)
  %11 = load %struct.Value*, %struct.Value** %4, align 8
  ret %struct.Value* %11
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_9(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %5 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0))
  %6 = bitcast %struct.Value_String* %5 to %struct.Value*
  store %struct.Value* %6, %struct.Value** %3, align 8
  %7 = load %struct.Value*, %struct.Value** %3, align 8
  %8 = load %struct.Value*, %struct.Value** %2, align 8
  %9 = call %struct.Value* @strAppend(%struct.Value* noundef %7, %struct.Value* noundef %8)
  store %struct.Value* %9, %struct.Value** %4, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  call void @removeReference(%struct.Value* noundef %10)
  %11 = load %struct.Value*, %struct.Value** %4, align 8
  ret %struct.Value* %11
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_8(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value_Arglist*, align 8
  %4 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value_Arglist*, align 8
  %8 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %11 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 1)
  store %struct.Value_Arglist* %11, %struct.Value_Arglist** %3, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showLitChar_7_arglist, %struct.Value* (%struct.Value_Arglist*)** %4, align 8
  %12 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %4, align 8
  %13 = load %struct.Value_Arglist*, %struct.Value_Arglist** %3, align 8
  %14 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %12, %struct.Value_Arglist* noundef %13)
  %15 = bitcast %struct.Value_Closure* %14 to %struct.Value*
  store %struct.Value* %15, %struct.Value** %5, align 8
  %16 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i64 0, i64 0))
  %17 = bitcast %struct.Value_String* %16 to %struct.Value*
  store %struct.Value* %17, %struct.Value** %6, align 8
  %18 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 3)
  store %struct.Value_Arglist* %18, %struct.Value_Arglist** %7, align 8
  %19 = load %struct.Value*, %struct.Value** %5, align 8
  %20 = call %struct.Value* @newReference(%struct.Value* noundef %19)
  %21 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %22 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %21, i32 0, i32 3
  %23 = load %struct.Value**, %struct.Value*** %22, align 8
  %24 = getelementptr inbounds %struct.Value*, %struct.Value** %23, i64 0
  store %struct.Value* %20, %struct.Value** %24, align 8
  %25 = load %struct.Value*, %struct.Value** %6, align 8
  %26 = call %struct.Value* @newReference(%struct.Value* noundef %25)
  %27 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %28 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %27, i32 0, i32 3
  %29 = load %struct.Value**, %struct.Value*** %28, align 8
  %30 = getelementptr inbounds %struct.Value*, %struct.Value** %29, i64 1
  store %struct.Value* %26, %struct.Value** %30, align 8
  %31 = load %struct.Value*, %struct.Value** %2, align 8
  %32 = call %struct.Value* @newReference(%struct.Value* noundef %31)
  %33 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %34 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %33, i32 0, i32 3
  %35 = load %struct.Value**, %struct.Value*** %34, align 8
  %36 = getelementptr inbounds %struct.Value*, %struct.Value** %35, i64 2
  store %struct.Value* %32, %struct.Value** %36, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_protectEsc_arglist, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %37 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %38 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %39 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %37, %struct.Value_Arglist* noundef %38)
  %40 = bitcast %struct.Value_Closure* %39 to %struct.Value*
  store %struct.Value* %40, %struct.Value** %9, align 8
  %41 = load %struct.Value*, %struct.Value** %9, align 8
  store %struct.Value* %41, %struct.Value** %10, align 8
  %42 = load %struct.Value*, %struct.Value** %6, align 8
  call void @removeReference(%struct.Value* noundef %42)
  %43 = load %struct.Value*, %struct.Value** %5, align 8
  call void @removeReference(%struct.Value* noundef %43)
  %44 = load %struct.Value*, %struct.Value** %10, align 8
  ret %struct.Value* %44
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_7_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Show_showLitChar_7(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_7(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value_Arglist*, align 8
  %5 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %8 = call %struct.Value_Char* @makeChar(i8 noundef signext 72)
  %9 = bitcast %struct.Value_Char* %8 to %struct.Value*
  store %struct.Value* %9, %struct.Value** %3, align 8
  %10 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %10, %struct.Value_Arglist** %4, align 8
  %11 = load %struct.Value*, %struct.Value** %2, align 8
  %12 = call %struct.Value* @newReference(%struct.Value* noundef %11)
  %13 = load %struct.Value_Arglist*, %struct.Value_Arglist** %4, align 8
  %14 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %13, i32 0, i32 3
  %15 = load %struct.Value**, %struct.Value*** %14, align 8
  %16 = getelementptr inbounds %struct.Value*, %struct.Value** %15, i64 0
  store %struct.Value* %12, %struct.Value** %16, align 8
  %17 = load %struct.Value*, %struct.Value** %3, align 8
  %18 = call %struct.Value* @newReference(%struct.Value* noundef %17)
  %19 = load %struct.Value_Arglist*, %struct.Value_Arglist** %4, align 8
  %20 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %19, i32 0, i32 3
  %21 = load %struct.Value**, %struct.Value*** %20, align 8
  %22 = getelementptr inbounds %struct.Value*, %struct.Value** %21, i64 1
  store %struct.Value* %18, %struct.Value** %22, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__eq_eq_Eq_Char_arglist, %struct.Value* (%struct.Value_Arglist*)** %5, align 8
  %23 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %5, align 8
  %24 = load %struct.Value_Arglist*, %struct.Value_Arglist** %4, align 8
  %25 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %23, %struct.Value_Arglist* noundef %24)
  %26 = bitcast %struct.Value_Closure* %25 to %struct.Value*
  store %struct.Value* %26, %struct.Value** %6, align 8
  %27 = load %struct.Value*, %struct.Value** %6, align 8
  store %struct.Value* %27, %struct.Value** %7, align 8
  %28 = load %struct.Value*, %struct.Value** %3, align 8
  call void @removeReference(%struct.Value* noundef %28)
  %29 = load %struct.Value*, %struct.Value** %7, align 8
  ret %struct.Value* %29
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_6(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %5 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0))
  %6 = bitcast %struct.Value_String* %5 to %struct.Value*
  store %struct.Value* %6, %struct.Value** %3, align 8
  %7 = load %struct.Value*, %struct.Value** %3, align 8
  %8 = load %struct.Value*, %struct.Value** %2, align 8
  %9 = call %struct.Value* @strAppend(%struct.Value* noundef %7, %struct.Value* noundef %8)
  store %struct.Value* %9, %struct.Value** %4, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  call void @removeReference(%struct.Value* noundef %10)
  %11 = load %struct.Value*, %struct.Value** %4, align 8
  ret %struct.Value* %11
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_5(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %5 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63, i64 0, i64 0))
  %6 = bitcast %struct.Value_String* %5 to %struct.Value*
  store %struct.Value* %6, %struct.Value** %3, align 8
  %7 = load %struct.Value*, %struct.Value** %3, align 8
  %8 = load %struct.Value*, %struct.Value** %2, align 8
  %9 = call %struct.Value* @strAppend(%struct.Value* noundef %7, %struct.Value* noundef %8)
  store %struct.Value* %9, %struct.Value** %4, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  call void @removeReference(%struct.Value* noundef %10)
  %11 = load %struct.Value*, %struct.Value** %4, align 8
  ret %struct.Value* %11
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_4(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %5 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0))
  %6 = bitcast %struct.Value_String* %5 to %struct.Value*
  store %struct.Value* %6, %struct.Value** %3, align 8
  %7 = load %struct.Value*, %struct.Value** %3, align 8
  %8 = load %struct.Value*, %struct.Value** %2, align 8
  %9 = call %struct.Value* @strAppend(%struct.Value* noundef %7, %struct.Value* noundef %8)
  store %struct.Value* %9, %struct.Value** %4, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  call void @removeReference(%struct.Value* noundef %10)
  %11 = load %struct.Value*, %struct.Value** %4, align 8
  ret %struct.Value* %11
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_3(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %5 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65, i64 0, i64 0))
  %6 = bitcast %struct.Value_String* %5 to %struct.Value*
  store %struct.Value* %6, %struct.Value** %3, align 8
  %7 = load %struct.Value*, %struct.Value** %3, align 8
  %8 = load %struct.Value*, %struct.Value** %2, align 8
  %9 = call %struct.Value* @strAppend(%struct.Value* noundef %7, %struct.Value* noundef %8)
  store %struct.Value* %9, %struct.Value** %4, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  call void @removeReference(%struct.Value* noundef %10)
  %11 = load %struct.Value*, %struct.Value** %4, align 8
  ret %struct.Value* %11
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_2(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %5 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i64 0, i64 0))
  %6 = bitcast %struct.Value_String* %5 to %struct.Value*
  store %struct.Value* %6, %struct.Value** %3, align 8
  %7 = load %struct.Value*, %struct.Value** %3, align 8
  %8 = load %struct.Value*, %struct.Value** %2, align 8
  %9 = call %struct.Value* @strAppend(%struct.Value* noundef %7, %struct.Value* noundef %8)
  store %struct.Value* %9, %struct.Value** %4, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  call void @removeReference(%struct.Value* noundef %10)
  %11 = load %struct.Value*, %struct.Value** %4, align 8
  ret %struct.Value* %11
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_1(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %5 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.67, i64 0, i64 0))
  %6 = bitcast %struct.Value_String* %5 to %struct.Value*
  store %struct.Value* %6, %struct.Value** %3, align 8
  %7 = load %struct.Value*, %struct.Value** %3, align 8
  %8 = load %struct.Value*, %struct.Value** %2, align 8
  %9 = call %struct.Value* @strAppend(%struct.Value* noundef %7, %struct.Value* noundef %8)
  store %struct.Value* %9, %struct.Value** %4, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  call void @removeReference(%struct.Value* noundef %10)
  %11 = load %struct.Value*, %struct.Value** %4, align 8
  ret %struct.Value* %11
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_showLitChar_0(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %5 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68, i64 0, i64 0))
  %6 = bitcast %struct.Value_String* %5 to %struct.Value*
  store %struct.Value* %6, %struct.Value** %3, align 8
  %7 = load %struct.Value*, %struct.Value** %3, align 8
  %8 = load %struct.Value*, %struct.Value** %2, align 8
  %9 = call %struct.Value* @strAppend(%struct.Value* noundef %7, %struct.Value* noundef %8)
  store %struct.Value* %9, %struct.Value** %4, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  call void @removeReference(%struct.Value* noundef %10)
  %11 = load %struct.Value*, %struct.Value** %4, align 8
  ret %struct.Value* %11
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_protectEsc(%struct.Value* noundef %0, %struct.Value* noundef %1, %struct.Value* noundef %2) #0 {
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value_Arglist*, align 8
  %8 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value*, align 8
  %11 = alloca %struct.Value*, align 8
  %12 = alloca %struct.Value*, align 8
  %13 = alloca %struct.Value*, align 8
  %14 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %4, align 8
  store %struct.Value* %1, %struct.Value** %5, align 8
  store %struct.Value* %2, %struct.Value** %6, align 8
  %15 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %15, %struct.Value_Arglist** %7, align 8
  %16 = load %struct.Value*, %struct.Value** %4, align 8
  %17 = call %struct.Value* @newReference(%struct.Value* noundef %16)
  %18 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %19 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %18, i32 0, i32 3
  %20 = load %struct.Value**, %struct.Value*** %19, align 8
  %21 = getelementptr inbounds %struct.Value*, %struct.Value** %20, i64 0
  store %struct.Value* %17, %struct.Value** %21, align 8
  %22 = load %struct.Value*, %struct.Value** %6, align 8
  %23 = call %struct.Value* @newReference(%struct.Value* noundef %22)
  %24 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %25 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %24, i32 0, i32 3
  %26 = load %struct.Value**, %struct.Value*** %25, align 8
  %27 = getelementptr inbounds %struct.Value*, %struct.Value** %26, i64 1
  store %struct.Value* %23, %struct.Value** %27, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_firstCharIs_arglist, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %28 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %8, align 8
  %29 = load %struct.Value_Arglist*, %struct.Value_Arglist** %7, align 8
  %30 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %28, %struct.Value_Arglist* noundef %29)
  %31 = bitcast %struct.Value_Closure* %30 to %struct.Value*
  store %struct.Value* %31, %struct.Value** %9, align 8
  %32 = load %struct.Value*, %struct.Value** %9, align 8
  %33 = call %struct.Value* @trampoline(%struct.Value* noundef %32)
  store %struct.Value* %33, %struct.Value** %10, align 8
  store %struct.Value* null, %struct.Value** %11, align 8
  %34 = load %struct.Value*, %struct.Value** %10, align 8
  %35 = call i32 @extractInt(%struct.Value* noundef %34)
  switch i32 %35, label %42 [
    i32 1, label %36
    i32 0, label %39
  ]

36:                                               ; preds = %3
  %37 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0))
  %38 = bitcast %struct.Value_String* %37 to %struct.Value*
  store %struct.Value* %38, %struct.Value** %11, align 8
  br label %42

39:                                               ; preds = %3
  %40 = call %struct.Value_String* @makeString(i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.54, i64 0, i64 0))
  %41 = bitcast %struct.Value_String* %40 to %struct.Value*
  store %struct.Value* %41, %struct.Value** %11, align 8
  br label %42

42:                                               ; preds = %3, %39, %36
  %43 = load %struct.Value*, %struct.Value** %11, align 8
  store %struct.Value* %43, %struct.Value** %12, align 8
  %44 = load %struct.Value*, %struct.Value** %12, align 8
  %45 = load %struct.Value*, %struct.Value** %6, align 8
  %46 = call %struct.Value* @strAppend(%struct.Value* noundef %44, %struct.Value* noundef %45)
  store %struct.Value* %46, %struct.Value** %13, align 8
  %47 = load %struct.Value*, %struct.Value** %5, align 8
  %48 = load %struct.Value*, %struct.Value** %13, align 8
  %49 = call %struct.Value* @strAppend(%struct.Value* noundef %47, %struct.Value* noundef %48)
  store %struct.Value* %49, %struct.Value** %14, align 8
  %50 = load %struct.Value*, %struct.Value** %13, align 8
  call void @removeReference(%struct.Value* noundef %50)
  %51 = load %struct.Value*, %struct.Value** %12, align 8
  call void @removeReference(%struct.Value* noundef %51)
  %52 = load %struct.Value*, %struct.Value** %10, align 8
  call void @removeReference(%struct.Value* noundef %52)
  %53 = load %struct.Value*, %struct.Value** %14, align 8
  ret %struct.Value* %53
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_firstCharIs_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @Prelude_Show_firstCharIs(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_primNumShow(%struct.Value* noundef %0, %struct.Value* noundef %1, %struct.Value* noundef %2) #0 {
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value_Constructor*, align 8
  %9 = alloca %struct.Value*, align 8
  %10 = alloca %struct.Value_Arglist*, align 8
  %11 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %12 = alloca %struct.Value*, align 8
  %13 = alloca %struct.Value*, align 8
  %14 = alloca %struct.Value*, align 8
  %15 = alloca %struct.Value_Arglist*, align 8
  %16 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %17 = alloca %struct.Value*, align 8
  %18 = alloca %struct.Value_Arglist*, align 8
  %19 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %20 = alloca %struct.Value*, align 8
  %21 = alloca %struct.Value*, align 8
  %22 = alloca %struct.Value_Arglist*, align 8
  %23 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %24 = alloca %struct.Value*, align 8
  %25 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %4, align 8
  store %struct.Value* %1, %struct.Value** %5, align 8
  store %struct.Value* %2, %struct.Value** %6, align 8
  %26 = load %struct.Value*, %struct.Value** %4, align 8
  %27 = load %struct.Value*, %struct.Value** %6, align 8
  %28 = call %struct.Value* @apply_closure(%struct.Value* noundef %26, %struct.Value* noundef %27)
  store %struct.Value* %28, %struct.Value** %7, align 8
  %29 = call %struct.Value_Constructor* @newConstructor(i32 noundef 0, i32 noundef 5, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.70, i64 0, i64 0))
  store %struct.Value_Constructor* %29, %struct.Value_Constructor** %8, align 8
  %30 = load %struct.Value_Constructor*, %struct.Value_Constructor** %8, align 8
  %31 = bitcast %struct.Value_Constructor* %30 to %struct.Value*
  store %struct.Value* %31, %struct.Value** %9, align 8
  %32 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %32, %struct.Value_Arglist** %10, align 8
  %33 = load %struct.Value*, %struct.Value** %5, align 8
  %34 = call %struct.Value* @newReference(%struct.Value* noundef %33)
  %35 = load %struct.Value_Arglist*, %struct.Value_Arglist** %10, align 8
  %36 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %35, i32 0, i32 3
  %37 = load %struct.Value**, %struct.Value*** %36, align 8
  %38 = getelementptr inbounds %struct.Value*, %struct.Value** %37, i64 0
  store %struct.Value* %34, %struct.Value** %38, align 8
  %39 = load %struct.Value*, %struct.Value** %9, align 8
  %40 = call %struct.Value* @newReference(%struct.Value* noundef %39)
  %41 = load %struct.Value_Arglist*, %struct.Value_Arglist** %10, align 8
  %42 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %41, i32 0, i32 3
  %43 = load %struct.Value**, %struct.Value*** %42, align 8
  %44 = getelementptr inbounds %struct.Value*, %struct.Value** %43, i64 1
  store %struct.Value* %40, %struct.Value** %44, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show__gt_eq_Ord_Prec_arglist, %struct.Value* (%struct.Value_Arglist*)** %11, align 8
  %45 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %11, align 8
  %46 = load %struct.Value_Arglist*, %struct.Value_Arglist** %10, align 8
  %47 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %45, %struct.Value_Arglist* noundef %46)
  %48 = bitcast %struct.Value_Closure* %47 to %struct.Value*
  store %struct.Value* %48, %struct.Value** %12, align 8
  %49 = load %struct.Value*, %struct.Value** %12, align 8
  %50 = call %struct.Value* @trampoline(%struct.Value* noundef %49)
  store %struct.Value* %50, %struct.Value** %13, align 8
  store %struct.Value* null, %struct.Value** %14, align 8
  %51 = load %struct.Value*, %struct.Value** %13, align 8
  %52 = call i32 @extractInt(%struct.Value* noundef %51)
  switch i32 %52, label %82 [
    i32 1, label %53
    i32 0, label %79
  ]

53:                                               ; preds = %3
  %54 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 1)
  store %struct.Value_Arglist* %54, %struct.Value_Arglist** %15, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_primNumShow_0_arglist, %struct.Value* (%struct.Value_Arglist*)** %16, align 8
  %55 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %16, align 8
  %56 = load %struct.Value_Arglist*, %struct.Value_Arglist** %15, align 8
  %57 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %55, %struct.Value_Arglist* noundef %56)
  %58 = bitcast %struct.Value_Closure* %57 to %struct.Value*
  store %struct.Value* %58, %struct.Value** %17, align 8
  %59 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %59, %struct.Value_Arglist** %18, align 8
  %60 = load %struct.Value*, %struct.Value** %17, align 8
  %61 = call %struct.Value* @newReference(%struct.Value* noundef %60)
  %62 = load %struct.Value_Arglist*, %struct.Value_Arglist** %18, align 8
  %63 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %62, i32 0, i32 3
  %64 = load %struct.Value**, %struct.Value*** %63, align 8
  %65 = getelementptr inbounds %struct.Value*, %struct.Value** %64, i64 0
  store %struct.Value* %61, %struct.Value** %65, align 8
  %66 = load %struct.Value*, %struct.Value** %7, align 8
  %67 = call %struct.Value* @newReference(%struct.Value* noundef %66)
  %68 = load %struct.Value_Arglist*, %struct.Value_Arglist** %18, align 8
  %69 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %68, i32 0, i32 3
  %70 = load %struct.Value**, %struct.Value*** %69, align 8
  %71 = getelementptr inbounds %struct.Value*, %struct.Value** %70, i64 1
  store %struct.Value* %67, %struct.Value** %71, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_firstCharIs_arglist, %struct.Value* (%struct.Value_Arglist*)** %19, align 8
  %72 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %19, align 8
  %73 = load %struct.Value_Arglist*, %struct.Value_Arglist** %18, align 8
  %74 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %72, %struct.Value_Arglist* noundef %73)
  %75 = bitcast %struct.Value_Closure* %74 to %struct.Value*
  store %struct.Value* %75, %struct.Value** %20, align 8
  %76 = load %struct.Value*, %struct.Value** %20, align 8
  %77 = call %struct.Value* @trampoline(%struct.Value* noundef %76)
  store %struct.Value* %77, %struct.Value** %14, align 8
  %78 = load %struct.Value*, %struct.Value** %17, align 8
  call void @removeReference(%struct.Value* noundef %78)
  br label %82

79:                                               ; preds = %3
  %80 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %81 = bitcast %struct.Value_Bits8* %80 to %struct.Value*
  store %struct.Value* %81, %struct.Value** %14, align 8
  br label %82

82:                                               ; preds = %3, %79, %53
  %83 = load %struct.Value*, %struct.Value** %14, align 8
  store %struct.Value* %83, %struct.Value** %21, align 8
  %84 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %84, %struct.Value_Arglist** %22, align 8
  %85 = load %struct.Value*, %struct.Value** %21, align 8
  %86 = call %struct.Value* @newReference(%struct.Value* noundef %85)
  %87 = load %struct.Value_Arglist*, %struct.Value_Arglist** %22, align 8
  %88 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %87, i32 0, i32 3
  %89 = load %struct.Value**, %struct.Value*** %88, align 8
  %90 = getelementptr inbounds %struct.Value*, %struct.Value** %89, i64 0
  store %struct.Value* %86, %struct.Value** %90, align 8
  %91 = load %struct.Value*, %struct.Value** %7, align 8
  %92 = call %struct.Value* @newReference(%struct.Value* noundef %91)
  %93 = load %struct.Value_Arglist*, %struct.Value_Arglist** %22, align 8
  %94 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %93, i32 0, i32 3
  %95 = load %struct.Value**, %struct.Value*** %94, align 8
  %96 = getelementptr inbounds %struct.Value*, %struct.Value** %95, i64 1
  store %struct.Value* %92, %struct.Value** %96, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_Show_showParens_arglist, %struct.Value* (%struct.Value_Arglist*)** %23, align 8
  %97 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %23, align 8
  %98 = load %struct.Value_Arglist*, %struct.Value_Arglist** %22, align 8
  %99 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %97, %struct.Value_Arglist* noundef %98)
  %100 = bitcast %struct.Value_Closure* %99 to %struct.Value*
  store %struct.Value* %100, %struct.Value** %24, align 8
  %101 = load %struct.Value*, %struct.Value** %24, align 8
  store %struct.Value* %101, %struct.Value** %25, align 8
  %102 = load %struct.Value*, %struct.Value** %21, align 8
  call void @removeReference(%struct.Value* noundef %102)
  %103 = load %struct.Value*, %struct.Value** %13, align 8
  call void @removeReference(%struct.Value* noundef %103)
  %104 = load %struct.Value*, %struct.Value** %9, align 8
  call void @removeReference(%struct.Value* noundef %104)
  %105 = load %struct.Value*, %struct.Value** %7, align 8
  call void @removeReference(%struct.Value* noundef %105)
  %106 = load %struct.Value*, %struct.Value** %25, align 8
  ret %struct.Value* %106
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_primNumShow_0_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @Prelude_Show_primNumShow_0(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_primNumShow_0(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value_Arglist*, align 8
  %5 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %6 = alloca %struct.Value*, align 8
  %7 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %8 = call %struct.Value_Char* @makeChar(i8 noundef signext 45)
  %9 = bitcast %struct.Value_Char* %8 to %struct.Value*
  store %struct.Value* %9, %struct.Value** %3, align 8
  %10 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 2)
  store %struct.Value_Arglist* %10, %struct.Value_Arglist** %4, align 8
  %11 = load %struct.Value*, %struct.Value** %2, align 8
  %12 = call %struct.Value* @newReference(%struct.Value* noundef %11)
  %13 = load %struct.Value_Arglist*, %struct.Value_Arglist** %4, align 8
  %14 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %13, i32 0, i32 3
  %15 = load %struct.Value**, %struct.Value*** %14, align 8
  %16 = getelementptr inbounds %struct.Value*, %struct.Value** %15, i64 0
  store %struct.Value* %12, %struct.Value** %16, align 8
  %17 = load %struct.Value*, %struct.Value** %3, align 8
  %18 = call %struct.Value* @newReference(%struct.Value* noundef %17)
  %19 = load %struct.Value_Arglist*, %struct.Value_Arglist** %4, align 8
  %20 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %19, i32 0, i32 3
  %21 = load %struct.Value**, %struct.Value*** %20, align 8
  %22 = getelementptr inbounds %struct.Value*, %struct.Value** %21, i64 1
  store %struct.Value* %18, %struct.Value** %22, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @Prelude_EqOrd__eq_eq_Eq_Char_arglist, %struct.Value* (%struct.Value_Arglist*)** %5, align 8
  %23 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %5, align 8
  %24 = load %struct.Value_Arglist*, %struct.Value_Arglist** %4, align 8
  %25 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %23, %struct.Value_Arglist* noundef %24)
  %26 = bitcast %struct.Value_Closure* %25 to %struct.Value*
  store %struct.Value* %26, %struct.Value** %6, align 8
  %27 = load %struct.Value*, %struct.Value** %6, align 8
  store %struct.Value* %27, %struct.Value** %7, align 8
  %28 = load %struct.Value*, %struct.Value** %3, align 8
  call void @removeReference(%struct.Value* noundef %28)
  %29 = load %struct.Value*, %struct.Value** %7, align 8
  ret %struct.Value* %29
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_precCon(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.AConAlt*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  store %struct.Value* null, %struct.Value** %3, align 8
  %7 = call %struct.AConAlt* @newConstructorField(i32 noundef 7)
  store %struct.AConAlt* %7, %struct.AConAlt** %4, align 8
  %8 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %9 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %8, i64 0
  %10 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %9, i32 0, i32 1
  store i32 0, i32* %10, align 8
  %11 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %12 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %11, i64 0
  %13 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %12, i32 0, i32 0
  store i8* null, i8** %13, align 8
  %14 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %15 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %14, i64 1
  %16 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %15, i32 0, i32 1
  store i32 1, i32* %16, align 8
  %17 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %18 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %17, i64 1
  %19 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %18, i32 0, i32 0
  store i8* null, i8** %19, align 8
  %20 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %21 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %20, i64 2
  %22 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %21, i32 0, i32 1
  store i32 2, i32* %22, align 8
  %23 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %24 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %23, i64 2
  %25 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %24, i32 0, i32 0
  store i8* null, i8** %25, align 8
  %26 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %27 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %26, i64 3
  %28 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %27, i32 0, i32 1
  store i32 3, i32* %28, align 8
  %29 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %30 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %29, i64 3
  %31 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %30, i32 0, i32 0
  store i8* null, i8** %31, align 8
  %32 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %33 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %32, i64 4
  %34 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %33, i32 0, i32 1
  store i32 4, i32* %34, align 8
  %35 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %36 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %35, i64 4
  %37 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %36, i32 0, i32 0
  store i8* null, i8** %37, align 8
  %38 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %39 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %38, i64 5
  %40 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %39, i32 0, i32 1
  store i32 5, i32* %40, align 8
  %41 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %42 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %41, i64 5
  %43 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %42, i32 0, i32 0
  store i8* null, i8** %43, align 8
  %44 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %45 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %44, i64 6
  %46 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %45, i32 0, i32 1
  store i32 6, i32* %46, align 8
  %47 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %48 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %47, i64 6
  %49 = getelementptr inbounds %struct.AConAlt, %struct.AConAlt* %48, i32 0, i32 0
  store i8* null, i8** %49, align 8
  %50 = load %struct.Value*, %struct.Value** %2, align 8
  %51 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %52 = call i32 @compareConstructors(%struct.Value* noundef %50, %struct.AConAlt* noundef %51, i32 noundef 7)
  switch i32 %52, label %80 [
    i32 0, label %53
    i32 1, label %56
    i32 2, label %59
    i32 3, label %62
    i32 4, label %65
    i32 5, label %74
    i32 6, label %77
  ]

53:                                               ; preds = %1
  %54 = call %struct.Value_Integer* @makeIntegerLiteral(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0))
  %55 = bitcast %struct.Value_Integer* %54 to %struct.Value*
  store %struct.Value* %55, %struct.Value** %3, align 8
  br label %80

56:                                               ; preds = %1
  %57 = call %struct.Value_Integer* @makeIntegerLiteral(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0))
  %58 = bitcast %struct.Value_Integer* %57 to %struct.Value*
  store %struct.Value* %58, %struct.Value** %3, align 8
  br label %80

59:                                               ; preds = %1
  %60 = call %struct.Value_Integer* @makeIntegerLiteral(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.71, i64 0, i64 0))
  %61 = bitcast %struct.Value_Integer* %60 to %struct.Value*
  store %struct.Value* %61, %struct.Value** %3, align 8
  br label %80

62:                                               ; preds = %1
  %63 = call %struct.Value_Integer* @makeIntegerLiteral(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.72, i64 0, i64 0))
  %64 = bitcast %struct.Value_Integer* %63 to %struct.Value*
  store %struct.Value* %64, %struct.Value** %3, align 8
  br label %80

65:                                               ; preds = %1
  %66 = load %struct.Value*, %struct.Value** %2, align 8
  %67 = bitcast %struct.Value* %66 to %struct.Value_Constructor*
  %68 = getelementptr inbounds %struct.Value_Constructor, %struct.Value_Constructor* %67, i32 0, i32 4
  %69 = load %struct.Value**, %struct.Value*** %68, align 8
  %70 = getelementptr inbounds %struct.Value*, %struct.Value** %69, i64 0
  %71 = load %struct.Value*, %struct.Value** %70, align 8
  store %struct.Value* %71, %struct.Value** %5, align 8
  %72 = call %struct.Value_Integer* @makeIntegerLiteral(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.73, i64 0, i64 0))
  %73 = bitcast %struct.Value_Integer* %72 to %struct.Value*
  store %struct.Value* %73, %struct.Value** %3, align 8
  br label %80

74:                                               ; preds = %1
  %75 = call %struct.Value_Integer* @makeIntegerLiteral(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.74, i64 0, i64 0))
  %76 = bitcast %struct.Value_Integer* %75 to %struct.Value*
  store %struct.Value* %76, %struct.Value** %3, align 8
  br label %80

77:                                               ; preds = %1
  %78 = call %struct.Value_Integer* @makeIntegerLiteral(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.75, i64 0, i64 0))
  %79 = bitcast %struct.Value_Integer* %78 to %struct.Value*
  store %struct.Value* %79, %struct.Value** %3, align 8
  br label %80

80:                                               ; preds = %1, %77, %74, %65, %62, %59, %56, %53
  %81 = load %struct.AConAlt*, %struct.AConAlt** %4, align 8
  %82 = bitcast %struct.AConAlt* %81 to i8*
  call void @free(i8* noundef %82)
  %83 = load %struct.Value*, %struct.Value** %3, align 8
  store %struct.Value* %83, %struct.Value** %6, align 8
  %84 = load %struct.Value*, %struct.Value** %6, align 8
  ret %struct.Value* %84
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_Show_firstCharIs(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca %struct.Value*, align 8
  %8 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  store %struct.Value* null, %struct.Value** %5, align 8
  %9 = call i8* @malloc(i64 noundef 8) #3
  %10 = bitcast i8* %9 to i8**
  store i8** %10, i8*** %6, align 8
  %11 = load i8**, i8*** %6, align 8
  %12 = getelementptr inbounds i8*, i8** %11, i64 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.54, i64 0, i64 0), i8** %12, align 8
  %13 = load %struct.Value*, %struct.Value** %4, align 8
  %14 = load i8**, i8*** %6, align 8
  %15 = call i32 @multiStringCompare(%struct.Value* noundef %13, i32 noundef 1, i8** noundef %14)
  switch i32 %15, label %19 [
    i32 0, label %16
  ]

16:                                               ; preds = %2
  %17 = call %struct.Value_Bits8* @makeBits8(i8 noundef zeroext 0)
  %18 = bitcast %struct.Value_Bits8* %17 to %struct.Value*
  store %struct.Value* %18, %struct.Value** %5, align 8
  br label %26

19:                                               ; preds = %2
  %20 = load %struct.Value*, %struct.Value** %4, align 8
  %21 = call %struct.Value* @head(%struct.Value* noundef %20)
  store %struct.Value* %21, %struct.Value** %7, align 8
  %22 = load %struct.Value*, %struct.Value** %3, align 8
  %23 = load %struct.Value*, %struct.Value** %7, align 8
  %24 = call %struct.Value* @tailcall_apply_closure(%struct.Value* noundef %22, %struct.Value* noundef %23)
  store %struct.Value* %24, %struct.Value** %5, align 8
  %25 = load %struct.Value*, %struct.Value** %7, align 8
  call void @removeReference(%struct.Value* noundef %25)
  br label %26

26:                                               ; preds = %19, %16
  %27 = load i8**, i8*** %6, align 8
  %28 = bitcast i8** %27 to i8*
  call void @free(i8* noundef %28)
  %29 = load %struct.Value*, %struct.Value** %5, align 8
  store %struct.Value* %29, %struct.Value** %8, align 8
  %30 = load %struct.Value*, %struct.Value** %8, align 8
  ret %struct.Value* %30
}

; Function Attrs: allocsize(0)
declare i8* @malloc(i64 noundef) #2

declare i32 @multiStringCompare(%struct.Value* noundef, i32 noundef, i8** noundef) #1

declare %struct.Value* @head(%struct.Value* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @Prelude_IO_prim__putStr(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %5 = load %struct.Value*, %struct.Value** %3, align 8
  %6 = bitcast %struct.Value* %5 to %struct.Value_String*
  %7 = getelementptr inbounds %struct.Value_String, %struct.Value_String* %6, i32 0, i32 1
  %8 = load i8*, i8** %7, align 8
  call void @idris2_putStr(i8* noundef %8)
  ret %struct.Value* null
}

declare void @idris2_putStr(i8* noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @PrimIO_unsafePerformIO(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value_Arglist*, align 8
  %4 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value_Arglist*, align 8
  %7 = alloca %struct.Value* (%struct.Value_Arglist*)*, align 8
  %8 = alloca %struct.Value*, align 8
  %9 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %10 = call %struct.Value_Arglist* @newArglist(i32 noundef 1, i32 noundef 2)
  store %struct.Value_Arglist* %10, %struct.Value_Arglist** %3, align 8
  %11 = load %struct.Value*, %struct.Value** %2, align 8
  %12 = call %struct.Value* @newReference(%struct.Value* noundef %11)
  %13 = load %struct.Value_Arglist*, %struct.Value_Arglist** %3, align 8
  %14 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %13, i32 0, i32 3
  %15 = load %struct.Value**, %struct.Value*** %14, align 8
  %16 = getelementptr inbounds %struct.Value*, %struct.Value** %15, i64 0
  store %struct.Value* %12, %struct.Value** %16, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @PrimIO_unsafePerformIO_0_arglist, %struct.Value* (%struct.Value_Arglist*)** %4, align 8
  %17 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %4, align 8
  %18 = load %struct.Value_Arglist*, %struct.Value_Arglist** %3, align 8
  %19 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %17, %struct.Value_Arglist* noundef %18)
  %20 = bitcast %struct.Value_Closure* %19 to %struct.Value*
  store %struct.Value* %20, %struct.Value** %5, align 8
  %21 = call %struct.Value_Arglist* @newArglist(i32 noundef 0, i32 noundef 1)
  store %struct.Value_Arglist* %21, %struct.Value_Arglist** %6, align 8
  %22 = load %struct.Value*, %struct.Value** %5, align 8
  %23 = call %struct.Value* @newReference(%struct.Value* noundef %22)
  %24 = load %struct.Value_Arglist*, %struct.Value_Arglist** %6, align 8
  %25 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %24, i32 0, i32 3
  %26 = load %struct.Value**, %struct.Value*** %25, align 8
  %27 = getelementptr inbounds %struct.Value*, %struct.Value** %26, i64 0
  store %struct.Value* %23, %struct.Value** %27, align 8
  store %struct.Value* (%struct.Value_Arglist*)* @PrimIO_unsafeCreateWorld_arglist, %struct.Value* (%struct.Value_Arglist*)** %7, align 8
  %28 = load %struct.Value* (%struct.Value_Arglist*)*, %struct.Value* (%struct.Value_Arglist*)** %7, align 8
  %29 = load %struct.Value_Arglist*, %struct.Value_Arglist** %6, align 8
  %30 = call %struct.Value_Closure* @makeClosureFromArglist(%struct.Value* (%struct.Value_Arglist*)* noundef %28, %struct.Value_Arglist* noundef %29)
  %31 = bitcast %struct.Value_Closure* %30 to %struct.Value*
  store %struct.Value* %31, %struct.Value** %8, align 8
  %32 = load %struct.Value*, %struct.Value** %8, align 8
  store %struct.Value* %32, %struct.Value** %9, align 8
  %33 = load %struct.Value*, %struct.Value** %5, align 8
  call void @removeReference(%struct.Value* noundef %33)
  %34 = load %struct.Value*, %struct.Value** %9, align 8
  ret %struct.Value* %34
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @PrimIO_unsafePerformIO_0_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %9 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %8, i32 0, i32 3
  %10 = load %struct.Value**, %struct.Value*** %9, align 8
  %11 = getelementptr inbounds %struct.Value*, %struct.Value** %10, i64 1
  %12 = load %struct.Value*, %struct.Value** %11, align 8
  %13 = call %struct.Value* @PrimIO_unsafePerformIO_0(%struct.Value* noundef %7, %struct.Value* noundef %12)
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @PrimIO_unsafeCreateWorld_arglist(%struct.Value_Arglist* noundef %0) #0 {
  %2 = alloca %struct.Value_Arglist*, align 8
  store %struct.Value_Arglist* %0, %struct.Value_Arglist** %2, align 8
  %3 = load %struct.Value_Arglist*, %struct.Value_Arglist** %2, align 8
  %4 = getelementptr inbounds %struct.Value_Arglist, %struct.Value_Arglist* %3, i32 0, i32 3
  %5 = load %struct.Value**, %struct.Value*** %4, align 8
  %6 = getelementptr inbounds %struct.Value*, %struct.Value** %5, i64 0
  %7 = load %struct.Value*, %struct.Value** %6, align 8
  %8 = call %struct.Value* @PrimIO_unsafeCreateWorld(%struct.Value* noundef %7)
  ret %struct.Value* %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @PrimIO_unsafePerformIO_0(%struct.Value* noundef %0, %struct.Value* noundef %1) #0 {
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  %5 = alloca %struct.Value*, align 8
  %6 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %3, align 8
  store %struct.Value* %1, %struct.Value** %4, align 8
  %7 = load %struct.Value*, %struct.Value** %3, align 8
  %8 = load %struct.Value*, %struct.Value** %4, align 8
  %9 = call %struct.Value* @apply_closure(%struct.Value* noundef %7, %struct.Value* noundef %8)
  store %struct.Value* %9, %struct.Value** %5, align 8
  %10 = load %struct.Value*, %struct.Value** %5, align 8
  %11 = call %struct.Value* @newReference(%struct.Value* noundef %10)
  store %struct.Value* %11, %struct.Value** %6, align 8
  %12 = load %struct.Value*, %struct.Value** %5, align 8
  call void @removeReference(%struct.Value* noundef %12)
  %13 = load %struct.Value*, %struct.Value** %6, align 8
  ret %struct.Value* %13
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define %struct.Value* @PrimIO_unsafeCreateWorld(%struct.Value* noundef %0) #0 {
  %2 = alloca %struct.Value*, align 8
  %3 = alloca %struct.Value*, align 8
  %4 = alloca %struct.Value*, align 8
  store %struct.Value* %0, %struct.Value** %2, align 8
  %5 = call %struct.Value_World* @makeWorld()
  %6 = bitcast %struct.Value_World* %5 to %struct.Value*
  store %struct.Value* %6, %struct.Value** %3, align 8
  %7 = load %struct.Value*, %struct.Value** %2, align 8
  %8 = load %struct.Value*, %struct.Value** %3, align 8
  %9 = call %struct.Value* @tailcall_apply_closure(%struct.Value* noundef %7, %struct.Value* noundef %8)
  store %struct.Value* %9, %struct.Value** %4, align 8
  %10 = load %struct.Value*, %struct.Value** %3, align 8
  call void @removeReference(%struct.Value* noundef %10)
  %11 = load %struct.Value*, %struct.Value** %4, align 8
  ret %struct.Value* %11
}

declare %struct.Value_World* @makeWorld() #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define i32 @main(i32 noundef %0, i8** noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.Value*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %7 = load i32, i32* %4, align 4
  %8 = load i8**, i8*** %5, align 8
  call void @idris2_setArgs(i32 noundef %7, i8** noundef %8)
  store %struct.IORef_Storage* null, %struct.IORef_Storage** @global_IORef_Storage, align 8
  %9 = call %struct.Value* @__mainExpression_0()
  store %struct.Value* %9, %struct.Value** %6, align 8
  %10 = load %struct.Value*, %struct.Value** %6, align 8
  %11 = call %struct.Value* @trampoline(%struct.Value* noundef %10)
  ret i32 0
}

declare void @idris2_setArgs(i32 noundef, i8** noundef) #1

attributes #0 = { noinline nounwind optnone ssp uwtable(sync) "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-trapping-math"="true" "probe-stack"="__chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" }
attributes #1 = { "frame-pointer"="non-leaf" "no-trapping-math"="true" "probe-stack"="__chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" }
attributes #2 = { allocsize(0) "frame-pointer"="non-leaf" "no-trapping-math"="true" "probe-stack"="__chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" }
attributes #3 = { allocsize(0) }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6, !7, !8}
!llvm.ident = !{!9}

!0 = !{i32 2, !"SDK Version", [2 x i32] [i32 13, i32 3]}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 8, !"branch-target-enforcement", i32 0}
!3 = !{i32 8, !"sign-return-address", i32 0}
!4 = !{i32 8, !"sign-return-address-all", i32 0}
!5 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!6 = !{i32 7, !"PIC Level", i32 2}
!7 = !{i32 7, !"uwtable", i32 1}
!8 = !{i32 7, !"frame-pointer", i32 1}
!9 = !{!"Apple clang version 14.0.3 (clang-1403.0.22.14.1)"}
